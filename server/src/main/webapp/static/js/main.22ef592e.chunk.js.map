{"version":3,"sources":["logo.svg","routine/constants.js","routine/utils/services/common-service.js","routine/utils/services/login-service.js","components/security/login.js","components/tooltips.js","components/car/car.js","routine/utils/services/accident-service.js","routine/utils/services/person-service.js","components/car/edit-car-dialog.js","components/confirm-dialog.js","components/fast-styles.js","components/car/car-list.js","routine/utils/services/car-service.js","components/person/person.js","components/person/edit-person-dialog.js","components/person/person-list.js","components/offence/offence.js","routine/utils/services/offence-service.js","components/offence/edit-offence-dialog.js","components/offence/offence-list.js","components/accident/accident.js","components/accident/edit-accident-dialog.js","components/accident/accident-list.js","components/road-accident-participant/road-accident-participant.js","components/road-accident-participant/edit-road-accident-participant-dialog.js","components/road-accident-participant/road-accident-participant-list.js","routine/utils/services/road-accident-participant-service.js","components/app-header.js","components/logged-panel.js","components/main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","SERVER_URL","APP_NAME","PAGE_LOGIN_URL","PAGE_PERSON_LIST_URL","PAGE_OFFENCE_LIST_URL","PAGE_ACCIDENT_LIST_URL","PAGE_CAR_LIST_URL","LOCAL_STORAGE_USERNAME_PROPERTY","LOCAL_STORAGE_ACCESS_TOKEN_PROPERTY","configureToken","accessToken","getAccessToken","headers","Authorization","catchError","error","response","status","window","location","href","sendGetRequest","url","parameters","request","axios","get","then","data","Object","assign","catch","sendPostRequest","post","sendPutRequest","put","sendDeleteRequest","delete","tryLogin","login","password","callback","pass","localStorage","setItem","undefined","logout","removeItem","getItem","LoginComponent","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","bind","assertThisInitialized","pushHistory","state","failed","val","history","push","event","_this2","preventDefault","stopPropagation","success","setState","_this3","react_default","a","createElement","className","Form","onSubmit","FormGroup","bsSize","ControlLabel","FormControl","placeholder","onChange","target","value","type","Static","Button","block","Component","EditTooltip","Tooltip","id","DeleteTooltip","Car","car","key","codeCar","vin","governmentNumber","carBrand","model","category","color","person","idPerson","accident","codeAccident","OverlayTrigger","placement","overlay","onClick","onEdit","aria-hidden","onDelete","getAccidents","getPersons","EditCarDialog","entity","availablePersons","availableAccidents","updateEntity","loadPersons","loadAccidents","nextProps","nextContext","entityPerson","entityAccident","persons","accidents","_this$props","onConfirm","propName","newVal","defineProperty","propName2","newVal2","_this4","_this$props2","show","onHide","title","Modal","aria-labelledby","centered","Header","closeButton","Title","Body","e","defaultValue","Feedback","car_brand","Combobox_default","itemComponent","_ref","item","textField","_ref2","Footer","style","paddingBottom","ConfirmDialog","message","AddBtnStyle","margin","PageHeaderStyle","marginLeft","CarList","currentEditCar","currentDeleteCar","cars","showCreateDialog","showEditDialog","showDeleteDialog","loadData","x","AddTooltip","PageHeader","Table","striped","bordered","condensed","hover","responsive","map","car_car","edit_car_dialog_EditCarDialog","confirm_dialog_ConfirmDialog","getDeleteMessage","Person","name","surname","middleName","Intl","DateTimeFormat","year","month","day","format","dateBirth","addressPerson","role","EditPersonDialog","es","selected","displayStartDate","locale","date","getMilliseconds","PersonList","currentEditPerson","currentDeletePerson","person_person","edit_person_dialog_EditPersonDialog","Offence","offence","codeOffence","nameOffence","getOffences","EditOffenceDialog","OffenceList","currentEditOffence","currentDeleteOffence","offences","offence_offence","edit_offence_dialog_EditOffenceDialog","Accident","dateAccident","typeAccident","deathToll","numberOfVictims","weather","typeOfCoating","viewRoadConstruction","EditAccidentDialog","AccidentList","currentEditAccident","currentDeleteAccident","accident_accident","edit_accident_dialog_EditAccidentDialog","RoadAccidentParticipant","roadAccidentParticipant","codeRoadAccidentParticipant","driversLicenseNumber","typeParticipation","drivingExperience","isGuilty","availableOffences","loadOffences","entityOffence","propName3","newVal3","_this5","_ref3","RoadAccidentParticipantList","currentEditRoadAccidentParticipant","currentDeleteRoadAccidentParticipant","roadAccidentParticipants","code_road_accident_participant","road_accident_participant","edit_road_accident_participant_dialog_EditCarDialog","AppHeader","username","Navbar","inverse","Brand","Toggle","Collapse","Nav","NavItem","MenuItem","pullRight","data-toggle","logoutHandler","LoggedPanelComponent","handleLogout","currentUsername","app_header_AppHeader","BrowserRouter","Switch","Route","exact","component","MainComponent","isLoggedIn","isSuccess","path","render","security_login","loginRequest","handleLogin","App","components_main","Boolean","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.22ef592e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","export const SERVER_URL = \"http://localhost:8080\";\r\n\r\nexport const APP_NAME = \"\";\r\n\r\nexport const PAGE_LOGIN_URL = \"/login\";\r\nexport const PAGE_LOGOUT_URL = \"/logout\";\r\n\r\n//const PAGE_MAIN_URL_PREFIX = \"/rest\";\r\n//export const PAGE_PERSON_LIST_URL = PAGE_MAIN_URL_PREFIX + \"/persons\";\r\nexport const PAGE_PERSON_LIST_URL = \"/rest/persons\";\r\nexport const PAGE_OFFENCE_LIST_URL =  \"/rest/offences\";\r\nexport const PAGE_ACCIDENT_LIST_URL =  \"/rest/accidents\";\r\nexport const PAGE_CAR_LIST_URL =  \"/rest/cars\";\r\nexport const PAGE_ROAD_ACCIDENT_PARTICIPANT_LIST_URL =  \"/rest/roadAccidentParticipants\";\r\n\r\n\r\n//Login page consts\r\nexport const LOCAL_STORAGE_USERNAME_PROPERTY = \"username\";\r\nexport const LOCAL_STORAGE_ACCESS_TOKEN_PROPERTY = 'accessToken';","import axios from 'axios'\r\n\r\nimport {getAccessToken} from \"./login-service\";\r\n\r\nfunction configureToken() {\r\n    const accessToken = getAccessToken();\r\n    return accessToken\r\n        ? {\r\n            headers: {'Authorization': \"Bearer \" + accessToken}\r\n        }\r\n        : {};\r\n}\r\n\r\nconst catchError = (error) => {\r\n    if (error.response && error.response.status === 401) {\r\n        window.location.href = \"/login\";\r\n    }\r\n};\r\n\r\nexport function sendGetRequest(url, parameters) {\r\n    const request = typeof parameters === \"undefined\" ?\r\n        axios.get(url, configureToken()).then((response) => response.data) :\r\n        axios.get(url, Object.assign({}, {parameters}, configureToken())).then((response) => response.data);\r\n\r\n    request.catch(catchError);\r\n    return request;\r\n}\r\n\r\nexport function sendPostRequest(url, data) {\r\n    const request = axios.post(url, data, configureToken()).then((response) => response.data);\r\n    request.catch(catchError);\r\n    return request;\r\n}\r\n\r\nexport function sendPutRequest(url, data) {\r\n    const request = axios.put(url, data, configureToken()).then((response) => response.data);\r\n    request.catch(catchError);\r\n    return request;\r\n}\r\n\r\nexport function sendDeleteRequest(url) {\r\n    const request = axios.delete(url, configureToken());\r\n    request.catch(catchError);\r\n    return request;\r\n}","import axios from 'axios'\r\nimport {\r\n    APP_NAME,\r\n    LOCAL_STORAGE_ACCESS_TOKEN_PROPERTY,\r\n    LOCAL_STORAGE_USERNAME_PROPERTY, PAGE_ACCIDENT_LIST_URL,\r\n    PAGE_LOGIN_URL,\r\n    SERVER_URL\r\n} from '../../constants'\r\nimport {sendGetRequest} from \"./common-service\";\r\n\r\nexport function tryLogin(login, password, callback) {\r\n    const url = SERVER_URL + APP_NAME + PAGE_LOGIN_URL;\r\n    const request = axios.post(url, {\r\n        login: login,\r\n        pass: password\r\n    }).then(response => {\r\n        if (response.status === 200) {\r\n            const accessToken = response.data;\r\n            localStorage.setItem(LOCAL_STORAGE_USERNAME_PROPERTY, login);\r\n            localStorage.setItem(LOCAL_STORAGE_ACCESS_TOKEN_PROPERTY, accessToken);\r\n            return callback(accessToken);\r\n        }\r\n    });\r\n    request.catch((error) => {\r\n        callback(undefined);\r\n    });\r\n}\r\n\r\nexport function logout() {\r\n    localStorage.removeItem(LOCAL_STORAGE_ACCESS_TOKEN_PROPERTY);\r\n    localStorage.removeItem(LOCAL_STORAGE_USERNAME_PROPERTY);\r\n    const url = SERVER_URL + APP_NAME + PAGE_ACCIDENT_LIST_URL;\r\n    sendGetRequest(url)\r\n}\r\n\r\nexport function getAccessToken() {\r\n    return localStorage.getItem(LOCAL_STORAGE_ACCESS_TOKEN_PROPERTY);\r\n}\r\n\r\nexport function getCurrentUsername() {\r\n    return localStorage.getItem(LOCAL_STORAGE_USERNAME_PROPERTY);\r\n}","import React, {Component} from 'react';\r\nimport {Button, ControlLabel, Form, FormControl, FormGroup} from 'react-bootstrap'\r\nimport {getAccessToken, tryLogin} from \"../../routine/utils/services/login-service\";\r\nimport './login-style.css'\r\n\r\nclass LoginComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.pushHistory = this.pushHistory.bind(this);\r\n        this.state = {login: \"admin\", password: \"admin\", failed: false};\r\n    }\r\n\r\n    componentDidMount() {\r\n        let accessToken = getAccessToken();\r\n        if (accessToken) {\r\n            this.pushHistory(\"/\");\r\n        }\r\n    }\r\n\r\n    pushHistory(val) {\r\n        this.props.history.push(val);\r\n    }\r\n\r\n    handleLogin(login, password, callback) {\r\n\r\n\r\n        //  let g= tryLogin({login, password}, (isSuccess) => callback(isSuccess));\r\n        //  if (g) {\r\n        //   window.location.href = \"/\";\r\n        //    this.pushHistory(\"/carBodyTypes\");\r\n        //   }\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        tryLogin(this.state.login, this.state.password, (success) => {\r\n            if (success) {\r\n                this.pushHistory(\"/\");\r\n                this.setState({failed: false});\r\n            } else {\r\n                this.setState({failed: true});\r\n            }\r\n        });\r\n\r\n        /* this.props.loginRequest(\r\n              {\r\n                  login : this.state.login,\r\n                  password : this.state.password\r\n              },\r\n              (isSuccess) => {\r\n                  if (isSuccess)\r\n                      this.pushHistory(\"/\");\r\n                  else {\r\n                      this.setState({failed : true});\r\n                  }\r\n              });  */\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Login\">\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <FormGroup bsSize='medium'>\r\n                        <ControlLabel>Логин</ControlLabel>\r\n                        <FormControl placeholder=\"Введите логин\"\r\n                                     onChange={(event) => {\r\n                                         this.setState({login: event.target.value});\r\n                                     }}/>\r\n                    </FormGroup>\r\n\r\n                    <FormGroup bsSize='medium'>\r\n                        <ControlLabel>Пароль</ControlLabel>\r\n                        <FormControl placeholder=\"Введите пароль\"\r\n                                     type=\"password\"\r\n                                     onChange={(event) => {\r\n                                         this.setState({password: event.target.value});\r\n                                     }}/>\r\n                    </FormGroup>\r\n                    {this.state.failed ? <FormControl.Static>Неверный логин или пароль.</FormControl.Static> : null}\r\n                    <Button block bsSize='medium' type=\"submit\">Войти</Button>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginComponent;","import React from 'react';\r\nimport {Tooltip} from \"react-bootstrap\";\r\n\r\nexport const EditTooltip = (\r\n    <Tooltip id=\"editTooltip\">\r\n        Редактировать\r\n    </Tooltip>\r\n);\r\n\r\nexport const DeleteTooltip = (\r\n    <Tooltip id=\"deleteTooltip\">\r\n        Удалить\r\n    </Tooltip>\r\n);","import React, {Component} from 'react';\r\nimport {DeleteTooltip, EditTooltip} from \"../tooltips\";\r\nimport {OverlayTrigger} from \"react-bootstrap\";\r\n\r\n\r\nclass Car extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const car = this.props.car;\r\n        return (\r\n            <tr key={car.codeCar}>\r\n                <td>{car.codeCar}</td>\r\n                <td>{car.vin}</td>\r\n                <td>{car.governmentNumber}</td>\r\n                <td>{car.carBrand}</td>\r\n                <td>{car.model}</td>\r\n                <td>{car.category}</td>\r\n                <td>{car.color}</td>\r\n                <td>{car.person != null ? car.person.idPerson : \"\"}</td>\r\n                <td>{car.accident != null ? car.accident.codeAccident : \"\"}</td>\r\n                <td>\r\n                    <div className=\"btn-group\">\r\n                        <OverlayTrigger placement=\"top\" overlay={EditTooltip}>\r\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={this.props.onEdit}>\r\n                                <span className=\"glyphicon glyphicon-pencil\" aria-hidden=\"true\"></span>\r\n                            </button>\r\n                        </OverlayTrigger>\r\n\r\n                        <OverlayTrigger placement=\"top\" overlay={DeleteTooltip}>\r\n                            <button type=\"button\" className=\"btn btn-danger\" onClick={this.props.onDelete}>\r\n                                <span className=\"glyphicon glyphicon-remove\" aria-hidden=\"true\"></span>\r\n                            </button>\r\n                        </OverlayTrigger>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Car;\r\n","import {\r\n    sendGetRequest,\r\n    sendPostRequest,\r\n    sendPutRequest,\r\n    sendDeleteRequest\r\n} from './common-service'\r\n\r\nimport {\r\n    SERVER_URL,\r\n    APP_NAME,\r\n    PAGE_ACCIDENT_LIST_URL\r\n} from '../../constants'\r\n\r\n\r\nexport function getAccidents() {\r\n    const url = SERVER_URL + APP_NAME + PAGE_ACCIDENT_LIST_URL;\r\n    return sendGetRequest(url);\r\n}\r\n\r\nexport function addAccident(accident) {\r\n    const url = SERVER_URL + APP_NAME + PAGE_ACCIDENT_LIST_URL;\r\n    return sendPutRequest(url, accident);\r\n}\r\n\r\nexport function updateAccident(accident) {\r\n    const url = SERVER_URL + APP_NAME + PAGE_ACCIDENT_LIST_URL;\r\n    return sendPostRequest(url, accident);\r\n}\r\n\r\nexport function deleteAccident(codeAccident) {\r\n    const url = SERVER_URL + APP_NAME + PAGE_ACCIDENT_LIST_URL + \"/\" + codeAccident;\r\n    return sendDeleteRequest(url);\r\n}","import {\r\n    sendGetRequest,\r\n    sendPostRequest,\r\n    sendPutRequest,\r\n    sendDeleteRequest\r\n} from './common-service'\r\n\r\nimport {\r\n    SERVER_URL,\r\n    APP_NAME,\r\n    PAGE_PERSON_LIST_URL\r\n} from '../../constants'\r\n\r\n\r\nexport function getPersons() {\r\n    const url = SERVER_URL + APP_NAME + PAGE_PERSON_LIST_URL;\r\n    return sendGetRequest(url);\r\n}\r\n\r\nexport function addPerson(person) {\r\n    const url = SERVER_URL + APP_NAME + PAGE_PERSON_LIST_URL;\r\n    return sendPutRequest(url, person);\r\n}\r\n\r\nexport function updatePerson(person) {\r\n    const url = SERVER_URL + APP_NAME + PAGE_PERSON_LIST_URL;\r\n    return sendPostRequest(url, person);\r\n}\r\n\r\nexport function deletePerson(id) {\r\n    const url = SERVER_URL + APP_NAME + PAGE_PERSON_LIST_URL + \"/\" + id;\r\n    return sendDeleteRequest(url);\r\n}","import React, {Component} from 'react';\r\nimport {ControlLabel, Form, FormControl, FormGroup, Modal} from \"react-bootstrap\";\r\nimport {getAccidents} from '../../routine/utils/services/accident-service'\r\nimport {getPersons} from '../../routine/utils/services/person-service'\r\nimport Combobox from 'react-widgets/lib/Combobox'\r\n\r\nexport default class EditCarDialog extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            entity: {},\r\n            availablePersons: [],\r\n            availableAccidents: []\r\n\r\n        };\r\n        this.updateEntity = this.updateEntity.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadPersons();\r\n        this.loadAccidents();\r\n\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps, nextContext) {\r\n        const value = nextProps.value;\r\n        if (value === null || value === undefined) {\r\n            let entityPerson = this.state.availablePersons ? this.state.availablePersons[0] : null;\r\n            let entityAccident = this.state.availableAccidents ? this.state.availableAccidents[0] : null;\r\n            this.updateEntity('person', entityPerson, 'accident', entityAccident);\r\n        }\r\n    }\r\n\r\n    loadPersons() {\r\n        getPersons().then(persons => {\r\n            this.setState({availablePersons: persons});\r\n        })\r\n    }\r\n\r\n    loadAccidents() {\r\n        getAccidents().then(accidents => {\r\n            this.setState({availableAccidents: accidents});\r\n        })\r\n    }\r\n\r\n\r\n    handleSubmit(event) {\r\n        const {onConfirm, value} = this.props;\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        const entity = Object.assign({}, value || {}, this.state.entity);\r\n        onConfirm(entity);\r\n    }\r\n\r\n    updateEntity(propName, newVal) {\r\n        this.setState({entity: Object.assign({}, this.state.entity, {[propName]: newVal})});\r\n    }\r\n\r\n    updateEntity(propName, newVal, propName2, newVal2) {\r\n        this.setState({entity: Object.assign({}, this.state.entity, {[propName]: newVal}, {[propName2]: newVal2})});\r\n    }\r\n\r\n    render() {\r\n        const {show, onHide, title, value} = this.props;\r\n\r\n        let PersonItem = ({item}) => (\r\n            <span>\r\n                <strong>{item.idPerson}</strong>\r\n            </span>\r\n        );\r\n\r\n        let AccidentItem = ({item}) => (\r\n            <span>\r\n                <strong>{item.codeAccident}</strong>\r\n            </span>\r\n        );\r\n        let availablePersons = this.state.availablePersons;\r\n        let availableAccidents = this.state.availableAccidents;\r\n        let entity = this.state.entity;\r\n        return (\r\n            <Modal show={show}\r\n                   onHide={onHide}\r\n                   aria-labelledby=\"contained-modal-title-vcenter\"\r\n                   centered>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{title}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form onSubmit={e => this.handleSubmit(e)}>\r\n                        <FormGroup>\r\n                            <ControlLabel>{'VIN'}</ControlLabel>\r\n                            <FormControl type=\"text\"\r\n                                         defaultValue={value ? value.vin : null}\r\n                                         onChange={(newVal) => {\r\n                                             this.updateEntity('vin', newVal.target.value);\r\n                                         }}/>\r\n                            <FormControl.Feedback/>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <ControlLabel>{'Гос.номер'}</ControlLabel>\r\n                            <FormControl type=\"text\"\r\n                                         defaultValue={value ? value.governmentNumber : null}\r\n                                         onChange={(newVal) => {\r\n                                             this.updateEntity('governmentNumber', newVal.target.value);\r\n                                         }}/>\r\n                            <FormControl.Feedback/>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <ControlLabel>{'Марка'}</ControlLabel>\r\n                            <FormControl type=\"text\"\r\n                                         defaultValue={value ? value.car_brand : null}\r\n                                         onChange={(newVal) => {\r\n                                             this.updateEntity('car_brand', newVal.target.value);\r\n                                         }}/>\r\n                            <FormControl.Feedback/>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <ControlLabel>{'Модель'}</ControlLabel>\r\n                            <FormControl type=\"text\"\r\n                                         defaultValue={value ? value.model : null}\r\n                                         onChange={(newVal) => {\r\n                                             this.updateEntity('model', newVal.target.value);\r\n                                         }}/>\r\n                            <FormControl.Feedback/>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <ControlLabel>{'Категория'}</ControlLabel>\r\n                            <FormControl type=\"text\"\r\n                                         defaultValue={value ? value.category : null}\r\n                                         onChange={(newVal) => {\r\n                                             this.updateEntity('category', newVal.target.value);\r\n                                         }}/>\r\n                            <FormControl.Feedback/>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <ControlLabel>{'Цвет'}</ControlLabel>\r\n                            <FormControl type=\"text\"\r\n                                         defaultValue={value ? value.color : null}\r\n                                         onChange={(newVal) => {\r\n                                             this.updateEntity('color', newVal.target.value);\r\n                                         }}/>\r\n                            <FormControl.Feedback/>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <ControlLabel>{'Код человека'}</ControlLabel>\r\n                            <Combobox data={availablePersons}\r\n                                      defaultValue={value ? value.person : (availablePersons ? availablePersons[0] : null)}\r\n                                      itemComponent={PersonItem}\r\n                                      textField='idPerson'\r\n                                      value={entity.person}\r\n                                      onChange={item => {\r\n                                          this.updateEntity('person', item);\r\n                                      }}/>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <ControlLabel>{'Код ДТП'}</ControlLabel>\r\n                            <Combobox data={availableAccidents}\r\n                                      defaultValue={value ? value.person : (availableAccidents ? availableAccidents[0] : null)}\r\n                                      itemComponent={AccidentItem}\r\n                                      textField='codeAccident'\r\n                                      value={entity.accident}\r\n                                      onChange={item => {\r\n                                          this.updateEntity('accident', item);\r\n                                      }}/>\r\n                        </FormGroup>\r\n\r\n                        <Modal.Footer style={{paddingBottom: 0}}>\r\n                            <button type='submit' className=\"btn btn-success\">Подтвердить</button>\r\n                            <button type='button' onClick={onHide} className=\"btn btn-default\">Отмена</button>\r\n                        </Modal.Footer>\r\n                    </Form>\r\n                </Modal.Body>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {ControlLabel, Form, FormGroup, Modal} from \"react-bootstrap\";\r\n\r\nexport default class ConfirmDialog extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        const {onConfirm} = this.props;\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        onConfirm();\r\n    }\r\n\r\n    render() {\r\n        const {show, onHide, title, message} = this.props;\r\n        return (\r\n            <Modal show={show}\r\n                   onHide={onHide}\r\n                   aria-labelledby=\"contained-modal-title-vcenter\"\r\n                   centered>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{title}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form onSubmit={e => this.handleSubmit(e)}>\r\n                        <FormGroup>\r\n                            <ControlLabel>{message}</ControlLabel>\r\n                        </FormGroup>\r\n                        <Modal.Footer style={{paddingBottom: 0}}>\r\n                            <button type='submit' className=\"btn btn-success\">Подтвердить</button>\r\n                            <button type='button' onClick={onHide} className=\"btn btn-default\">Отмена</button>\r\n                        </Modal.Footer>\r\n                    </Form>\r\n                </Modal.Body>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n","export const AddBtnStyle = {\r\n    margin: '12px'\r\n};\r\n\r\nexport const PageHeaderStyle = {\r\n    marginLeft: '16px'\r\n};","import React, {Component} from 'react';\r\nimport {OverlayTrigger, PageHeader, Table, Tooltip} from \"react-bootstrap\";\r\nimport Car from './car';\r\nimport {addCar, deleteCar, getCars, updateCar} from '../../routine/utils/services/car-service'\r\n\r\nimport EditCarDialog from './edit-car-dialog'\r\nimport ConfirmDialog from '../confirm-dialog'\r\nimport {AddBtnStyle, PageHeaderStyle} from '../fast-styles'\r\n\r\nclass CarList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentEditCar: null,\r\n            currentDeleteCar: null,\r\n            cars: [],\r\n            showCreateDialog: false,\r\n            showEditDialog: false,\r\n            showDeleteDialog: false\r\n        };\r\n        this.loadData = this.loadData.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n\r\n    loadData() {\r\n        getCars()\r\n            .then(data => {\r\n                let x = Object.assign({}, this.state.cars, {data});\r\n                this.setState(\r\n                    {cars: x.data});\r\n            });\r\n    }\r\n\r\n    getDeleteMessage() {\r\n        let car = this.state.currentDeleteCar;\r\n        if (car === null || car === undefined)\r\n            return \"Вы действительно хотите удалить выбранный элемент?\";\r\n        return \"Вы действительно хотите удалить автомобиль '\" + car.codeCar + \"' владельцем которого является '\"\r\n            + car.person.idPerson + \"' побывавший в ДТП '\"\r\n            + car.accident.codeAccident + \"'?\";\r\n    }\r\n\r\n    render() {\r\n        const AddTooltip = (\r\n            <Tooltip id=\"showCarsTooltip\">\r\n                Добавить автомобиль\r\n            </Tooltip>\r\n        );\r\n\r\n        return (\r\n            <div>\r\n                <PageHeader style={PageHeaderStyle}>\r\n                    Автомобили\r\n                    <OverlayTrigger placement=\"right\" overlay={AddTooltip}>\r\n                        <button type=\"button\" style={AddBtnStyle} className=\"btn btn-default\" onClick={() => {\r\n                            this.setState({showCreateDialog: true});\r\n                        }}>\r\n                            <span className=\"glyphicon glyphicon-plus\" aria-hidden=\"true\"></span>\r\n                        </button>\r\n                    </OverlayTrigger>\r\n                </PageHeader>\r\n\r\n                <Table striped bordered condensed hover responsive>\r\n                    <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>VIN</th>\r\n                        <th>Гос.номер</th>\r\n                        <th>Марка</th>\r\n                        <th>Модель</th>\r\n                        <th>Категория</th>\r\n                        <th>Цвет</th>\r\n                        <th>Код человека</th>\r\n                        <th>Код ДТП</th>\r\n                        <th>Действия</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                        this.state.cars.map(car => {\r\n                            return <Car key={car.id} car={car}\r\n                                        onEdit={e => {\r\n                                            this.setState({currentEditCar: car, showEditDialog: true});\r\n                                        }}\r\n                                        onDelete={e => {\r\n                                            this.setState({currentDeleteCar: car, showDeleteDialog: true});\r\n                                        }}/>\r\n                        })\r\n                    }\r\n                    </tbody>\r\n                </Table>\r\n                <EditCarDialog title={'Добавить автомобиль'}\r\n                               show={this.state.showCreateDialog}\r\n                               onConfirm={(entity) => {\r\n                                   addCar(entity).then(() => {\r\n                                       this.loadData();\r\n                                       this.setState({showCreateDialog: false});\r\n                                   });\r\n                               }}\r\n                               onHide={() => {\r\n                                   this.setState({showCreateDialog: false});\r\n                               }}/>\r\n\r\n                <EditCarDialog title={'Редактировать автомобиль'}\r\n                               show={this.state.showEditDialog}\r\n                               value={this.state.currentEditCar}\r\n                               onConfirm={(entity) => {\r\n                                   updateCar(entity).then(() => {\r\n                                       this.loadData();\r\n                                       this.setState({showEditDialog: false});\r\n                                   });\r\n                               }}\r\n                               onHide={() => {\r\n                                   this.setState({showEditDialog: false});\r\n                               }}/>\r\n\r\n                <ConfirmDialog title={'Удалить автомобиль'}\r\n                               message={this.getDeleteMessage()}\r\n                               show={this.state.showDeleteDialog}\r\n                               onConfirm={() => {\r\n                                   deleteCar(this.state.currentDeleteCar.id).then(() => {\r\n                                       this.loadData();\r\n                                       this.setState({showDeleteDialog: false});\r\n                                   });\r\n                               }}\r\n                               onHide={() => {\r\n                                   this.setState({showDeleteDialog: false});\r\n                               }}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CarList;\r\n","import {\r\n    sendGetRequest,\r\n    sendPostRequest,\r\n    sendPutRequest,\r\n    sendDeleteRequest\r\n} from './common-service'\r\n\r\nimport {\r\n    SERVER_URL,\r\n    APP_NAME,\r\n    PAGE_CAR_LIST_URL\r\n} from '../../constants'\r\n\r\nexport function getCars() {\r\n    const url = SERVER_URL + APP_NAME + PAGE_CAR_LIST_URL;\r\n    return sendGetRequest(url);\r\n}\r\n\r\nexport function addCar(car) {\r\n    const url = SERVER_URL + APP_NAME + PAGE_CAR_LIST_URL;\r\n    return sendPutRequest(url, car);\r\n}\r\n\r\nexport function updateCar(car) {\r\n    const url = SERVER_URL + APP_NAME + PAGE_CAR_LIST_URL;\r\n    return sendPostRequest(url, car);\r\n}\r\n\r\nexport function deleteCar(codeCar) {\r\n    const url = SERVER_URL + APP_NAME + PAGE_CAR_LIST_URL + \"/\" + codeCar;\r\n    return sendDeleteRequest(url);\r\n}","import React, {Component} from 'react';\r\nimport {DeleteTooltip, EditTooltip} from \"../tooltips\";\r\nimport {OverlayTrigger} from \"react-bootstrap\";\r\n\r\nclass Person extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const person = this.props.person;\r\n        return (\r\n            <tr key={person.idPerson}>\r\n                <td>{person.idPerson}</td>\r\n                <td>{person.name}</td>\r\n                <td>{person.surname}</td>\r\n                <td>{person.middleName}</td>\r\n                <td>{new Intl.DateTimeFormat({\r\n                    year: 'numeric',\r\n                    month: '2-digit',\r\n                    day: '2-digit'\r\n                }).format(person.dateBirth)}</td>\r\n                <td>{person.addressPerson}</td>\r\n                <td>{person.role}</td>\r\n                <td>{person.password}</td>\r\n                <td>\r\n                    <div className=\"btn-group\">\r\n                        <OverlayTrigger placement=\"top\" overlay={EditTooltip}>\r\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={this.props.onEdit}>\r\n                                <span className=\"glyphicon glyphicon-pencil\" aria-hidden=\"true\"></span>\r\n                            </button>\r\n                        </OverlayTrigger>\r\n                        <OverlayTrigger placement=\"top\" overlay={DeleteTooltip}>\r\n                            <button type=\"button\" className=\"btn btn-danger\" onClick={this.props.onDelete}>\r\n                                <span className=\"glyphicon glyphicon-remove\" aria-hidden=\"true\"></span>\r\n                            </button>\r\n                        </OverlayTrigger>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Person;\r\n","import React, {Component} from 'react';\r\nimport {ControlLabel, Form, FormControl, FormGroup, Modal} from \"react-bootstrap\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nexport default class EditPersonDialog extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            entity: {}\r\n        }\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        const {onConfirm, value} = this.props;\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        const entity = Object.assign({}, value || {}, this.state.entity);\r\n        onConfirm(entity);\r\n    }\r\n\r\n    updateEntity(propName, newVal) {\r\n        this.setState({entity: Object.assign({}, this.state.entity, {[propName]: newVal})});\r\n    }\r\n\r\n    render() {\r\n        const {show, onHide, title, value} = this.props;\r\n        return (\r\n            <Modal show={show}\r\n                   onHide={onHide}\r\n                   aria-labelledby=\"contained-modal-title-vcenter\"\r\n                   centered>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{title}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form onSubmit={e => this.handleSubmit(e)}>\r\n                        <FormGroup>\r\n                            <ControlLabel>{'Фамилия'}</ControlLabel>\r\n                            <FormControl type=\"text\"\r\n                                         defaultValue={value ? value.surname : null}\r\n                                         onChange={(newVal) => {\r\n                                             this.updateEntity('surname', newVal.target.value);\r\n                                         }}/>\r\n                            <FormControl.Feedback/>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <ControlLabel>{'Имя'}</ControlLabel>\r\n                            <FormControl type=\"text\"\r\n                                         defaultValue={value ? value.name : null}\r\n                                         onChange={(newVal) => {\r\n                                             this.updateEntity('name', newVal.target.value);\r\n                                         }}/>\r\n                            <FormControl.Feedback/>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <ControlLabel>{'Отчество'}</ControlLabel>\r\n                            <FormControl type=\"text\"\r\n                                         defaultValue={value ? value.middleName : null}\r\n                                         onChange={(newVal) => {\r\n                                             this.updateEntity('middleName', newVal.target.value);\r\n                                         }}/>\r\n                            <FormControl.Feedback/>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <ControlLabel>{'Дата рождения'}</ControlLabel>\r\n                            <DatePicker selected={this.state.displayStartDate}\r\n                                        locale={'ru-RU'}\r\n                                        onChange={date => {\r\n                                            this.updateEntity('dateBirth', date.getMilliseconds());\r\n                                            this.setState({displayStartDate: date});\r\n                                        }}/>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <ControlLabel>{'Адрес'}</ControlLabel>\r\n                            <FormControl type=\"text\"\r\n                                         defaultValue={value ? value.addressPerson : null}\r\n                                         onChange={(newVal) => {\r\n                                             this.updateEntity('addressPerson', newVal.target.value);\r\n                                         }}/>\r\n                            <FormControl.Feedback/>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <ControlLabel>{'Роль'}</ControlLabel>\r\n                            <FormControl type=\"text\"\r\n                                         defaultValue={value ? value.role : null}\r\n                                         onChange={(newVal) => {\r\n                                             this.updateEntity('role', newVal.target.value);\r\n                                         }}/>\r\n                            <FormControl.Feedback/>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <ControlLabel>{'Пароль'}</ControlLabel>\r\n                            <FormControl type=\"text\"\r\n                                         defaultValue={value ? value.password : null}\r\n                                         onChange={(newVal) => {\r\n                                             this.updateEntity('password', newVal.target.value);\r\n                                         }}/>\r\n                            <FormControl.Feedback/>\r\n                        </FormGroup>\r\n\r\n                        <Modal.Footer style={{paddingBottom: 0}}>\r\n                            <button type='submit' className=\"btn btn-success\">Подтвердить</button>\r\n                            <button type='button' onClick={onHide} className=\"btn btn-default\">Отмена</button>\r\n                        </Modal.Footer>\r\n                    </Form>\r\n                </Modal.Body>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {OverlayTrigger, PageHeader, Table, Tooltip} from \"react-bootstrap\";\r\nimport Person from './person';\r\nimport {addPerson, deletePerson, getPersons, updatePerson} from '../../routine/utils/services/person-service'\r\n\r\nimport EditPersonDialog from './edit-person-dialog'\r\nimport ConfirmDialog from '../confirm-dialog'\r\nimport {AddBtnStyle, PageHeaderStyle} from \"../fast-styles\";\r\n\r\nclass PersonList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentEditPerson: null,\r\n            currentDeletePerson: null,\r\n            persons: [],\r\n            showCreateDialog: false,\r\n            showEditDialog: false,\r\n            showDeleteDialog: false\r\n        };\r\n        this.loadData = this.loadData.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n\r\n    loadData() {\r\n        getPersons()\r\n            .then(data => {\r\n                let x = Object.assign({}, this.state.persons, {data})\r\n                this.setState(\r\n                    {persons: x.data});\r\n            });\r\n    }\r\n\r\n    getDeleteMessage() {\r\n        let person = this.state.currentDeletePerson;\r\n        if (person === null || person === undefined)\r\n            return \"Вы действительно хотите удалить выбранный элемент?\";\r\n        return 'Вы действительно хотите удалить человека \"' + person.name +\r\n            '\" \"' + person.surname + '\" \"' + person.middleName +\r\n            +'\"? ';\r\n    }\r\n\r\n    render() {\r\n        const AddTooltip = (\r\n            <Tooltip id=\"showCarsTooltip\">\r\n                Добавить человека\r\n            </Tooltip>\r\n        );\r\n\r\n        return (\r\n            <div>\r\n                <PageHeader style={PageHeaderStyle}>\r\n                    Люди\r\n                    <OverlayTrigger placement=\"right\" overlay={AddTooltip}>\r\n                        <button style={AddBtnStyle} type=\"button\" className=\"btn btn-default\" onClick={() => {\r\n                            this.setState({showCreateDialog: true});\r\n                        }}>\r\n                            <span className=\"glyphicon glyphicon-plus\" aria-hidden=\"true\"></span>\r\n                        </button>\r\n                    </OverlayTrigger>\r\n                </PageHeader>\r\n\r\n                <Table striped bordered condensed hover responsive>\r\n                    <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th className=\"col-md-1\">Имя</th>\r\n                        <th className=\"col-md-1\">Фамилия</th>\r\n                        <th className=\"col-md-1\">Отчество</th>\r\n                        <th className=\"col-md-1\">Дата рождения</th>\r\n                        <th className=\"col-md-4\">Адрес</th>\r\n                        <th className=\"col-md-1\">Роль</th>\r\n                        <th className=\"col-md-1\">Пароль</th>\r\n                        <th>Действия</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                        this.state.persons.map(person => {\r\n                            return <Person key={person.idPerson} person={person}\r\n                                           onEdit={e => {\r\n                                               this.setState({currentEditPerson: person, showEditDialog: true});\r\n                                           }}\r\n                                           onDelete={e => {\r\n                                               this.setState({currentDeletePerson: person, showDeleteDialog: true});\r\n                                           }}/>\r\n                        })\r\n                    }\r\n                    </tbody>\r\n                </Table>\r\n\r\n                <EditPersonDialog title={'Добавить человека'}\r\n                                  show={this.state.showCreateDialog}\r\n                                  onConfirm={(entity) => {\r\n                                      addPerson(entity).then(() => {\r\n                                          this.loadData();\r\n                                          this.setState({showCreateDialog: false});\r\n                                      });\r\n                                  }}\r\n                                  onHide={() => {\r\n                                      this.setState({showCreateDialog: false});\r\n                                  }}/>\r\n\r\n                <EditPersonDialog title={'Редактирование информации о человеке'}\r\n                                  show={this.state.showEditDialog}\r\n                                  value={this.state.currentEditPerson}\r\n                                  onConfirm={(entity) => {\r\n                                      updatePerson(entity).then(() => {\r\n                                          this.loadData();\r\n                                          this.setState({showEditDialog: false});\r\n                                      });\r\n                                  }}\r\n                                  onHide={() => {\r\n                                      this.setState({showEditDialog: false});\r\n                                  }}/>\r\n\r\n                <ConfirmDialog title={'Удалить человека'}\r\n                               message={this.getDeleteMessage()}\r\n                               show={this.state.showDeleteDialog}\r\n                               onConfirm={() => {\r\n                                   deletePerson(this.state.currentDeletePerson.id).then(() => {\r\n                                       this.loadData();\r\n                                       this.setState({showDeleteDialog: false});\r\n                                   });\r\n                               }}\r\n                               onHide={() => {\r\n                                   this.setState({showDeleteDialog: false});\r\n                               }}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PersonList;\r\n","import React, {Component} from 'react';\r\nimport {DeleteTooltip, EditTooltip} from \"../tooltips\";\r\nimport {OverlayTrigger} from \"react-bootstrap\";\r\n\r\nclass Offence extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const offence = this.props.offence;\r\n        return (\r\n            <tr key={offence.codeOffence}>\r\n                <td>{offence.codeOffence}</td>\r\n                <td>{offence.nameOffence}</td>\r\n\r\n                <td>\r\n                    <div className=\"btn-group\">\r\n                        <OverlayTrigger placement=\"top\" overlay={EditTooltip}>\r\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={this.props.onEdit}>\r\n                                <span className=\"glyphicon glyphicon-pencil\" aria-hidden=\"true\"></span>\r\n                            </button>\r\n                        </OverlayTrigger>\r\n                        <OverlayTrigger placement=\"top\" overlay={DeleteTooltip}>\r\n                            <button type=\"button\" className=\"btn btn-danger\" onClick={this.props.onDelete}>\r\n                                <span className=\"glyphicon glyphicon-remove\" aria-hidden=\"true\"></span>\r\n                            </button>\r\n                        </OverlayTrigger>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Offence;","import {\r\n    sendGetRequest,\r\n    sendPostRequest,\r\n    sendPutRequest,\r\n    sendDeleteRequest\r\n} from './common-service'\r\n\r\nimport {\r\n    SERVER_URL,\r\n    APP_NAME,\r\n    PAGE_OFFENCE_LIST_URL\r\n} from '../../constants'\r\n\r\n\r\nexport function getOffences() {\r\n    const url = SERVER_URL + APP_NAME + PAGE_OFFENCE_LIST_URL;\r\n    return sendGetRequest(url);\r\n}\r\n\r\nexport function addOffence(offence) {\r\n    const url = SERVER_URL + APP_NAME + PAGE_OFFENCE_LIST_URL;\r\n    return sendPutRequest(url, offence);\r\n}\r\n\r\nexport function updateOffence(offence) {\r\n    const url = SERVER_URL + APP_NAME + PAGE_OFFENCE_LIST_URL;\r\n    return sendPostRequest(url, offence);\r\n}\r\n\r\nexport function deleteOffence(codeOffence) {\r\n    const url = SERVER_URL + APP_NAME + PAGE_OFFENCE_LIST_URL + \"/\" + codeOffence;\r\n    return sendDeleteRequest(url);\r\n}","import React, {Component} from 'react';\r\nimport {ControlLabel, Form, FormControl, FormGroup, Modal} from \"react-bootstrap\";\r\n\r\nexport default class EditOffenceDialog extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            entity: {}\r\n        }\r\n        //this.updateEntity = this.updateEntity.bind(this);\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        const {onConfirm, value} = this.props;\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        const entity = Object.assign({}, value || {}, this.state.entity);\r\n        onConfirm(entity);\r\n    }\r\n\r\n    updateEntity(propName, newVal) {\r\n        this.setState({entity: Object.assign({}, this.state.entity, {[propName]: newVal})});\r\n    }\r\n\r\n    render() {\r\n        const {show, onHide, title, value} = this.props;\r\n        return (\r\n            <Modal show={show}\r\n                   onHide={onHide}\r\n                   aria-labelledby=\"contained-modal-title-vcenter\"\r\n                   centered>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{title}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form onSubmit={e => this.handleSubmit(e)}>\r\n                        <FormGroup>\r\n                            <ControlLabel>{'Название нарушения'}</ControlLabel>\r\n                            <FormControl type=\"text\"\r\n                                         defaultValue={value ? value.nameOffence : null}\r\n                                         onChange={(newVal) => {\r\n                                             this.updateEntity('nameOffence', newVal.target.value);\r\n                                         }}/>\r\n                            <FormControl.Feedback/>\r\n                        </FormGroup>\r\n\r\n                        <Modal.Footer style={{paddingBottom: 0}}>\r\n                            <button type='submit' className=\"btn btn-success\">Подтвердить</button>\r\n                            <button type='button' onClick={onHide} className=\"btn btn-default\">Отмена</button>\r\n                        </Modal.Footer>\r\n                    </Form>\r\n                </Modal.Body>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {OverlayTrigger, PageHeader, Table, Tooltip} from \"react-bootstrap\";\r\nimport Offence from './offence';\r\nimport {\r\n    addOffence, \r\n    deleteOffence, \r\n    getOffences, \r\n    updateOffence} from '../../routine/utils/services/offence-service'\r\n\r\nimport EditOffenceDialog from './edit-offence-dialog'\r\nimport ConfirmDialog from '../confirm-dialog'\r\nimport {AddBtnStyle, PageHeaderStyle} from \"../fast-styles\";\r\n\r\nclass OffenceList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentEditOffence: null,\r\n            currentDeleteOffence: null,\r\n            offences: [],\r\n            showCreateDialog: false,\r\n            showEditDialog: false,\r\n            showDeleteDialog: false\r\n        };\r\n        this.loadData = this.loadData.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n\r\n    loadData() {\r\n        getOffences()\r\n            .then(data => {\r\n                let x = Object.assign({}, this.state.offences, {data})\r\n                this.setState(\r\n                    {offences: x.data});\r\n            });\r\n    }\r\n\r\n    getDeleteMessage() {\r\n        let offence = this.state.currentDeleteOffence;\r\n        if (offence === null || offence === undefined)\r\n            return \"Вы действительно хотите удалить выбранный элемент?\";\r\n        return 'Вы действительно хотите удалить нарушение \"' + offence.nameOffence +\r\n            +'\"? ';\r\n    }\r\n\r\n    render() {\r\n        const AddTooltip = (\r\n            <Tooltip id=\"showCarsTooltip\">\r\n                Добавить нарушение\r\n            </Tooltip>\r\n        );\r\n\r\n        return (\r\n            <div>\r\n                <PageHeader style={PageHeaderStyle}>\r\n                    Нарушения\r\n                    <OverlayTrigger placement=\"right\" overlay={AddTooltip}>\r\n                        <button style={AddBtnStyle} type=\"button\" className=\"btn btn-default\" onClick={() => {\r\n                            this.setState({showCreateDialog: true});\r\n                        }}>\r\n                            <span className=\"glyphicon glyphicon-plus\" aria-hidden=\"true\"></span>\r\n                        </button>\r\n                    </OverlayTrigger>\r\n                </PageHeader>\r\n\r\n                <Table striped bordered condensed hover responsive>\r\n                    <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>Название нарушения</th>\r\n                        <th>Действия</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                        this.state.offences.map(offence => {\r\n                            return <Offence key={offence.codeOffence} offence={offence}\r\n                                            onEdit={e => {\r\n                                                this.setState({currentEditOffence: offence, showEditDialog: true});\r\n                                            }}\r\n                                            onDelete={e => {\r\n                                                this.setState({currentDeleteOffence: offence, showDeleteDialog: true});\r\n                                            }}/>\r\n                        })\r\n                    }\r\n                    </tbody>\r\n                </Table>\r\n\r\n                <EditOffenceDialog title={'Добавить информацию о нарушении'}\r\n                                   show={this.state.showCreateDialog}\r\n                                   onConfirm={(entity) => {\r\n                                       addOffence(entity).then(() => {\r\n                                           this.loadData();\r\n                                           this.setState({showCreateDialog: false});\r\n                                       });\r\n                                   }}\r\n                                   onHide={() => {\r\n                                       this.setState({showCreateDialog: false});\r\n                                   }}/>\r\n\r\n                <EditOffenceDialog title={'Редактирование информации о нарушении'}\r\n                                   show={this.state.showEditDialog}\r\n                                   value={this.state.currentEditOffence}\r\n                                   onConfirm={(entity) => {\r\n                                       updateOffence(entity).then(() => {\r\n                                           this.loadData();\r\n                                           this.setState({showEditDialog: false});\r\n                                       });\r\n                                   }}\r\n                                   onHide={() => {\r\n                                       this.setState({showEditDialog: false});\r\n                                   }}/>\r\n\r\n                <ConfirmDialog title={'Удалить нарушение'}\r\n                               message={this.getDeleteMessage()}\r\n                               show={this.state.showDeleteDialog}\r\n                               onConfirm={() => {\r\n                                   deleteOffence(this.state.currentDeleteOffence.codeOffence).then(() => {\r\n                                       this.loadData();\r\n                                       this.setState({showDeleteDialog: false});\r\n                                   });\r\n                               }}\r\n                               onHide={() => {\r\n                                   this.setState({showDeleteDialog: false});\r\n                               }}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default OffenceList;\r\n","import React, {Component} from 'react';\r\nimport {DeleteTooltip, EditTooltip} from \"../tooltips\";\r\nimport {OverlayTrigger} from \"react-bootstrap\";\r\n\r\nclass Accident extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const accident = this.props.accident;\r\n        return (\r\n            <tr key={accident.codeAccident}>\r\n                <td>{accident.codeAccident}</td>\r\n                <td>{new Intl.DateTimeFormat({\r\n                    year: 'numeric',\r\n                    month: '2-digit',\r\n                    day: '2-digit'\r\n                }).format(accident.dateAccident)}</td>\r\n                <td>{accident.typeAccident}</td>\r\n                <td>{accident.deathToll}</td>\r\n                <td>{accident.numberOfVictims}</td>\r\n                <td>{accident.weather}</td>\r\n                <td>{accident.typeOfCoating}</td>\r\n                <td>{accident.viewRoadConstruction}</td>\r\n                <td>\r\n                    <div className=\"btn-group\">\r\n                        <OverlayTrigger placement=\"top\" overlay={EditTooltip}>\r\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={this.props.onEdit}>\r\n                                <span className=\"glyphicon glyphicon-pencil\" aria-hidden=\"true\"></span>\r\n                            </button>\r\n                        </OverlayTrigger>\r\n                        <OverlayTrigger placement=\"top\" overlay={DeleteTooltip}>\r\n                            <button type=\"button\" className=\"btn btn-danger\" onClick={this.props.onDelete}>\r\n                                <span className=\"glyphicon glyphicon-remove\" aria-hidden=\"true\"></span>\r\n                            </button>\r\n                        </OverlayTrigger>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Accident;\r\n","import React, {Component} from 'react';\r\nimport {ControlLabel, Form, FormControl, FormGroup, Modal} from \"react-bootstrap\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nexport default class EditAccidentDialog extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            entity: {}\r\n        }\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        const {onConfirm, value} = this.props;\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        const entity = Object.assign({}, value || {}, this.state.entity);\r\n        onConfirm(entity);\r\n    }\r\n\r\n    updateEntity(propName, newVal) {\r\n        this.setState({entity: Object.assign({}, this.state.entity, {[propName]: newVal})});\r\n    }\r\n\r\n    render() {\r\n        const {show, onHide, title, value} = this.props;\r\n        return (\r\n            <Modal show={show}\r\n                   onHide={onHide}\r\n                   aria-labelledby=\"contained-modal-title-vcenter\"\r\n                   centered>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{title}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form onSubmit={e => this.handleSubmit(e)}>\r\n\r\n                        <FormGroup>\r\n                            <ControlLabel>{'Дата ДТП'}</ControlLabel>\r\n                            <DatePicker selected={this.state.displayStartDate}\r\n                                        locale={'ru-RU'}\r\n                                        onChange={date => {\r\n                                            this.updateEntity('dateAccident', date.getMilliseconds());\r\n                                            this.setState({displayStartDate: date});\r\n                                        }}/>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <ControlLabel>{'Тип ДТП'}</ControlLabel>\r\n                            <FormControl type=\"text\"\r\n                                         defaultValue={value ? value.typeAccident : null}\r\n                                         onChange={(newVal) => {\r\n                                             this.updateEntity('typeAccident', newVal.target.value);\r\n                                         }}/>\r\n                            <FormControl.Feedback/>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <ControlLabel>{'Количество погибших'}</ControlLabel>\r\n                            <FormControl type=\"text\"\r\n                                         defaultValue={value ? value.deathToll : null}\r\n                                         onChange={(newVal) => {\r\n                                             this.updateEntity('deathToll', newVal.target.value);\r\n                                         }}/>\r\n                            <FormControl.Feedback/>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <ControlLabel>{'Количество пострадавших'}</ControlLabel>\r\n                            <FormControl type=\"text\"\r\n                                         defaultValue={value ? value.numberOfVictims : null}\r\n                                         onChange={(newVal) => {\r\n                                             this.updateEntity('numberOfVictims', newVal.target.value);\r\n                                         }}/>\r\n                            <FormControl.Feedback/>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <ControlLabel>{'Погодные условия'}</ControlLabel>\r\n                            <FormControl type=\"text\"\r\n                                         defaultValue={value ? value.weather : null}\r\n                                         onChange={(newVal) => {\r\n                                             this.updateEntity('weather', newVal.target.value);\r\n                                         }}/>\r\n                            <FormControl.Feedback/>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <ControlLabel>{'Вид покрытия'}</ControlLabel>\r\n                            <FormControl type=\"text\"\r\n                                         defaultValue={value ? value.typeOfCoating : null}\r\n                                         onChange={(newVal) => {\r\n                                             this.updateEntity('typeOfCoating', newVal.target.value);\r\n                                         }}/>\r\n                            <FormControl.Feedback/>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <ControlLabel>{'Вид сооружения дороги'}</ControlLabel>\r\n                            <FormControl type=\"text\"\r\n                                         defaultValue={value ? value.viewRoadConstruction : null}\r\n                                         onChange={(newVal) => {\r\n                                             this.updateEntity('viewRoadConstruction', newVal.target.value);\r\n                                         }}/>\r\n                            <FormControl.Feedback/>\r\n                        </FormGroup>\r\n\r\n                        <Modal.Footer style={{paddingBottom: 0}}>\r\n                            <button type='submit' className=\"btn btn-success\">Подтвердить</button>\r\n                            <button type='button' onClick={onHide} className=\"btn btn-default\">Отмена</button>\r\n                        </Modal.Footer>\r\n                    </Form>\r\n                </Modal.Body>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {OverlayTrigger, PageHeader, Table, Tooltip} from \"react-bootstrap\";\r\nimport Accident from './accident';\r\nimport {addAccident, deleteAccident, getAccidents, updateAccident} from '../../routine/utils/services/accident-service'\r\n\r\nimport EditAccidentDialog from './edit-accident-dialog'\r\nimport ConfirmDialog from '../confirm-dialog'\r\nimport {AddBtnStyle, PageHeaderStyle} from \"../fast-styles\";\r\n\r\nclass AccidentList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentEditAccident: null,\r\n            currentDeleteAccident: null,\r\n            accidents: [],\r\n            showCreateDialog: false,\r\n            showEditDialog: false,\r\n            showDeleteDialog: false\r\n        };\r\n        this.loadData = this.loadData.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n\r\n    loadData() {\r\n        getAccidents()\r\n            .then(data => {\r\n                let x = Object.assign({}, this.state.accidents, {data});\r\n                this.setState(\r\n                    {accidents: x.data});\r\n            });\r\n    }\r\n\r\n    getDeleteMessage() {\r\n        let accident = this.state.currentDeleteAccident;\r\n        if (accident === null || accident === undefined)\r\n            return \"Вы действительно хотите удалить выбранный элемент?\";\r\n        return 'Вы действительно хотите удалить ДТП \"' + accident.codeAccident\r\n            + '\"? ';\r\n    }\r\n\r\n    render() {\r\n        const AddTooltip = (\r\n            <Tooltip id=\"showCarsTooltip\">\r\n                Добавить ДТП\r\n            </Tooltip>\r\n        );\r\n\r\n        return (\r\n            <div>\r\n                <PageHeader style={PageHeaderStyle}>\r\n                    ДТП\r\n                    <OverlayTrigger placement=\"right\" overlay={AddTooltip}>\r\n                        <button style={AddBtnStyle} type=\"button\" className=\"btn btn-default\" onClick={() => {\r\n                            this.setState({showCreateDialog: true});\r\n                        }}>\r\n                            <span className=\"glyphicon glyphicon-plus\" aria-hidden=\"true\"></span>\r\n                        </button>\r\n                    </OverlayTrigger>\r\n                </PageHeader>\r\n\r\n                <Table striped bordered condensed hover responsive>\r\n                    <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>Дата ДТП</th>\r\n                        <th>Тип ДТП</th>\r\n                        <th>Погибло</th>\r\n                        <th>Пострадало</th>\r\n                        <th>Погодные условия</th>\r\n                        <th>Вид покрытия</th>\r\n                        <th>Вид сооружения дороги</th>\r\n                        <th>Действия</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                        this.state.accidents.map(accident => {\r\n                            return <Accident key={accident.codeAccident} accident={accident}\r\n                                             onEdit={e => {\r\n                                                 this.setState({currentEditAccident: accident, showEditDialog: true});\r\n                                             }}\r\n                                             onDelete={e => {\r\n                                                 this.setState({\r\n                                                     currentDeleteAccident: accident,\r\n                                                     showDeleteDialog: true\r\n                                                 });\r\n                                             }}/>\r\n                        })\r\n                    }\r\n                    </tbody>\r\n                </Table>\r\n\r\n                <EditAccidentDialog title={'Добавить ДТП'}\r\n                                    show={this.state.showCreateDialog}\r\n                                    onConfirm={(entity) => {\r\n                                        addAccident(entity).then(() => {\r\n                                            this.loadData();\r\n                                            this.setState({showCreateDialog: false});\r\n                                        });\r\n                                    }}\r\n                                    onHide={() => {\r\n                                        this.setState({showCreateDialog: false});\r\n                                    }}/>\r\n\r\n                <EditAccidentDialog title={'Редактирование информации о ДТП'}\r\n                                    show={this.state.showEditDialog}\r\n                                    value={this.state.currentEditAccident}\r\n                                    onConfirm={(entity) => {\r\n                                        updateAccident(entity).then(() => {\r\n                                            this.loadData();\r\n                                            this.setState({showEditDialog: false});\r\n                                        });\r\n                                    }}\r\n                                    onHide={() => {\r\n                                        this.setState({showEditDialog: false});\r\n                                    }}/>\r\n\r\n                <ConfirmDialog title={'Удалить ДТП'}\r\n                               message={this.getDeleteMessage()}\r\n                               show={this.state.showDeleteDialog}\r\n                               onConfirm={() => {\r\n                                   deleteAccident(this.state.currentDeleteAccident.codeAccident).then(() => {\r\n                                       this.loadData();\r\n                                       this.setState({showDeleteDialog: false});\r\n                                   });\r\n                               }}\r\n                               onHide={() => {\r\n                                   this.setState({showDeleteDialog: false});\r\n                               }}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AccidentList;\r\n","import React, {Component} from 'react';\r\nimport {DeleteTooltip, EditTooltip} from \"../tooltips\";\r\nimport {OverlayTrigger} from \"react-bootstrap\";\r\n\r\nclass RoadAccidentParticipant extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const roadAccidentParticipant = this.props.roadAccidentParticipant;\r\n        return (\r\n            <tr key={roadAccidentParticipant.codeRoadAccidentParticipant}>\r\n                <td>{roadAccidentParticipant.codeRoadAccidentParticipant}</td>\r\n                <td>{roadAccidentParticipant.driversLicenseNumber}</td>\r\n                <td>{roadAccidentParticipant.typeParticipation}</td>\r\n                <td>{roadAccidentParticipant.drivingExperience}</td>\r\n                <td>{roadAccidentParticipant.isGuilty}</td>\r\n                <td>{roadAccidentParticipant.person != null ? roadAccidentParticipant.person.idPerson : \"\"}</td>\r\n                <td>{roadAccidentParticipant.accident != null ? roadAccidentParticipant.accident.codeAccident : \"\"}</td>\r\n                <td>{roadAccidentParticipant.offence != null ? roadAccidentParticipant.offence.codeOffence : \"\"}</td>\r\n                <td>\r\n                    <div className=\"btn-group\">\r\n                        <OverlayTrigger placement=\"top\" overlay={EditTooltip}>\r\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={this.props.onEdit}>\r\n                                <span className=\"glyphicon glyphicon-pencil\" aria-hidden=\"true\"></span>\r\n                            </button>\r\n                        </OverlayTrigger>\r\n\r\n                        <OverlayTrigger placement=\"top\" overlay={DeleteTooltip}>\r\n                            <button type=\"button\" className=\"btn btn-danger\" onClick={this.props.onDelete}>\r\n                                <span className=\"glyphicon glyphicon-remove\" aria-hidden=\"true\"></span>\r\n                            </button>\r\n                        </OverlayTrigger>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RoadAccidentParticipant;\r\n","import React, {Component} from 'react';\r\nimport {ControlLabel, Form, FormControl, FormGroup, Modal} from \"react-bootstrap\";\r\nimport {getAccidents} from '../../routine/utils/services/accident-service'\r\nimport {getPersons} from '../../routine/utils/services/person-service'\r\nimport {getOffences} from '../../routine/utils/services/offence-service'\r\nimport Combobox from 'react-widgets/lib/Combobox'\r\n\r\nexport default class EditCarDialog extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            entity: {},\r\n            availablePersons: [],\r\n            availableAccidents: [],\r\n            availableOffences: []\r\n\r\n        };\r\n        this.updateEntity = this.updateEntity.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadPersons();\r\n        this.loadAccidents();\r\n        this.loadOffences();\r\n\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps, nextContext) {\r\n        const value = nextProps.value;\r\n        if (value === null || value === undefined) {\r\n            let entityPerson = this.state.availablePersons ? this.state.availablePersons[0] : null;\r\n            let entityAccident = this.state.availableAccidents ? this.state.availableAccidents[0] : null;\r\n            let entityOffence = this.state.availableOffences ? this.state.availableOffences[0] : null;\r\n            this.updateEntity('person', entityPerson, 'accident', entityAccident, 'offence', entityOffence);\r\n        }\r\n    }\r\n\r\n    loadPersons() {\r\n        getPersons().then(persons => {\r\n            this.setState({availablePersons: persons});\r\n        })\r\n    }\r\n\r\n    loadAccidents() {\r\n        getAccidents().then(accidents => {\r\n            this.setState({availableAccidents: accidents});\r\n        })\r\n    }\r\n\r\n    loadOffences() {\r\n        getOffences().then(offences => {\r\n            this.setState({availableOffences: offences});\r\n        })\r\n    }\r\n\r\n\r\n    handleSubmit(event) {\r\n        const {onConfirm, value} = this.props;\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        const entity = Object.assign({}, value || {}, this.state.entity);\r\n        onConfirm(entity);\r\n    }\r\n\r\n    updateEntity(propName, newVal) {\r\n        this.setState({entity: Object.assign({}, this.state.entity, {[propName]: newVal})});\r\n    }\r\n\r\n    updateEntity(propName, newVal, propName2, newVal2) {\r\n        this.setState({entity: Object.assign({}, this.state.entity, {[propName]: newVal}, {[propName2]: newVal2})});\r\n    }\r\n\r\n    updateEntity(propName, newVal, propName2, newVal2, propName3, newVal3) {\r\n        this.setState({entity: Object.assign({}, this.state.entity, {[propName]: newVal}, {[propName2]: newVal2}, {[propName3]: newVal3})});\r\n    }\r\n\r\n    render() {\r\n        const {show, onHide, title, value} = this.props;\r\n\r\n        let PersonItem = ({item}) => (\r\n            <span>\r\n                <strong>{item.idPerson}</strong>\r\n            </span>\r\n        );\r\n\r\n        let AccidentItem = ({item}) => (\r\n            <span>\r\n                <strong>{item.codeAccident}</strong>\r\n            </span>\r\n        );\r\n\r\n        let OffenceItem = ({item}) => (\r\n            <span>\r\n                <strong>{item.codeOffence}</strong>\r\n            </span>\r\n        );\r\n        let availablePersons = this.state.availablePersons;\r\n        let availableAccidents = this.state.availableAccidents;\r\n        let availableOffences = this.state.availableOffences;\r\n        let entity = this.state.entity;\r\n        return (\r\n            <Modal show={show}\r\n                   onHide={onHide}\r\n                   aria-labelledby=\"contained-modal-title-vcenter\"\r\n                   centered>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{title}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form onSubmit={e => this.handleSubmit(e)}>\r\n                        <FormGroup>\r\n                            <ControlLabel>{'Номер водительского удостоверения'}</ControlLabel>\r\n                            <FormControl type=\"text\"\r\n                                         defaultValue={value ? value.driversLicenseNumber : null}\r\n                                         onChange={(newVal) => {\r\n                                             this.updateEntity('driversLicenseNumber', newVal.target.value);\r\n                                         }}/>\r\n                            <FormControl.Feedback/>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <ControlLabel>{'Вид участия'}</ControlLabel>\r\n                            <FormControl type=\"text\"\r\n                                         defaultValue={value ? value.typeParticipation : null}\r\n                                         onChange={(newVal) => {\r\n                                             this.updateEntity('typeParticipation', newVal.target.value);\r\n                                         }}/>\r\n                            <FormControl.Feedback/>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <ControlLabel>{'Водительский стаж'}</ControlLabel>\r\n                            <FormControl type=\"text\"\r\n                                         defaultValue={value ? value.drivingExperience : null}\r\n                                         onChange={(newVal) => {\r\n                                             this.updateEntity('drivingExperience', newVal.target.value);\r\n                                         }}/>\r\n                            <FormControl.Feedback/>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <ControlLabel>{'Виновен ли?'}</ControlLabel>\r\n                            <FormControl type=\"text\"\r\n                                         defaultValue={value ? value.isGuilty : null}\r\n                                         onChange={(newVal) => {\r\n                                             this.updateEntity('isGuilty', newVal.target.value);\r\n                                         }}/>\r\n                            <FormControl.Feedback/>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <ControlLabel>{'Код человека'}</ControlLabel>\r\n                            <Combobox data={availablePersons}\r\n                                      defaultValue={value ? value.person : (availablePersons ? availablePersons[0] : null)}\r\n                                      itemComponent={PersonItem}\r\n                                      textField='idPerson'\r\n                                      value={entity.person}\r\n                                      onChange={item => {\r\n                                          this.updateEntity('person', item);\r\n                                      }}/>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <ControlLabel>{'Код ДТП'}</ControlLabel>\r\n                            <Combobox data={availableAccidents}\r\n                                      defaultValue={value ? value.person : (availableAccidents ? availableAccidents[0] : null)}\r\n                                      itemComponent={AccidentItem}\r\n                                      textField='codeAccident'\r\n                                      value={entity.accident}\r\n                                      onChange={item => {\r\n                                          this.updateEntity('accident', item);\r\n                                      }}/>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <ControlLabel>{'Код нарушения'}</ControlLabel>\r\n                            <Combobox data={availableOffences}\r\n                                      defaultValue={value ? value.person : (availableOffences ? availableOffences[0] : null)}\r\n                                      itemComponent={OffenceItem}\r\n                                      textField='codeOffence'\r\n                                      value={entity.offence}\r\n                                      onChange={item => {\r\n                                          this.updateEntity('offence', item);\r\n                                      }}/>\r\n                        </FormGroup>\r\n\r\n                        <Modal.Footer style={{paddingBottom: 0}}>\r\n                            <button type='submit' className=\"btn btn-success\">Подтвердить</button>\r\n                            <button type='button' onClick={onHide} className=\"btn btn-default\">Отмена</button>\r\n                        </Modal.Footer>\r\n                    </Form>\r\n                </Modal.Body>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {OverlayTrigger, PageHeader, Table, Tooltip} from \"react-bootstrap\";\r\nimport RoadAccidentParticipant from './road-accident-participant'\r\nimport {\r\n    addRoadAccidentParticipant,\r\n    deleteRoadAccidentParticipant,\r\n    getRoadAccidentParticipants,\r\n    updateRoadAccidentParticipant\r\n} from '../../routine/utils/services/road-accident-participant-service'\r\n\r\nimport EditRoadAccidentParticipantDialog from './edit-road-accident-participant-dialog'\r\nimport ConfirmDialog from '../confirm-dialog'\r\nimport {AddBtnStyle, PageHeaderStyle} from '../fast-styles'\r\n\r\nclass RoadAccidentParticipantList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentEditRoadAccidentParticipant: null,\r\n            currentDeleteRoadAccidentParticipant: null,\r\n            roadAccidentParticipants: [],\r\n            showCreateDialog: false,\r\n            showEditDialog: false,\r\n            showDeleteDialog: false\r\n        };\r\n        this.loadData = this.loadData.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n\r\n    loadData() {\r\n        getRoadAccidentParticipants()\r\n            .then(data => {\r\n                let x = Object.assign({}, this.state.roadAccidentParticipants, {data});\r\n                this.setState(\r\n                    {roadAccidentParticipants: x.data});\r\n            });\r\n    }\r\n\r\n    getDeleteMessage() {\r\n        let roadAccidentParticipant = this.state.currentDeleteRoadAccidentParticipant;\r\n        if (roadAccidentParticipant === null || roadAccidentParticipant === undefined)\r\n            return \"Вы действительно хотите удалить выбранный элемент?\";\r\n        return \"Вы действительно хотите удалить участника ДТП '\"\r\n            + roadAccidentParticipant.code_road_accident_participant + \"'?\";\r\n    }\r\n\r\n    render() {\r\n        const AddTooltip = (\r\n            <Tooltip id=\"showCarsTooltip\">\r\n                Добавить участника ДТП\r\n            </Tooltip>\r\n        );\r\n\r\n        return (\r\n            <div>\r\n                <PageHeader style={PageHeaderStyle}>\r\n                    Участники ДТП\r\n                    <OverlayTrigger placement=\"right\" overlay={AddTooltip}>\r\n                        <button type=\"button\" style={AddBtnStyle} className=\"btn btn-default\" onClick={() => {\r\n                            this.setState({showCreateDialog: true});\r\n                        }}>\r\n                            <span className=\"glyphicon glyphicon-plus\" aria-hidden=\"true\"></span>\r\n                        </button>\r\n                    </OverlayTrigger>\r\n                </PageHeader>\r\n\r\n                <Table striped bordered condensed hover responsive>\r\n                    <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>Номер водительского удостоверения</th>\r\n                        <th>Вид участия</th>\r\n                        <th>Водительский стаж</th>\r\n                        <th>Вина</th>\r\n                        <th>Код человека</th>\r\n                        <th>Код ДТП</th>\r\n                        <th>Код нарушения</th>\r\n                        <th>Действия</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                        this.state.roadAccidentParticipants.map(roadAccidentParticipant => {\r\n                            return <RoadAccidentParticipant key={roadAccidentParticipant.code_road_accident_participant}\r\n                                                            roadAccidentParticipant={roadAccidentParticipant}\r\n                                                            onEdit={e => {\r\n                                                                this.setState({\r\n                                                                    currentEditRoadAccidentParticipant: roadAccidentParticipant,\r\n                                                                    showEditDialog: true\r\n                                                                });\r\n                                                            }}\r\n                                                            onDelete={e => {\r\n                                                                this.setState({\r\n                                                                    currentDeleteRoadAccidentParticipant: roadAccidentParticipant,\r\n                                                                    showDeleteDialog: true\r\n                                                                });\r\n                                                            }}/>\r\n                        })\r\n                    }\r\n                    </tbody>\r\n                </Table>\r\n                <EditRoadAccidentParticipantDialog title={'Добавить участника ДТП'}\r\n                                                   show={this.state.showCreateDialog}\r\n                                                   onConfirm={(entity) => {\r\n                                                       addRoadAccidentParticipant(entity).then(() => {\r\n                                                           this.loadData();\r\n                                                           this.setState({showCreateDialog: false});\r\n                                                       });\r\n                                                   }}\r\n                                                   onHide={() => {\r\n                                                       this.setState({showCreateDialog: false});\r\n                                                   }}/>\r\n\r\n                <EditRoadAccidentParticipantDialog title={'Редактировать участника ДТП'}\r\n                                                   show={this.state.showEditDialog}\r\n                                                   value={this.state.currentEditRoadAccidentParticipant}\r\n                                                   onConfirm={(entity) => {\r\n                                                       updateRoadAccidentParticipant(entity).then(() => {\r\n                                                           this.loadData();\r\n                                                           this.setState({showEditDialog: false});\r\n                                                       });\r\n                                                   }}\r\n                                                   onHide={() => {\r\n                                                       this.setState({showEditDialog: false});\r\n                                                   }}/>\r\n\r\n                <ConfirmDialog title={'Удалить участника ДТП'}\r\n                               message={this.getDeleteMessage()}\r\n                               show={this.state.showDeleteDialog}\r\n                               onConfirm={() => {\r\n                                   deleteRoadAccidentParticipant(this.state.currentDeleteRoadAccidentParticipant.id).then(() => {\r\n                                       this.loadData();\r\n                                       this.setState({showDeleteDialog: false});\r\n                                   });\r\n                               }}\r\n                               onHide={() => {\r\n                                   this.setState({showDeleteDialog: false});\r\n                               }}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RoadAccidentParticipantList;\r\n","import {\r\n    sendGetRequest,\r\n    sendPostRequest,\r\n    sendPutRequest,\r\n    sendDeleteRequest\r\n} from './common-service'\r\n\r\nimport {\r\n    SERVER_URL,\r\n    APP_NAME,\r\n    PAGE_CAR_LIST_URL\r\n} from '../../constants'\r\n\r\nexport function getRoadAccidentParticipants() {\r\n    const url = SERVER_URL + APP_NAME + PAGE_CAR_LIST_URL;\r\n    return sendGetRequest(url);\r\n}\r\n\r\nexport function addRoadAccidentParticipant(car) {\r\n    const url = SERVER_URL + APP_NAME + PAGE_CAR_LIST_URL;\r\n    return sendPutRequest(url, car);\r\n}\r\n\r\nexport function updateRoadAccidentParticipant(car) {\r\n    const url = SERVER_URL + APP_NAME + PAGE_CAR_LIST_URL;\r\n    return sendPostRequest(url, car);\r\n}\r\n\r\nexport function deleteRoadAccidentParticipant(code_road_accident_participant) {\r\n    const url = SERVER_URL + APP_NAME + PAGE_CAR_LIST_URL + \"/\" + code_road_accident_participant;\r\n    return sendDeleteRequest(url);\r\n}","import React, {Component} from 'react';\r\nimport {Nav, Navbar, NavItem} from \"react-bootstrap\";\r\nimport MenuItem from \"react-bootstrap/es/MenuItem\";\r\n\r\nexport default class AppHeader extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        let userName = this.props.username;\r\n        return (\r\n            <Navbar inverse>\r\n                <Navbar.Header>\r\n                    <Navbar.Brand>\r\n                        <a href=\"#\">ДТП</a>\r\n                    </Navbar.Brand>\r\n                    <Navbar.Toggle/>\r\n                </Navbar.Header>\r\n                <Navbar.Collapse>\r\n                    <Nav>\r\n                        <NavItem>ДТП</NavItem>\r\n                        <NavItem>Участники ДТП</NavItem>\r\n                        <MenuItem>Автомобили</MenuItem>\r\n                        <NavItem>Люди</NavItem>\r\n                        <NavItem>Нарушения</NavItem>\r\n                    </Nav>\r\n\r\n                    <Nav pullRight>\r\n                        <NavItem data-toggle=\"tooltip\" title=\"На страницу аутентификации\"\r\n                                 onClick={this.props.logoutHandler}>\r\n                            <label>Выйти</label>\r\n                            <span className=\"glyphicon glyphicon-log-out\" aria-hidden=\"true\"></span></NavItem>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\n\r\n","import React, {Component} from 'react';\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\r\n\r\nimport CarList from './car/car-list';\r\nimport PersonList from './person/person-list'\r\nimport OffenceList from './offence/offence-list'\r\nimport AccidentList from './accident/accident-list'\r\nimport RoadAccidentParticipantList from './road-accident-participant/road-accident-participant-list'\r\nimport {getCurrentUsername, logout} from \"../routine/utils/services/login-service\";\r\n\r\nimport AppHeader from './app-header'\r\n\r\nimport './logged-panel'\r\n\r\nclass LoggedPanelComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: ''\r\n        };\r\n        this.handleLogout = this.handleLogout.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        let currentUsername = getCurrentUsername();\r\n        this.setState({username: currentUsername});\r\n    }\r\n\r\n    handleLogout() {\r\n        logout();\r\n    }\r\n\r\n    render() {\r\n        // if (this.state.isLoggedIn) {\r\n        return (\r\n            <div>\r\n                <AppHeader logoutHandler={this.handleLogout} username={this.state.username}/>\r\n                <BrowserRouter>\r\n                    <Switch>\r\n                        <Route exact component={CarList}/>\r\n                        <Route exact component={RoadAccidentParticipantList}/>\r\n                        <Route exact component={AccidentList}/>\r\n                        <Route exact component={PersonList}/>\r\n                        <Route exact component={OffenceList}/>\r\n                        <Route exact component={AccidentList}/>\r\n                    </Switch>\r\n                </BrowserRouter>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default LoggedPanelComponent;","import React, {Component} from 'react';\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\r\nimport LoginComponent from './security/login'\r\nimport '../components/main.css'\r\n\r\nimport {getAccessToken, logout, tryLogin} from \"../routine/utils/services/login-service\";\r\n\r\nimport LoggedPanelComponent from './logged-panel'\r\n\r\nclass MainComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoggedIn: false\r\n        };\r\n        this.handleLogout = this.handleLogout.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        let accessToken = getAccessToken();\r\n        this.setState({isLoggedIn: !!accessToken});\r\n    }\r\n\r\n    handleLogin({login, password}, callback) {\r\n        let g = tryLogin({login, password}, (isSuccess) => callback(isSuccess));\r\n        if (g) {\r\n            //   window.location.href = \"/\";\r\n            //    this.pushHistory(\"/carBodyTypes\");\r\n        }\r\n    }\r\n\r\n    handleLogout() {\r\n        logout();\r\n    }\r\n\r\n    render() {\r\n        // if (this.state.isLoggedIn) {\r\n        return (\r\n            <div className='DarkDiv'>\r\n                <BrowserRouter>\r\n                    <Switch>\r\n                        <Route exact path=\"/login\"\r\n                               render={props => (\r\n                                   <LoginComponent {...props} loginRequest={this.handleLogin}/>\r\n                               )}/>\r\n                        <Route component={LoggedPanelComponent}/>\r\n                    </Switch>\r\n                </BrowserRouter>\r\n            </div>\r\n        );\r\n        //   }\r\n        // else {\r\n        //     return ( <LoginComponent loginRequest={this.handleLogin}/>); }\r\n\r\n    }\r\n}\r\n\r\nexport default MainComponent;","import React, {Component} from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport MainComponent from './components/main';\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <MainComponent/>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            );\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\n//import Main from './app/main.component';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n//ReactDOM.render(<Main />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}