{"version":3,"sources":["logo.svg","routine/constants.js","routine/utils/services/common-service.js","routine/utils/services/login-service.js","components/security/login.js","components/tooltips.js","components/car/car.js","routine/utils/services/accident-service.js","routine/utils/services/person-service.js","components/car/edit-car-dialog.js","components/confirm-dialog.js","components/fast-styles.js","components/car/car-list.js","routine/utils/services/car-service.js","components/person/person.js","components/person/edit-person-dialog.js","components/person/person-list.js","components/offence/offence.js","routine/utils/services/offence-service.js","components/offence/edit-offence-dialog.js","components/offence/offence-list.js","components/accident/accident.js","components/accident/edit-accident-dialog.js","components/accident/accident-list.js","components/road-accident-participant/road-accident-participant.js","components/road-accident-participant/edit-road-accident-participant-dialog.js","components/road-accident-participant/road-accident-participant-list.js","routine/utils/services/road-accident-participant-service.js","components/app-header.js","components/logged-panel.js","components/main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","SERVER_URL","APP_NAME","PAGE_LOGIN_URL","PAGE_PERSON_LIST_URL","PAGE_MAIN_URL_PREFIX","PAGE_OFFENCE_LIST_URL","PAGE_ACCIDENT_LIST_URL","PAGE_CAR_LIST_URL","LOCAL_STORAGE_USERNAME_PROPERTY","LOCAL_STORAGE_ACCESS_TOKEN_PROPERTY","configureToken","accessToken","getAccessToken","headers","Authorization","catchError","error","response","status","window","location","href","sendGetRequest","url","parameters","request","axios","get","then","data","Object","assign","catch","sendPostRequest","post","sendPutRequest","put","sendDeleteRequest","delete","tryLogin","login","password","callback","pass","localStorage","setItem","undefined","logout","removeItem","getItem","LoginComponent","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","bind","assertThisInitialized","pushHistory","state","failed","val","history","push","event","_this2","preventDefault","stopPropagation","success","setState","_this3","react_default","a","createElement","className","Form","onSubmit","FormGroup","bsSize","ControlLabel","FormControl","placeholder","onChange","target","value","type","Static","Button","block","Component","EditTooltip","Tooltip","id","DeleteTooltip","Car","car","key","codeCar","vin","governmentNumber","car_brand","model","category","color","person","idPerson","accident","codeAccident","OverlayTrigger","placement","overlay","onClick","onEdit","aria-hidden","onDelete","getAccidents","getPersons","EditCarDialog","entity","availablePersons","availableAccidents","updateEntity","loadPersons","loadAccidents","nextProps","nextContext","entityPerson","entityAccident","persons","accidents","_this$props","onConfirm","propName","newVal","defineProperty","propName2","newVal2","_this4","_this$props2","show","onHide","title","Modal","aria-labelledby","centered","Header","closeButton","Title","Body","e","defaultValue","Feedback","Combobox_default","itemComponent","_ref","item","textField","_ref2","Footer","style","paddingBottom","ConfirmDialog","message","AddBtnStyle","margin","PageHeaderStyle","marginLeft","CarList","currentEditCar","currentDeleteCar","cars","showCreateDialog","showEditDialog","showDeleteDialog","loadData","x","AddTooltip","PageHeader","Table","striped","bordered","condensed","hover","responsive","map","car_car","edit_car_dialog_EditCarDialog","confirm_dialog_ConfirmDialog","getDeleteMessage","Person","name","surname","middleName","dateBirth","addressPerson","role","EditPersonDialog","es","selected","displayStartDate","locale","date","getMilliseconds","PersonList","currentEditPerson","currentDeletePerson","person_person","edit_person_dialog_EditPersonDialog","Offence","offence","codeOffence","nameOffence","getOffences","EditOffenceDialog","OffenceList","currentEditOffence","currentDeleteOffence","offences","offence_offence","edit_offence_dialog_EditOffenceDialog","Accident","dateAccident","typeAccident","deathToll","numberOfVictims","weather","typeOfCoating","viewRoadConstruction","EditAccidentDialog","AccidentList","currentEditAccident","currentDeleteAccident","accident_accident","edit_accident_dialog_EditAccidentDialog","RoadAccidentParticipant","roadAccidentParticipant","code_road_accident_participant","driversLicenseNumber","typeParticipation","drivingExperience","isGuilty","availableOffences","loadOffences","entityOffence","propName3","newVal3","_this5","_ref3","RoadAccidentParticipantList","currentEditRoadAccidentParticipant","currentDeleteRoadAccidentParticipant","roadAccidentParticipants","road_accident_participant","edit_road_accident_participant_dialog_EditCarDialog","AppHeader","username","Navbar","inverse","Brand","Toggle","Collapse","Nav","NavItem","MenuItem","pullRight","data-toggle","logoutHandler","LoggedPanelComponent","handleLogout","currentUsername","app_header_AppHeader","BrowserRouter","Switch","Route","exact","path","component","MainComponent","isLoggedIn","isSuccess","render","security_login","loginRequest","handleLogin","App","components_main","Boolean","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0dd466cb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export const SERVER_URL = \"http://localhost:8080\";\n\nexport const APP_NAME = \"\";\n\nexport const PAGE_LOGIN_URL = \"/login\";\nexport const PAGE_LOGOUT_URL = \"/logout\";\n\nconst PAGE_MAIN_URL_PREFIX = \"/rest\";\nexport const PAGE_PERSON_LIST_URL = PAGE_MAIN_URL_PREFIX + \"/persons\";\nexport const PAGE_OFFENCE_LIST_URL = PAGE_MAIN_URL_PREFIX + \"/offences\";\nexport const PAGE_ACCIDENT_LIST_URL = PAGE_MAIN_URL_PREFIX + \"/accidents\";\nexport const PAGE_CAR_LIST_URL = PAGE_MAIN_URL_PREFIX + \"/cars\";\nexport const PAGE_ROAD_ACCIDENT_PARTICIPANT_LIST_URL = PAGE_MAIN_URL_PREFIX + \"/roadAccidentParticipants\";\n\n\n//Login page consts\nexport const LOCAL_STORAGE_USERNAME_PROPERTY = \"username\";\nexport const LOCAL_STORAGE_ACCESS_TOKEN_PROPERTY = 'accessToken';","import axios from 'axios'\n\nimport {getAccessToken} from \"./login-service\";\n\nfunction configureToken() {\n    const accessToken = getAccessToken();\n    return accessToken\n        ? {\n            headers: {'Authorization': \"Bearer \" + accessToken}\n        }\n        : {};\n}\n\nconst catchError = (error) => {\n    if (error.response && error.response.status === 401) {\n        window.location.href = \"/login\";\n    }\n};\n\nexport function sendGetRequest(url, parameters) {\n    const request = typeof parameters === \"undefined\" ?\n        axios.get(url, configureToken()).then((response) => response.data) :\n        axios.get(url, Object.assign({}, {parameters}, configureToken())).then((response) => response.data);\n\n    request.catch(catchError);\n    return request;\n}\n\nexport function sendPostRequest(url, data) {\n    const request = axios.post(url, data, configureToken()).then((response) => response.data);\n    request.catch(catchError);\n    return request;\n}\n\nexport function sendPutRequest(url, data) {\n    const request = axios.put(url, data, configureToken()).then((response) => response.data);\n    request.catch(catchError);\n    return request;\n}\n\nexport function sendDeleteRequest(url) {\n    const request = axios.delete(url, configureToken());\n    request.catch(catchError);\n    return request;\n}","import axios from 'axios'\nimport {\n    APP_NAME,\n    LOCAL_STORAGE_ACCESS_TOKEN_PROPERTY,\n    LOCAL_STORAGE_USERNAME_PROPERTY, PAGE_ACCIDENT_LIST_URL,\n    PAGE_LOGIN_URL,\n    SERVER_URL\n} from '../../constants'\nimport {sendGetRequest} from \"./common-service\";\n\nexport function tryLogin(login, password, callback) {\n    const url = SERVER_URL + APP_NAME + PAGE_LOGIN_URL;\n    const request = axios.post(url, {\n        login: login,\n        pass: password\n    }).then(response => {\n        if (response.status === 200) {\n            const accessToken = response.data;\n            localStorage.setItem(LOCAL_STORAGE_USERNAME_PROPERTY, login);\n            localStorage.setItem(LOCAL_STORAGE_ACCESS_TOKEN_PROPERTY, accessToken);\n            return callback(accessToken);\n        }\n    });\n    request.catch((error) => {\n        callback(undefined);\n    });\n}\n\nexport function logout() {\n    localStorage.removeItem(LOCAL_STORAGE_ACCESS_TOKEN_PROPERTY);\n    localStorage.removeItem(LOCAL_STORAGE_USERNAME_PROPERTY);\n    const url = SERVER_URL + APP_NAME + PAGE_ACCIDENT_LIST_URL;\n    sendGetRequest(url)\n}\n\nexport function getAccessToken() {\n    return localStorage.getItem(LOCAL_STORAGE_ACCESS_TOKEN_PROPERTY);\n}\n\nexport function getCurrentUsername() {\n    return localStorage.getItem(LOCAL_STORAGE_USERNAME_PROPERTY);\n}","import React, {Component} from 'react';\nimport {Button, ControlLabel, Form, FormControl, FormGroup} from 'react-bootstrap'\nimport {getAccessToken, tryLogin} from \"../../routine/utils/services/login-service\";\nimport './login-style.css'\n\nclass LoginComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.pushHistory = this.pushHistory.bind(this);\n        this.state = {login: \"admin\", password: \"admin\", failed: false};\n    }\n\n    componentDidMount() {\n        let accessToken = getAccessToken();\n        if (accessToken) {\n            this.pushHistory(\"/\");\n        }\n    }\n\n    pushHistory(val) {\n        this.props.history.push(val);\n    }\n\n    handleLogin(login, password, callback) {\n\n\n        //  let g= tryLogin({login, password}, (isSuccess) => callback(isSuccess));\n        //  if (g) {\n        //   window.location.href = \"/\";\n        //    this.pushHistory(\"/carBodyTypes\");\n        //   }\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        event.stopPropagation();\n\n        tryLogin(this.state.login, this.state.password, (success) => {\n            if (success) {\n                this.pushHistory(\"/\");\n                this.setState({failed: false});\n            } else {\n                this.setState({failed: true});\n            }\n        });\n\n        /* this.props.loginRequest(\n              {\n                  login : this.state.login,\n                  password : this.state.password\n              },\n              (isSuccess) => {\n                  if (isSuccess)\n                      this.pushHistory(\"/\");\n                  else {\n                      this.setState({failed : true});\n                  }\n              });  */\n    }\n\n    render() {\n        return (\n            <div className=\"Login\">\n                <Form onSubmit={this.handleSubmit}>\n                    <FormGroup bsSize='medium'>\n                        <ControlLabel>Логин</ControlLabel>\n                        <FormControl placeholder=\"Введите логин\"\n                                     onChange={(event) => {\n                                         this.setState({login: event.target.value});\n                                     }}/>\n                    </FormGroup>\n\n                    <FormGroup bsSize='medium'>\n                        <ControlLabel>Пароль</ControlLabel>\n                        <FormControl placeholder=\"Введите пароль\"\n                                     type=\"password\"\n                                     onChange={(event) => {\n                                         this.setState({password: event.target.value});\n                                     }}/>\n                    </FormGroup>\n                    {this.state.failed ? <FormControl.Static>Неверный логин или пароль.</FormControl.Static> : null}\n                    <Button block bsSize='medium' type=\"submit\">Войти</Button>\n                </Form>\n            </div>\n        );\n    }\n}\n\nexport default LoginComponent;","import React from 'react';\nimport {Tooltip} from \"react-bootstrap\";\n\nexport const EditTooltip = (\n    <Tooltip id=\"editTooltip\">\n        Редактировать\n    </Tooltip>\n);\n\nexport const DeleteTooltip = (\n    <Tooltip id=\"deleteTooltip\">\n        Удалить\n    </Tooltip>\n);","import React, {Component} from 'react';\nimport {DeleteTooltip, EditTooltip} from \"../tooltips\";\nimport {OverlayTrigger} from \"react-bootstrap\";\n\n\nclass Car extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const car = this.props.car;\n        return (\n            <tr key={car.codeCar}>\n                <td>{car.vin}</td>\n                <td>{car.governmentNumber}</td>\n                <td>{car.car_brand}</td>\n                <td>{car.model}</td>\n                <td>{car.category}</td>\n                <td>{car.color}</td>\n                <td>{car.person.idPerson}</td>\n                <td>{car.accident.codeAccident}</td>\n                <td>\n                    <div className=\"btn-group\">\n                        <OverlayTrigger placement=\"top\" overlay={EditTooltip}>\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={this.props.onEdit}>\n                                <span className=\"glyphicon glyphicon-pencil\" aria-hidden=\"true\"></span>\n                            </button>\n                        </OverlayTrigger>\n\n                        <OverlayTrigger placement=\"top\" overlay={DeleteTooltip}>\n                            <button type=\"button\" className=\"btn btn-danger\" onClick={this.props.onDelete}>\n                                <span className=\"glyphicon glyphicon-remove\" aria-hidden=\"true\"></span>\n                            </button>\n                        </OverlayTrigger>\n                    </div>\n                </td>\n            </tr>\n        );\n    }\n}\n\nexport default Car;\n","import {\n    sendGetRequest,\n    sendPostRequest,\n    sendPutRequest,\n    sendDeleteRequest\n} from './common-service'\n\nimport {\n    SERVER_URL,\n    APP_NAME,\n    PAGE_ACCIDENT_LIST_URL\n} from '../../constants'\n\n\nexport function getAccidents() {\n    const url = SERVER_URL + APP_NAME + PAGE_ACCIDENT_LIST_URL;\n    return sendGetRequest(url);\n}\n\nexport function addAccident(accident) {\n    const url = SERVER_URL + APP_NAME + PAGE_ACCIDENT_LIST_URL;\n    return sendPutRequest(url, accident);\n}\n\nexport function updateAccident(accident) {\n    const url = SERVER_URL + APP_NAME + PAGE_ACCIDENT_LIST_URL;\n    return sendPostRequest(url, accident);\n}\n\nexport function deleteAccident(codeAccident) {\n    const url = SERVER_URL + APP_NAME + PAGE_ACCIDENT_LIST_URL + \"/\" + codeAccident;\n    return sendDeleteRequest(url);\n}","import {\n    sendGetRequest,\n    sendPostRequest,\n    sendPutRequest,\n    sendDeleteRequest\n} from './common-service'\n\nimport {\n    SERVER_URL,\n    APP_NAME,\n    PAGE_PERSON_LIST_URL\n} from '../../constants'\n\n\nexport function getPersons() {\n    const url = SERVER_URL + APP_NAME + PAGE_PERSON_LIST_URL;\n    return sendGetRequest(url);\n}\n\nexport function addPerson(person) {\n    const url = SERVER_URL + APP_NAME + PAGE_PERSON_LIST_URL;\n    return sendPutRequest(url, person);\n}\n\nexport function updatePerson(person) {\n    const url = SERVER_URL + APP_NAME + PAGE_PERSON_LIST_URL;\n    return sendPostRequest(url, person);\n}\n\nexport function deletePerson(id) {\n    const url = SERVER_URL + APP_NAME + PAGE_PERSON_LIST_URL + \"/\" + id;\n    return sendDeleteRequest(url);\n}","import React, {Component} from 'react';\nimport {ControlLabel, Form, FormControl, FormGroup, Modal} from \"react-bootstrap\";\nimport {getAccidents} from '../../routine/utils/services/accident-service'\nimport {getPersons} from '../../routine/utils/services/person-service'\nimport Combobox from 'react-widgets/lib/Combobox'\n\nexport default class EditCarDialog extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            entity: {},\n            availablePersons: [],\n            availableAccidents: []\n\n        };\n        this.updateEntity = this.updateEntity.bind(this);\n    }\n\n    componentDidMount() {\n        this.loadPersons();\n        this.loadAccidents();\n\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        const value = nextProps.value;\n        if (value === null || value === undefined) {\n            let entityPerson = this.state.availablePersons ? this.state.availablePersons[0] : null;\n            let entityAccident = this.state.availableAccidents ? this.state.availableAccidents[0] : null;\n            this.updateEntity('person', entityPerson, 'accident', entityAccident);\n        }\n    }\n\n    loadPersons() {\n        getPersons().then(persons => {\n            this.setState({availablePersons: persons});\n        })\n    }\n\n    loadAccidents() {\n        getAccidents().then(accidents => {\n            this.setState({availableAccidents: accidents});\n        })\n    }\n\n\n    handleSubmit(event) {\n        const {onConfirm, value} = this.props;\n        event.preventDefault();\n        event.stopPropagation();\n        const entity = Object.assign({}, value || {}, this.state.entity);\n        onConfirm(entity);\n    }\n\n    updateEntity(propName, newVal) {\n        this.setState({entity: Object.assign({}, this.state.entity, {[propName]: newVal})});\n    }\n\n    updateEntity(propName, newVal, propName2, newVal2) {\n        this.setState({entity: Object.assign({}, this.state.entity, {[propName]: newVal}, {[propName2]: newVal2})});\n    }\n\n    render() {\n        const {show, onHide, title, value} = this.props;\n\n        let PersonItem = ({item}) => (\n            <span>\n                <strong>{item.idPerson}</strong>\n            </span>\n        );\n\n        let AccidentItem = ({item}) => (\n            <span>\n                <strong>{item.codeAccident}</strong>\n            </span>\n        );\n        let availablePersons = this.state.availablePersons;\n        let availableAccidents = this.state.availableAccidents;\n        let entity = this.state.entity;\n        return (\n            <Modal show={show}\n                   onHide={onHide}\n                   aria-labelledby=\"contained-modal-title-vcenter\"\n                   centered>\n                <Modal.Header closeButton>\n                    <Modal.Title>{title}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form onSubmit={e => this.handleSubmit(e)}>\n                        <FormGroup>\n                            <ControlLabel>{'VIN'}</ControlLabel>\n                            <FormControl type=\"text\"\n                                         defaultValue={value ? value.vin : null}\n                                         onChange={(newVal) => {\n                                             this.updateEntity('vin', newVal.target.value);\n                                         }}/>\n                            <FormControl.Feedback/>\n                        </FormGroup>\n\n                        <FormGroup>\n                            <ControlLabel>{'Гос.номер'}</ControlLabel>\n                            <FormControl type=\"text\"\n                                         defaultValue={value ? value.governmentNumber : null}\n                                         onChange={(newVal) => {\n                                             this.updateEntity('governmentNumber', newVal.target.value);\n                                         }}/>\n                            <FormControl.Feedback/>\n                        </FormGroup>\n\n                        <FormGroup>\n                            <ControlLabel>{'Марка'}</ControlLabel>\n                            <FormControl type=\"text\"\n                                         defaultValue={value ? value.car_brand : null}\n                                         onChange={(newVal) => {\n                                             this.updateEntity('car_brand', newVal.target.value);\n                                         }}/>\n                            <FormControl.Feedback/>\n                        </FormGroup>\n\n                        <FormGroup>\n                            <ControlLabel>{'Модель'}</ControlLabel>\n                            <FormControl type=\"text\"\n                                         defaultValue={value ? value.model : null}\n                                         onChange={(newVal) => {\n                                             this.updateEntity('model', newVal.target.value);\n                                         }}/>\n                            <FormControl.Feedback/>\n                        </FormGroup>\n\n                        <FormGroup>\n                            <ControlLabel>{'Категория'}</ControlLabel>\n                            <FormControl type=\"text\"\n                                         defaultValue={value ? value.category : null}\n                                         onChange={(newVal) => {\n                                             this.updateEntity('category', newVal.target.value);\n                                         }}/>\n                            <FormControl.Feedback/>\n                        </FormGroup>\n\n                        <FormGroup>\n                            <ControlLabel>{'Цвет'}</ControlLabel>\n                            <FormControl type=\"text\"\n                                         defaultValue={value ? value.color : null}\n                                         onChange={(newVal) => {\n                                             this.updateEntity('color', newVal.target.value);\n                                         }}/>\n                            <FormControl.Feedback/>\n                        </FormGroup>\n\n                        <FormGroup>\n                            <ControlLabel>{'Код человека'}</ControlLabel>\n                            <Combobox data={availablePersons}\n                                      defaultValue={value ? value.person : (availablePersons ? availablePersons[0] : null)}\n                                      itemComponent={PersonItem}\n                                      textField='idPerson'\n                                      value={entity.person}\n                                      onChange={item => {\n                                          this.updateEntity('person', item);\n                                      }}/>\n                        </FormGroup>\n\n                        <FormGroup>\n                            <ControlLabel>{'Код ДТП'}</ControlLabel>\n                            <Combobox data={availableAccidents}\n                                      defaultValue={value ? value.person : (availableAccidents ? availableAccidents[0] : null)}\n                                      itemComponent={AccidentItem}\n                                      textField='codeAccident'\n                                      value={entity.accident}\n                                      onChange={item => {\n                                          this.updateEntity('accident', item);\n                                      }}/>\n                        </FormGroup>\n\n                        <Modal.Footer style={{paddingBottom: 0}}>\n                            <button type='submit' className=\"btn btn-success\">Подтвердить</button>\n                            <button type='button' onClick={onHide} className=\"btn btn-default\">Отмена</button>\n                        </Modal.Footer>\n                    </Form>\n                </Modal.Body>\n            </Modal>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport {ControlLabel, Form, FormGroup, Modal} from \"react-bootstrap\";\n\nexport default class ConfirmDialog extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    handleSubmit(event) {\n        const {onConfirm} = this.props;\n        event.preventDefault();\n        event.stopPropagation();\n        onConfirm();\n    }\n\n    render() {\n        const {show, onHide, title, message} = this.props;\n        return (\n            <Modal show={show}\n                   onHide={onHide}\n                   aria-labelledby=\"contained-modal-title-vcenter\"\n                   centered>\n                <Modal.Header closeButton>\n                    <Modal.Title>{title}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form onSubmit={e => this.handleSubmit(e)}>\n                        <FormGroup>\n                            <ControlLabel>{message}</ControlLabel>\n                        </FormGroup>\n                        <Modal.Footer style={{paddingBottom: 0}}>\n                            <button type='submit' className=\"btn btn-success\">Подтвердить</button>\n                            <button type='button' onClick={onHide} className=\"btn btn-default\">Отмена</button>\n                        </Modal.Footer>\n                    </Form>\n                </Modal.Body>\n            </Modal>\n        );\n    }\n}\n","export const AddBtnStyle = {\n    margin: '12px'\n};\n\nexport const PageHeaderStyle = {\n    marginLeft: '16px'\n};","import React, {Component} from 'react';\nimport {OverlayTrigger, PageHeader, Table, Tooltip} from \"react-bootstrap\";\nimport Car from './car';\nimport {addCar, deleteCar, getCars, updateCar} from '../../routine/utils/services/car-service'\n\nimport EditCarDialog from './edit-car-dialog'\nimport ConfirmDialog from '../confirm-dialog'\nimport {AddBtnStyle, PageHeaderStyle} from '../fast-styles'\n\nclass CarList extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentEditCar: null,\n            currentDeleteCar: null,\n            cars: [],\n            showCreateDialog: false,\n            showEditDialog: false,\n            showDeleteDialog: false\n        };\n        this.loadData = this.loadData.bind(this);\n    }\n\n    componentDidMount() {\n        this.loadData();\n    }\n\n    loadData() {\n        getCars()\n            .then(data => {\n                let x = Object.assign({}, this.state.cars, {data})\n                this.setState(\n                    {cars: x.data});\n            });\n    }\n\n    getDeleteMessage() {\n        let car = this.state.currentDeleteCar;\n        if (car === null || car === undefined)\n            return \"Вы действительно хотите удалить выбранный элемент?\";\n        return \"Вы действительно хотите удалить автомобиль '\" + car.codeCar + \"' владельцем которого является '\"\n            + car.person.idPerson + \"' побывавший в ДТП '\"\n            + car.accident.codeAccident + \"'?\";\n    }\n\n    render() {\n        const AddTooltip = (\n            <Tooltip id=\"showCarsTooltip\">\n                Добавить автомобиль\n            </Tooltip>\n        );\n\n        return (\n            <div>\n                <PageHeader style={PageHeaderStyle}>\n                    Автомобили\n                    <OverlayTrigger placement=\"right\" overlay={AddTooltip}>\n                        <button type=\"button\" style={AddBtnStyle} className=\"btn btn-default\" onClick={() => {\n                            this.setState({showCreateDialog: true});\n                        }}>\n                            <span className=\"glyphicon glyphicon-plus\" aria-hidden=\"true\"></span>\n                        </button>\n                    </OverlayTrigger>\n                </PageHeader>\n\n                <Table striped bordered condensed hover responsive>\n                    <thead>\n                    <tr>\n                        <th>ID</th>\n                        <th>VIN</th>\n                        <th>Гос.номер</th>\n                        <th>Марка</th>\n                        <th>Модель</th>\n                        <th>Категория</th>\n                        <th>Цвет</th>\n                        <th>Код человека</th>\n                        <th>Код ДТП</th>\n                        <th>Действия</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {\n                        this.state.cars.map(car => {\n                            return <Car key={car.id} car={car}\n                                        onEdit={e => {\n                                            this.setState({currentEditCar: car, showEditDialog: true});\n                                        }}\n                                        onDelete={e => {\n                                            this.setState({currentDeleteCar: car, showDeleteDialog: true});\n                                        }}/>\n                        })\n                    }\n                    </tbody>\n                </Table>\n                <EditCarDialog title={'Добавить автомобиль'}\n                               show={this.state.showCreateDialog}\n                               onConfirm={(entity) => {\n                                   addCar(entity).then(() => {\n                                       this.loadData();\n                                       this.setState({showCreateDialog: false});\n                                   });\n                               }}\n                               onHide={() => {\n                                   this.setState({showCreateDialog: false});\n                               }}/>\n\n                <EditCarDialog title={'Редактировать автомобиль'}\n                               show={this.state.showEditDialog}\n                               value={this.state.currentEditCar}\n                               onConfirm={(entity) => {\n                                   updateCar(entity).then(() => {\n                                       this.loadData();\n                                       this.setState({showEditDialog: false});\n                                   });\n                               }}\n                               onHide={() => {\n                                   this.setState({showEditDialog: false});\n                               }}/>\n\n                <ConfirmDialog title={'Удалить автомобиль'}\n                               message={this.getDeleteMessage()}\n                               show={this.state.showDeleteDialog}\n                               onConfirm={() => {\n                                   deleteCar(this.state.currentDeleteCar.id).then(() => {\n                                       this.loadData();\n                                       this.setState({showDeleteDialog: false});\n                                   });\n                               }}\n                               onHide={() => {\n                                   this.setState({showDeleteDialog: false});\n                               }}/>\n            </div>\n        );\n    }\n}\n\nexport default CarList;\n","import {\n    sendGetRequest,\n    sendPostRequest,\n    sendPutRequest,\n    sendDeleteRequest\n} from './common-service'\n\nimport {\n    SERVER_URL,\n    APP_NAME,\n    PAGE_CAR_LIST_URL\n} from '../../constants'\n\nexport function getCars() {\n    const url = SERVER_URL + APP_NAME + PAGE_CAR_LIST_URL;\n    return sendGetRequest(url);\n}\n\nexport function addCar(car) {\n    const url = SERVER_URL + APP_NAME + PAGE_CAR_LIST_URL;\n    return sendPutRequest(url, car);\n}\n\nexport function updateCar(car) {\n    const url = SERVER_URL + APP_NAME + PAGE_CAR_LIST_URL;\n    return sendPostRequest(url, car);\n}\n\nexport function deleteCar(codeCar) {\n    const url = SERVER_URL + APP_NAME + PAGE_CAR_LIST_URL + \"/\" + codeCar;\n    return sendDeleteRequest(url);\n}","import React, {Component} from 'react';\nimport {DeleteTooltip, EditTooltip} from \"../tooltips\";\nimport {OverlayTrigger} from \"react-bootstrap\";\n\nclass Person extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const person = this.props.person;\n        return (\n            <tr key={person.idPerson}>\n                <td>{person.name}</td>\n                <td>{person.surname}</td>\n                <td>{person.middleName}</td>\n                <td>{person.dateBirth}</td>\n                <td>{person.addressPerson}</td>\n                <td>{person.role}</td>\n                <td>{person.password}</td>\n                <td>\n                    <div className=\"btn-group\">\n                        <OverlayTrigger placement=\"top\" overlay={EditTooltip}>\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={this.props.onEdit}>\n                                <span className=\"glyphicon glyphicon-pencil\" aria-hidden=\"true\"></span>\n                            </button>\n                        </OverlayTrigger>\n                        <OverlayTrigger placement=\"top\" overlay={DeleteTooltip}>\n                            <button type=\"button\" className=\"btn btn-danger\" onClick={this.props.onDelete}>\n                                <span className=\"glyphicon glyphicon-remove\" aria-hidden=\"true\"></span>\n                            </button>\n                        </OverlayTrigger>\n                    </div>\n                </td>\n            </tr>\n        );\n    }\n}\n\nexport default Person;\n","import React, {Component} from 'react';\nimport {ControlLabel, Form, FormControl, FormGroup, Modal} from \"react-bootstrap\";\nimport DatePicker from \"react-datepicker\";\n\nexport default class EditPersonDialog extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            entity: {}\n        }\n    }\n\n    handleSubmit(event) {\n        const {onConfirm, value} = this.props;\n        event.preventDefault();\n        event.stopPropagation();\n        const entity = Object.assign({}, value || {}, this.state.entity);\n        onConfirm(entity);\n    }\n\n    updateEntity(propName, newVal) {\n        this.setState({entity: Object.assign({}, this.state.entity, {[propName]: newVal})});\n    }\n\n    render() {\n        const {show, onHide, title, value} = this.props;\n        return (\n            <Modal show={show}\n                   onHide={onHide}\n                   aria-labelledby=\"contained-modal-title-vcenter\"\n                   centered>\n                <Modal.Header closeButton>\n                    <Modal.Title>{title}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form onSubmit={e => this.handleSubmit(e)}>\n                        <FormGroup>\n                            <ControlLabel>{'Фамилия'}</ControlLabel>\n                            <FormControl type=\"text\"\n                                         defaultValue={value ? value.surname : null}\n                                         onChange={(newVal) => {\n                                             this.updateEntity('surname', newVal.target.value);\n                                         }}/>\n                            <FormControl.Feedback/>\n                        </FormGroup>\n\n                        <FormGroup>\n                            <ControlLabel>{'Имя'}</ControlLabel>\n                            <FormControl type=\"text\"\n                                         defaultValue={value ? value.name : null}\n                                         onChange={(newVal) => {\n                                             this.updateEntity('name', newVal.target.value);\n                                         }}/>\n                            <FormControl.Feedback/>\n                        </FormGroup>\n\n                        <FormGroup>\n                            <ControlLabel>{'Отчество'}</ControlLabel>\n                            <FormControl type=\"text\"\n                                         defaultValue={value ? value.middleName : null}\n                                         onChange={(newVal) => {\n                                             this.updateEntity('middleName', newVal.target.value);\n                                         }}/>\n                            <FormControl.Feedback/>\n                        </FormGroup>\n\n                        <FormGroup>\n                            <ControlLabel>{'Дата рождения'}</ControlLabel>\n                            <DatePicker selected={this.state.displayStartDate}\n                                        locale={'ru-RU'}\n                                        onChange={date => {\n                                            this.updateEntity('dateBirth', date.getMilliseconds());\n                                            this.setState({displayStartDate: date});\n                                        }}/>\n                        </FormGroup>\n\n                        <FormGroup>\n                            <ControlLabel>{'Адрес'}</ControlLabel>\n                            <FormControl type=\"text\"\n                                         defaultValue={value ? value.addressPerson : null}\n                                         onChange={(newVal) => {\n                                             this.updateEntity('addressPerson', newVal.target.value);\n                                         }}/>\n                            <FormControl.Feedback/>\n                        </FormGroup>\n\n                        <FormGroup>\n                            <ControlLabel>{'Роль'}</ControlLabel>\n                            <FormControl type=\"text\"\n                                         defaultValue={value ? value.role : null}\n                                         onChange={(newVal) => {\n                                             this.updateEntity('role', newVal.target.value);\n                                         }}/>\n                            <FormControl.Feedback/>\n                        </FormGroup>\n\n                        <FormGroup>\n                            <ControlLabel>{'Пароль'}</ControlLabel>\n                            <FormControl type=\"text\"\n                                         defaultValue={value ? value.password : null}\n                                         onChange={(newVal) => {\n                                             this.updateEntity('password', newVal.target.value);\n                                         }}/>\n                            <FormControl.Feedback/>\n                        </FormGroup>\n\n                        <Modal.Footer style={{paddingBottom: 0}}>\n                            <button type='submit' className=\"btn btn-success\">Подтвердить</button>\n                            <button type='button' onClick={onHide} className=\"btn btn-default\">Отмена</button>\n                        </Modal.Footer>\n                    </Form>\n                </Modal.Body>\n            </Modal>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport {OverlayTrigger, PageHeader, Table, Tooltip} from \"react-bootstrap\";\nimport Person from './person';\nimport {addPerson, deletePerson, getPersons, updatePerson} from '../../routine/utils/services/person-service'\n\nimport EditPersonDialog from './edit-person-dialog'\nimport ConfirmDialog from '../confirm-dialog'\nimport {AddBtnStyle, PageHeaderStyle} from \"../fast-styles\";\n\nclass PersonList extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentEditPerson: null,\n            currentDeletePerson: null,\n            persons: [],\n            showCreateDialog: false,\n            showEditDialog: false,\n            showDeleteDialog: false\n        };\n        this.loadData = this.loadData.bind(this);\n    }\n\n    componentDidMount() {\n        this.loadData();\n    }\n\n    loadData() {\n        getPersons()\n            .then(data => {\n                let x = Object.assign({}, this.state.persons, {data})\n                this.setState(\n                    {persons: x.data});\n            });\n    }\n\n    getDeleteMessage() {\n        let person = this.state.currentDeletePerson;\n        if (person === null || person === undefined)\n            return \"Вы действительно хотите удалить выбранный элемент?\";\n        return 'Вы действительно хотите удалить человека \"' + person.name +\n            '\" \"' + person.surname + '\" \"' + person.middleName +\n            +'\"? ';\n    }\n\n    render() {\n        const AddTooltip = (\n            <Tooltip id=\"showCarsTooltip\">\n                Добавить человека\n            </Tooltip>\n        );\n\n        return (\n            <div>\n                <PageHeader style={PageHeaderStyle}>\n                    Люди\n                    <OverlayTrigger placement=\"right\" overlay={AddTooltip}>\n                        <button style={AddBtnStyle} type=\"button\" className=\"btn btn-default\" onClick={() => {\n                            this.setState({showCreateDialog: true});\n                        }}>\n                            <span className=\"glyphicon glyphicon-plus\" aria-hidden=\"true\"></span>\n                        </button>\n                    </OverlayTrigger>\n                </PageHeader>\n\n                <Table striped bordered condensed hover responsive>\n                    <thead>\n                    <tr>\n                        <th>ID</th>\n                        <th className=\"col-md-1\">Имя</th>\n                        <th className=\"col-md-1\">Фамилия</th>\n                        <th className=\"col-md-1\">Отчество</th>\n                        <th className=\"col-md-1\">Дата рождения</th>\n                        <th className=\"col-md-4\">Адрес</th>\n                        <th className=\"col-md-1\">Роль</th>\n                        <th className=\"col-md-1\">Пароль</th>\n                        <th>Действия</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {\n                        this.state.persons.map(person => {\n                            return <Person key={person.idPerson} person={person}\n                                           onEdit={e => {\n                                               this.setState({currentEditPerson: person, showEditDialog: true});\n                                           }}\n                                           onDelete={e => {\n                                               this.setState({currentDeletePerson: person, showDeleteDialog: true});\n                                           }}/>\n                        })\n                    }\n                    </tbody>\n                </Table>\n\n                <EditPersonDialog title={'Добавить человека'}\n                                  show={this.state.showCreateDialog}\n                                  onConfirm={(entity) => {\n                                      addPerson(entity).then(() => {\n                                          this.loadData();\n                                          this.setState({showCreateDialog: false});\n                                      });\n                                  }}\n                                  onHide={() => {\n                                      this.setState({showCreateDialog: false});\n                                  }}/>\n\n                <EditPersonDialog title={'Редактирование информации о человеке'}\n                                  show={this.state.showEditDialog}\n                                  value={this.state.currentEditPerson}\n                                  onConfirm={(entity) => {\n                                      updatePerson(entity).then(() => {\n                                          this.loadData();\n                                          this.setState({showEditDialog: false});\n                                      });\n                                  }}\n                                  onHide={() => {\n                                      this.setState({showEditDialog: false});\n                                  }}/>\n\n                <ConfirmDialog title={'Удалить человека'}\n                               message={this.getDeleteMessage()}\n                               show={this.state.showDeleteDialog}\n                               onConfirm={() => {\n                                   deletePerson(this.state.currentDeletePerson.id).then(() => {\n                                       this.loadData();\n                                       this.setState({showDeleteDialog: false});\n                                   });\n                               }}\n                               onHide={() => {\n                                   this.setState({showDeleteDialog: false});\n                               }}/>\n            </div>\n        );\n    }\n}\n\nexport default PersonList;\n","import React, {Component} from 'react';\nimport {DeleteTooltip, EditTooltip} from \"../tooltips\";\nimport {OverlayTrigger} from \"react-bootstrap\";\n\nclass Offence extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const offence = this.props.offence;\n        return (\n            <tr key={offence.codeOffence}>\n                <td>{offence.nameOffence}</td>\n\n                <td>\n                    <div className=\"btn-group\">\n                        <OverlayTrigger placement=\"top\" overlay={EditTooltip}>\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={this.props.onEdit}>\n                                <span className=\"glyphicon glyphicon-pencil\" aria-hidden=\"true\"></span>\n                            </button>\n                        </OverlayTrigger>\n                        <OverlayTrigger placement=\"top\" overlay={DeleteTooltip}>\n                            <button type=\"button\" className=\"btn btn-danger\" onClick={this.props.onDelete}>\n                                <span className=\"glyphicon glyphicon-remove\" aria-hidden=\"true\"></span>\n                            </button>\n                        </OverlayTrigger>\n                    </div>\n                </td>\n            </tr>\n        );\n    }\n}\n\nexport default Offence;","import {\n    sendGetRequest,\n    sendPostRequest,\n    sendPutRequest,\n    sendDeleteRequest\n} from './common-service'\n\nimport {\n    SERVER_URL,\n    APP_NAME,\n    PAGE_OFFENCE_LIST_URL\n} from '../../constants'\n\n\nexport function getOffences() {\n    const url = SERVER_URL + APP_NAME + PAGE_OFFENCE_LIST_URL;\n    return sendGetRequest(url);\n}\n\nexport function addOffence(offence) {\n    const url = SERVER_URL + APP_NAME + PAGE_OFFENCE_LIST_URL;\n    return sendPutRequest(url, offence);\n}\n\nexport function updateOffence(offence) {\n    const url = SERVER_URL + APP_NAME + PAGE_OFFENCE_LIST_URL;\n    return sendPostRequest(url, offence);\n}\n\nexport function deleteOffence(codeOffence) {\n    const url = SERVER_URL + APP_NAME + PAGE_OFFENCE_LIST_URL + \"/\" + codeOffence;\n    return sendDeleteRequest(url);\n}","import React, {Component} from 'react';\nimport {ControlLabel, Form, FormControl, FormGroup, Modal} from \"react-bootstrap\";\n\nexport default class EditOffenceDialog extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            entity: {}\n        }\n    }\n\n    handleSubmit(event) {\n        const {onConfirm, value} = this.props;\n        event.preventDefault();\n        event.stopPropagation();\n        const entity = Object.assign({}, value || {}, this.state.entity);\n        onConfirm(entity);\n    }\n\n    updateEntity(propName, newVal) {\n        this.setState({entity: Object.assign({}, this.state.entity, {[propName]: newVal})});\n    }\n\n    render() {\n        const {show, onHide, title, value} = this.props;\n        return (\n            <Modal show={show}\n                   onHide={onHide}\n                   aria-labelledby=\"contained-modal-title-vcenter\"\n                   centered>\n                <Modal.Header closeButton>\n                    <Modal.Title>{title}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form onSubmit={e => this.handleSubmit(e)}>\n                        <FormGroup>\n                            <ControlLabel>{'Название нарушения'}</ControlLabel>\n                            <FormControl type=\"text\"\n                                         defaultValue={value ? value.nameOffence : null}\n                                         onChange={(newVal) => {\n                                             this.updateEntity('nameOffence', newVal.target.value);\n                                         }}/>\n                            <FormControl.Feedback/>\n                        </FormGroup>\n\n                        <Modal.Footer style={{paddingBottom: 0}}>\n                            <button type='submit' className=\"btn btn-success\">Подтвердить</button>\n                            <button type='button' onClick={onHide} className=\"btn btn-default\">Отмена</button>\n                        </Modal.Footer>\n                    </Form>\n                </Modal.Body>\n            </Modal>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport {OverlayTrigger, PageHeader, Table, Tooltip} from \"react-bootstrap\";\nimport Offence from './offence';\nimport {addOffence, deleteOffence, getOffences, updateOffence} from '../../routine/utils/services/offence-service'\n\nimport EditOffenceDialog from './edit-offence-dialog'\nimport ConfirmDialog from '../confirm-dialog'\nimport {AddBtnStyle, PageHeaderStyle} from \"../fast-styles\";\n\nclass OffenceList extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentEditOffence: null,\n            currentDeleteOffence: null,\n            offences: [],\n            showCreateDialog: false,\n            showEditDialog: false,\n            showDeleteDialog: false\n        };\n        this.loadData = this.loadData.bind(this);\n    }\n\n    componentDidMount() {\n        this.loadData();\n    }\n\n    loadData() {\n        getOffences()\n            .then(data => {\n                let x = Object.assign({}, this.state.offences, {data})\n                this.setState(\n                    {offences: x.data});\n            });\n    }\n\n    getDeleteMessage() {\n        let offence = this.state.currentDeleteOffence;\n        if (offence === null || offence === undefined)\n            return \"Вы действительно хотите удалить выбранный элемент?\";\n        return 'Вы действительно хотите удалить нарушение \"' + offence.nameOffence +\n            +'\"? ';\n    }\n\n    render() {\n        const AddTooltip = (\n            <Tooltip id=\"showCarsTooltip\">\n                Добавить нарушение\n            </Tooltip>\n        );\n\n        return (\n            <div>\n                <PageHeader style={PageHeaderStyle}>\n                    Нарушения\n                    <OverlayTrigger placement=\"right\" overlay={AddTooltip}>\n                        <button style={AddBtnStyle} type=\"button\" className=\"btn btn-default\" onClick={() => {\n                            this.setState({showCreateDialog: true});\n                        }}>\n                            <span className=\"glyphicon glyphicon-plus\" aria-hidden=\"true\"></span>\n                        </button>\n                    </OverlayTrigger>\n                </PageHeader>\n\n                <Table striped bordered condensed hover responsive>\n                    <thead>\n                    <tr>\n                        <th>ID</th>\n                        <th>Название нарушения</th>\n                        <th>Действия</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {\n                        this.state.offences.map(offence => {\n                            return <Offence key={offence.codeOffence} offence={offence}\n                                            onEdit={e => {\n                                                this.setState({currentEditOffence: offence, showEditDialog: true});\n                                            }}\n                                            onDelete={e => {\n                                                this.setState({currentDeleteOffence: offence, showDeleteDialog: true});\n                                            }}/>\n                        })\n                    }\n                    </tbody>\n                </Table>\n\n                <EditOffenceDialog title={'Добавить информацию о нарушении'}\n                                   show={this.state.showCreateDialog}\n                                   onConfirm={(entity) => {\n                                       addOffence(entity).then(() => {\n                                           this.loadData();\n                                           this.setState({showCreateDialog: false});\n                                       });\n                                   }}\n                                   onHide={() => {\n                                       this.setState({showCreateDialog: false});\n                                   }}/>\n\n                <EditOffenceDialog title={'Редактирование информации о нарушении'}\n                                   show={this.state.showEditDialog}\n                                   value={this.state.currentEditOffence}\n                                   onConfirm={(entity) => {\n                                       updateOffence(entity).then(() => {\n                                           this.loadData();\n                                           this.setState({showEditDialog: false});\n                                       });\n                                   }}\n                                   onHide={() => {\n                                       this.setState({showEditDialog: false});\n                                   }}/>\n\n                <ConfirmDialog title={'Удалить нарушение'}\n                               message={this.getDeleteMessage()}\n                               show={this.state.showDeleteDialog}\n                               onConfirm={() => {\n                                   deleteOffence(this.state.currentDeleteOffence.codeOffence).then(() => {\n                                       this.loadData();\n                                       this.setState({showDeleteDialog: false});\n                                   });\n                               }}\n                               onHide={() => {\n                                   this.setState({showDeleteDialog: false});\n                               }}/>\n            </div>\n        );\n    }\n}\n\nexport default OffenceList;\n","import React, {Component} from 'react';\nimport {DeleteTooltip, EditTooltip} from \"../tooltips\";\nimport {OverlayTrigger} from \"react-bootstrap\";\n\nclass Accident extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const accident = this.props.accident;\n        return (\n            <tr key={accident.codeAccident}>\n                <td>{accident.dateAccident}</td>\n                <td>{accident.typeAccident}</td>\n                <td>{accident.deathToll}</td>\n                <td>{accident.numberOfVictims}</td>\n                <td>{accident.weather}</td>\n                <td>{accident.typeOfCoating}</td>\n                <td>{accident.viewRoadConstruction}</td>\n                <td>\n                    <div className=\"btn-group\">\n                        <OverlayTrigger placement=\"top\" overlay={EditTooltip}>\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={this.props.onEdit}>\n                                <span className=\"glyphicon glyphicon-pencil\" aria-hidden=\"true\"></span>\n                            </button>\n                        </OverlayTrigger>\n                        <OverlayTrigger placement=\"top\" overlay={DeleteTooltip}>\n                            <button type=\"button\" className=\"btn btn-danger\" onClick={this.props.onDelete}>\n                                <span className=\"glyphicon glyphicon-remove\" aria-hidden=\"true\"></span>\n                            </button>\n                        </OverlayTrigger>\n                    </div>\n                </td>\n            </tr>\n        );\n    }\n}\n\nexport default Accident;\n","import React, {Component} from 'react';\nimport {ControlLabel, Form, FormControl, FormGroup, Modal} from \"react-bootstrap\";\nimport DatePicker from \"react-datepicker\";\n\nexport default class EditAccidentDialog extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            entity: {}\n        }\n    }\n\n    handleSubmit(event) {\n        const {onConfirm, value} = this.props;\n        event.preventDefault();\n        event.stopPropagation();\n        const entity = Object.assign({}, value || {}, this.state.entity);\n        onConfirm(entity);\n    }\n\n    updateEntity(propName, newVal) {\n        this.setState({entity: Object.assign({}, this.state.entity, {[propName]: newVal})});\n    }\n\n    render() {\n        const {show, onHide, title, value} = this.props;\n        return (\n            <Modal show={show}\n                   onHide={onHide}\n                   aria-labelledby=\"contained-modal-title-vcenter\"\n                   centered>\n                <Modal.Header closeButton>\n                    <Modal.Title>{title}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form onSubmit={e => this.handleSubmit(e)}>\n\n                        <FormGroup>\n                            <ControlLabel>{'Дата ДТП'}</ControlLabel>\n                            <DatePicker selected={this.state.displayStartDate}\n                                        locale={'ru-RU'}\n                                        onChange={date => {\n                                            this.updateEntity('dateAccident', date.getMilliseconds());\n                                            this.setState({displayStartDate: date});\n                                        }}/>\n                        </FormGroup>\n\n                        <FormGroup>\n                            <ControlLabel>{'Тип ДТП'}</ControlLabel>\n                            <FormControl type=\"text\"\n                                         defaultValue={value ? value.typeAccident : null}\n                                         onChange={(newVal) => {\n                                             this.updateEntity('typeAccident', newVal.target.value);\n                                         }}/>\n                            <FormControl.Feedback/>\n                        </FormGroup>\n\n                        <FormGroup>\n                            <ControlLabel>{'Количество погибших'}</ControlLabel>\n                            <FormControl type=\"text\"\n                                         defaultValue={value ? value.deathToll : null}\n                                         onChange={(newVal) => {\n                                             this.updateEntity('deathToll', newVal.target.value);\n                                         }}/>\n                            <FormControl.Feedback/>\n                        </FormGroup>\n\n                        <FormGroup>\n                            <ControlLabel>{'Количество пострадавших'}</ControlLabel>\n                            <FormControl type=\"text\"\n                                         defaultValue={value ? value.numberOfVictims : null}\n                                         onChange={(newVal) => {\n                                             this.updateEntity('numberOfVictims', newVal.target.value);\n                                         }}/>\n                            <FormControl.Feedback/>\n                        </FormGroup>\n\n                        <FormGroup>\n                            <ControlLabel>{'Погодные условия'}</ControlLabel>\n                            <FormControl type=\"text\"\n                                         defaultValue={value ? value.weather : null}\n                                         onChange={(newVal) => {\n                                             this.updateEntity('weather', newVal.target.value);\n                                         }}/>\n                            <FormControl.Feedback/>\n                        </FormGroup>\n\n                        <FormGroup>\n                            <ControlLabel>{'Вид покрытия'}</ControlLabel>\n                            <FormControl type=\"text\"\n                                         defaultValue={value ? value.typeOfCoating : null}\n                                         onChange={(newVal) => {\n                                             this.updateEntity('typeOfCoating', newVal.target.value);\n                                         }}/>\n                            <FormControl.Feedback/>\n                        </FormGroup>\n\n                        <FormGroup>\n                            <ControlLabel>{'Вид сооружения дороги'}</ControlLabel>\n                            <FormControl type=\"text\"\n                                         defaultValue={value ? value.viewRoadConstruction : null}\n                                         onChange={(newVal) => {\n                                             this.updateEntity('viewRoadConstruction', newVal.target.value);\n                                         }}/>\n                            <FormControl.Feedback/>\n                        </FormGroup>\n\n                        <Modal.Footer style={{paddingBottom: 0}}>\n                            <button type='submit' className=\"btn btn-success\">Подтвердить</button>\n                            <button type='button' onClick={onHide} className=\"btn btn-default\">Отмена</button>\n                        </Modal.Footer>\n                    </Form>\n                </Modal.Body>\n            </Modal>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport {OverlayTrigger, PageHeader, Table, Tooltip} from \"react-bootstrap\";\nimport Accident from './accident';\nimport {addAccident, deleteAccident, getAccidents, updateAccident} from '../../routine/utils/services/accident-service'\n\nimport EditAccidentDialog from './edit-accident-dialog'\nimport ConfirmDialog from '../confirm-dialog'\nimport {AddBtnStyle, PageHeaderStyle} from \"../fast-styles\";\n\nclass AccidentList extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentEditAccident: null,\n            currentDeleteAccident: null,\n            accidents: [],\n            showCreateDialog: false,\n            showEditDialog: false,\n            showDeleteDialog: false\n        };\n        this.loadData = this.loadData.bind(this);\n    }\n\n    componentDidMount() {\n        this.loadData();\n    }\n\n    loadData() {\n        getAccidents()\n            .then(data => {\n                let x = Object.assign({}, this.state.accidents, {data});\n                this.setState(\n                    {accidents: x.data});\n            });\n    }\n\n    getDeleteMessage() {\n        let accident = this.state.currentDeleteAccident;\n        if (accident === null || accident === undefined)\n            return \"Вы действительно хотите удалить выбранный элемент?\";\n        return 'Вы действительно хотите удалить ДТП \"' + accident.codeAccident\n            + '\"? ';\n    }\n\n    render() {\n        const AddTooltip = (\n            <Tooltip id=\"showCarsTooltip\">\n                Добавить ДТП\n            </Tooltip>\n        );\n\n        return (\n            <div>\n                <PageHeader style={PageHeaderStyle}>\n                    ДТП\n                    <OverlayTrigger placement=\"right\" overlay={AddTooltip}>\n                        <button style={AddBtnStyle} type=\"button\" className=\"btn btn-default\" onClick={() => {\n                            this.setState({showCreateDialog: true});\n                        }}>\n                            <span className=\"glyphicon glyphicon-plus\" aria-hidden=\"true\"></span>\n                        </button>\n                    </OverlayTrigger>\n                </PageHeader>\n\n                <Table striped bordered condensed hover responsive>\n                    <thead>\n                    <tr>\n                        <th>ID</th>\n                        <th>Дата ДТП</th>\n                        <th>Тип ДТП</th>\n                        <th>Погибло</th>\n                        <th>Пострадало</th>\n                        <th>Погодные условия</th>\n                        <th>Вид покрытия</th>\n                        <th>Вид сооружения дороги</th>\n                        <th>Действия</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {\n                        this.state.accidents.map(accident => {\n                            return <Accident key={accident.codeAccident} accident={accident}\n                                             onEdit={e => {\n                                                 this.setState({currentEditAccident: accident, showEditDialog: true});\n                                             }}\n                                             onDelete={e => {\n                                                 this.setState({\n                                                     currentDeleteAccident: accident,\n                                                     showDeleteDialog: true\n                                                 });\n                                             }}/>\n                        })\n                    }\n                    </tbody>\n                </Table>\n\n                <EditAccidentDialog title={'Добавить ДТП'}\n                                    show={this.state.showCreateDialog}\n                                    onConfirm={(entity) => {\n                                        addAccident(entity).then(() => {\n                                            this.loadData();\n                                            this.setState({showCreateDialog: false});\n                                        });\n                                    }}\n                                    onHide={() => {\n                                        this.setState({showCreateDialog: false});\n                                    }}/>\n\n                <EditAccidentDialog title={'Редактирование информации о ДТП'}\n                                    show={this.state.showEditDialog}\n                                    value={this.state.currentEditAccident}\n                                    onConfirm={(entity) => {\n                                        updateAccident(entity).then(() => {\n                                            this.loadData();\n                                            this.setState({showEditDialog: false});\n                                        });\n                                    }}\n                                    onHide={() => {\n                                        this.setState({showEditDialog: false});\n                                    }}/>\n\n                <ConfirmDialog title={'Удалить ДТП'}\n                               message={this.getDeleteMessage()}\n                               show={this.state.showDeleteDialog}\n                               onConfirm={() => {\n                                   deleteAccident(this.state.currentDeleteAccident.codeAccident).then(() => {\n                                       this.loadData();\n                                       this.setState({showDeleteDialog: false});\n                                   });\n                               }}\n                               onHide={() => {\n                                   this.setState({showDeleteDialog: false});\n                               }}/>\n            </div>\n        );\n    }\n}\n\nexport default AccidentList;\n","import React, {Component} from 'react';\nimport {DeleteTooltip, EditTooltip} from \"../tooltips\";\nimport {OverlayTrigger} from \"react-bootstrap\";\n\nclass RoadAccidentParticipant extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const roadAccidentParticipant = this.props.roadAccidentParticipant;\n        return (\n            <tr key={roadAccidentParticipant.code_road_accident_participant}>\n                <td>{roadAccidentParticipant.driversLicenseNumber}</td>\n                <td>{roadAccidentParticipant.typeParticipation}</td>\n                <td>{roadAccidentParticipant.drivingExperience}</td>\n                <td>{roadAccidentParticipant.isGuilty}</td>\n                <td>{roadAccidentParticipant.person.idPerson}</td>\n                <td>{roadAccidentParticipant.accident.codeAccident}</td>\n                <td>{roadAccidentParticipant.offence.codeOffence}</td>\n                <td>\n                    <div className=\"btn-group\">\n                        <OverlayTrigger placement=\"top\" overlay={EditTooltip}>\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={this.props.onEdit}>\n                                <span className=\"glyphicon glyphicon-pencil\" aria-hidden=\"true\"></span>\n                            </button>\n                        </OverlayTrigger>\n\n                        <OverlayTrigger placement=\"top\" overlay={DeleteTooltip}>\n                            <button type=\"button\" className=\"btn btn-danger\" onClick={this.props.onDelete}>\n                                <span className=\"glyphicon glyphicon-remove\" aria-hidden=\"true\"></span>\n                            </button>\n                        </OverlayTrigger>\n                    </div>\n                </td>\n            </tr>\n        );\n    }\n}\n\nexport default RoadAccidentParticipant;\n","import React, {Component} from 'react';\nimport {ControlLabel, Form, FormControl, FormGroup, Modal} from \"react-bootstrap\";\nimport {getAccidents} from '../../routine/utils/services/accident-service'\nimport {getPersons} from '../../routine/utils/services/person-service'\nimport {getOffences} from '../../routine/utils/services/offence-service'\nimport Combobox from 'react-widgets/lib/Combobox'\n\nexport default class EditCarDialog extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            entity: {},\n            availablePersons: [],\n            availableAccidents: [],\n            availableOffences: []\n\n        };\n        this.updateEntity = this.updateEntity.bind(this);\n    }\n\n    componentDidMount() {\n        this.loadPersons();\n        this.loadAccidents();\n        this.loadOffences();\n\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        const value = nextProps.value;\n        if (value === null || value === undefined) {\n            let entityPerson = this.state.availablePersons ? this.state.availablePersons[0] : null;\n            let entityAccident = this.state.availableAccidents ? this.state.availableAccidents[0] : null;\n            let entityOffence = this.state.availableOffences ? this.state.availableOffences[0] : null;\n            this.updateEntity('person', entityPerson, 'accident', entityAccident, 'offence', entityOffence);\n        }\n    }\n\n    loadPersons() {\n        getPersons().then(persons => {\n            this.setState({availablePersons: persons});\n        })\n    }\n\n    loadAccidents() {\n        getAccidents().then(accidents => {\n            this.setState({availableAccidents: accidents});\n        })\n    }\n\n    loadOffences() {\n        getOffences().then(offences => {\n            this.setState({availableOffences: offences});\n        })\n    }\n\n\n    handleSubmit(event) {\n        const {onConfirm, value} = this.props;\n        event.preventDefault();\n        event.stopPropagation();\n        const entity = Object.assign({}, value || {}, this.state.entity);\n        onConfirm(entity);\n    }\n\n    updateEntity(propName, newVal) {\n        this.setState({entity: Object.assign({}, this.state.entity, {[propName]: newVal})});\n    }\n\n    updateEntity(propName, newVal, propName2, newVal2) {\n        this.setState({entity: Object.assign({}, this.state.entity, {[propName]: newVal}, {[propName2]: newVal2})});\n    }\n\n    updateEntity(propName, newVal, propName2, newVal2, propName3, newVal3) {\n        this.setState({entity: Object.assign({}, this.state.entity, {[propName]: newVal}, {[propName2]: newVal2}, {[propName3]: newVal3})});\n    }\n\n    render() {\n        const {show, onHide, title, value} = this.props;\n\n        let PersonItem = ({item}) => (\n            <span>\n                <strong>{item.idPerson}</strong>\n            </span>\n        );\n\n        let AccidentItem = ({item}) => (\n            <span>\n                <strong>{item.codeAccident}</strong>\n            </span>\n        );\n\n        let OffenceItem = ({item}) => (\n            <span>\n                <strong>{item.codeOffence}</strong>\n            </span>\n        );\n        let availablePersons = this.state.availablePersons;\n        let availableAccidents = this.state.availableAccidents;\n        let availableOffences = this.state.availableOffences;\n        let entity = this.state.entity;\n        return (\n            <Modal show={show}\n                   onHide={onHide}\n                   aria-labelledby=\"contained-modal-title-vcenter\"\n                   centered>\n                <Modal.Header closeButton>\n                    <Modal.Title>{title}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form onSubmit={e => this.handleSubmit(e)}>\n                        <FormGroup>\n                            <ControlLabel>{'Номер водительского удостоверения'}</ControlLabel>\n                            <FormControl type=\"text\"\n                                         defaultValue={value ? value.driversLicenseNumber : null}\n                                         onChange={(newVal) => {\n                                             this.updateEntity('driversLicenseNumber', newVal.target.value);\n                                         }}/>\n                            <FormControl.Feedback/>\n                        </FormGroup>\n\n                        <FormGroup>\n                            <ControlLabel>{'Вид участия'}</ControlLabel>\n                            <FormControl type=\"text\"\n                                         defaultValue={value ? value.typeParticipation : null}\n                                         onChange={(newVal) => {\n                                             this.updateEntity('typeParticipation', newVal.target.value);\n                                         }}/>\n                            <FormControl.Feedback/>\n                        </FormGroup>\n\n                        <FormGroup>\n                            <ControlLabel>{'Водительский стаж'}</ControlLabel>\n                            <FormControl type=\"text\"\n                                         defaultValue={value ? value.drivingExperience : null}\n                                         onChange={(newVal) => {\n                                             this.updateEntity('drivingExperience', newVal.target.value);\n                                         }}/>\n                            <FormControl.Feedback/>\n                        </FormGroup>\n\n                        <FormGroup>\n                            <ControlLabel>{'Виновен ли?'}</ControlLabel>\n                            <FormControl type=\"text\"\n                                         defaultValue={value ? value.isGuilty : null}\n                                         onChange={(newVal) => {\n                                             this.updateEntity('isGuilty', newVal.target.value);\n                                         }}/>\n                            <FormControl.Feedback/>\n                        </FormGroup>\n\n                        <FormGroup>\n                            <ControlLabel>{'Код человека'}</ControlLabel>\n                            <Combobox data={availablePersons}\n                                      defaultValue={value ? value.person : (availablePersons ? availablePersons[0] : null)}\n                                      itemComponent={PersonItem}\n                                      textField='idPerson'\n                                      value={entity.person}\n                                      onChange={item => {\n                                          this.updateEntity('person', item);\n                                      }}/>\n                        </FormGroup>\n\n                        <FormGroup>\n                            <ControlLabel>{'Код ДТП'}</ControlLabel>\n                            <Combobox data={availableAccidents}\n                                      defaultValue={value ? value.person : (availableAccidents ? availableAccidents[0] : null)}\n                                      itemComponent={AccidentItem}\n                                      textField='codeAccident'\n                                      value={entity.accident}\n                                      onChange={item => {\n                                          this.updateEntity('accident', item);\n                                      }}/>\n                        </FormGroup>\n\n                        <FormGroup>\n                            <ControlLabel>{'Код нарушения'}</ControlLabel>\n                            <Combobox data={availableOffences}\n                                      defaultValue={value ? value.person : (availableOffences ? availableOffences[0] : null)}\n                                      itemComponent={OffenceItem}\n                                      textField='codeOffence'\n                                      value={entity.offence}\n                                      onChange={item => {\n                                          this.updateEntity('offence', item);\n                                      }}/>\n                        </FormGroup>\n\n                        <Modal.Footer style={{paddingBottom: 0}}>\n                            <button type='submit' className=\"btn btn-success\">Подтвердить</button>\n                            <button type='button' onClick={onHide} className=\"btn btn-default\">Отмена</button>\n                        </Modal.Footer>\n                    </Form>\n                </Modal.Body>\n            </Modal>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport {OverlayTrigger, PageHeader, Table, Tooltip} from \"react-bootstrap\";\nimport RoadAccidentParticipant from './road-accident-participant'\nimport {\n    addRoadAccidentParticipant,\n    deleteRoadAccidentParticipant,\n    getRoadAccidentParticipants,\n    updateRoadAccidentParticipant\n} from '../../routine/utils/services/road-accident-participant-service'\n\nimport EditRoadAccidentParticipantDialog from './edit-road-accident-participant-dialog'\nimport ConfirmDialog from '../confirm-dialog'\nimport {AddBtnStyle, PageHeaderStyle} from '../fast-styles'\n\nclass RoadAccidentParticipantList extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentEditRoadAccidentParticipant: null,\n            currentDeleteRoadAccidentParticipant: null,\n            roadAccidentParticipants: [],\n            showCreateDialog: false,\n            showEditDialog: false,\n            showDeleteDialog: false\n        };\n        this.loadData = this.loadData.bind(this);\n    }\n\n    componentDidMount() {\n        this.loadData();\n    }\n\n    loadData() {\n        getRoadAccidentParticipants()\n            .then(data => {\n                let x = Object.assign({}, this.state.roadAccidentParticipants, {data});\n                this.setState(\n                    {roadAccidentParticipants: x.data});\n            });\n    }\n\n    getDeleteMessage() {\n        let roadAccidentParticipant = this.state.currentDeleteRoadAccidentParticipant;\n        if (roadAccidentParticipant === null || roadAccidentParticipant === undefined)\n            return \"Вы действительно хотите удалить выбранный элемент?\";\n        return \"Вы действительно хотите удалить участника ДТП '\"\n            + roadAccidentParticipant.code_road_accident_participant + \"'?\";\n    }\n\n    render() {\n        const AddTooltip = (\n            <Tooltip id=\"showCarsTooltip\">\n                Добавить участника ДТП\n            </Tooltip>\n        );\n\n        return (\n            <div>\n                <PageHeader style={PageHeaderStyle}>\n                    Участники ДТП\n                    <OverlayTrigger placement=\"right\" overlay={AddTooltip}>\n                        <button type=\"button\" style={AddBtnStyle} className=\"btn btn-default\" onClick={() => {\n                            this.setState({showCreateDialog: true});\n                        }}>\n                            <span className=\"glyphicon glyphicon-plus\" aria-hidden=\"true\"></span>\n                        </button>\n                    </OverlayTrigger>\n                </PageHeader>\n\n                <Table striped bordered condensed hover responsive>\n                    <thead>\n                    <tr>\n                        <th>ID</th>\n                        <th>Номер водительского удостоверения</th>\n                        <th>Вид участия</th>\n                        <th>Водительский стаж</th>\n                        <th>Вина</th>\n                        <th>Код человека</th>\n                        <th>Код ДТП</th>\n                        <th>Код нарушения</th>\n                        <th>Действия</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {\n                        this.state.roadAccidentParticipants.map(roadAccidentParticipant => {\n                            return <RoadAccidentParticipant key={roadAccidentParticipant.code_road_accident_participant}\n                                                            roadAccidentParticipant={roadAccidentParticipant}\n                                                            onEdit={e => {\n                                                                this.setState({\n                                                                    currentEditRoadAccidentParticipant: roadAccidentParticipant,\n                                                                    showEditDialog: true\n                                                                });\n                                                            }}\n                                                            onDelete={e => {\n                                                                this.setState({\n                                                                    currentDeleteRoadAccidentParticipant: roadAccidentParticipant,\n                                                                    showDeleteDialog: true\n                                                                });\n                                                            }}/>\n                        })\n                    }\n                    </tbody>\n                </Table>\n                <EditRoadAccidentParticipantDialog title={'Добавить участника ДТП'}\n                                                   show={this.state.showCreateDialog}\n                                                   onConfirm={(entity) => {\n                                                       addRoadAccidentParticipant(entity).then(() => {\n                                                           this.loadData();\n                                                           this.setState({showCreateDialog: false});\n                                                       });\n                                                   }}\n                                                   onHide={() => {\n                                                       this.setState({showCreateDialog: false});\n                                                   }}/>\n\n                <EditRoadAccidentParticipantDialog title={'Редактировать участника ДТП'}\n                                                   show={this.state.showEditDialog}\n                                                   value={this.state.currentEditRoadAccidentParticipant}\n                                                   onConfirm={(entity) => {\n                                                       updateRoadAccidentParticipant(entity).then(() => {\n                                                           this.loadData();\n                                                           this.setState({showEditDialog: false});\n                                                       });\n                                                   }}\n                                                   onHide={() => {\n                                                       this.setState({showEditDialog: false});\n                                                   }}/>\n\n                <ConfirmDialog title={'Удалить участника ДТП'}\n                               message={this.getDeleteMessage()}\n                               show={this.state.showDeleteDialog}\n                               onConfirm={() => {\n                                   deleteRoadAccidentParticipant(this.state.currentDeleteRoadAccidentParticipant.id).then(() => {\n                                       this.loadData();\n                                       this.setState({showDeleteDialog: false});\n                                   });\n                               }}\n                               onHide={() => {\n                                   this.setState({showDeleteDialog: false});\n                               }}/>\n            </div>\n        );\n    }\n}\n\nexport default RoadAccidentParticipantList;\n","import {\n    sendGetRequest,\n    sendPostRequest,\n    sendPutRequest,\n    sendDeleteRequest\n} from './common-service'\n\nimport {\n    SERVER_URL,\n    APP_NAME,\n    PAGE_CAR_LIST_URL\n} from '../../constants'\n\nexport function getRoadAccidentParticipants() {\n    const url = SERVER_URL + APP_NAME + PAGE_CAR_LIST_URL;\n    return sendGetRequest(url);\n}\n\nexport function addRoadAccidentParticipant(car) {\n    const url = SERVER_URL + APP_NAME + PAGE_CAR_LIST_URL;\n    return sendPutRequest(url, car);\n}\n\nexport function updateRoadAccidentParticipant(car) {\n    const url = SERVER_URL + APP_NAME + PAGE_CAR_LIST_URL;\n    return sendPostRequest(url, car);\n}\n\nexport function deleteRoadAccidentParticipant(code_road_accident_participant) {\n    const url = SERVER_URL + APP_NAME + PAGE_CAR_LIST_URL + \"/\" + code_road_accident_participant;\n    return sendDeleteRequest(url);\n}","import React, {Component} from 'react';\nimport {Nav, Navbar, NavItem} from \"react-bootstrap\";\nimport MenuItem from \"react-bootstrap/es/MenuItem\";\n\nexport default class AppHeader extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        let userName = this.props.username;\n        return (\n            <Navbar inverse>\n                <Navbar.Header>\n                    <Navbar.Brand>\n                        <a href=\"/accidents\">ДТП</a>\n                    </Navbar.Brand>\n                    <Navbar.Toggle/>\n                </Navbar.Header>\n                <Navbar.Collapse>\n                    <Nav>\n                        <NavItem href=\"/accidents\">ДТП</NavItem>\n                        <NavItem href=\"/roadAccidentParticipants\">Участники ДТП</NavItem>\n                        <MenuItem href=\"/cars\">Автомобили</MenuItem>\n                        <NavItem href=\"/persons\">Люди</NavItem>\n                        <NavItem href=\"/offences\">Нарушения</NavItem>\n                    </Nav>\n\n                    <Nav pullRight>\n                        <NavItem data-toggle=\"tooltip\" title=\"На страницу аутентификации\"\n                                 onClick={this.props.logoutHandler}>\n                            <label>Выйти</label>\n                            <span className=\"glyphicon glyphicon-log-out\" aria-hidden=\"true\"></span></NavItem>\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n        );\n    }\n}\n\n","import React, {Component} from 'react';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\n\nimport CarList from './car/car-list';\nimport PersonList from './person/person-list'\nimport OffenceList from './offence/offence-list'\nimport AccidentList from './accident/accident-list'\nimport RoadAccidentParticipantList from './road-accident-participant/road-accident-participant-list'\nimport {getCurrentUsername, logout} from \"../routine/utils/services/login-service\";\n\nimport AppHeader from './app-header'\n\nimport './logged-panel'\n\nclass LoggedPanelComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: ''\n        };\n        this.handleLogout = this.handleLogout.bind(this);\n    }\n\n    componentDidMount() {\n        let currentUsername = getCurrentUsername();\n        this.setState({username: currentUsername});\n    }\n\n    handleLogout() {\n        logout();\n    }\n\n    render() {\n        // if (this.state.isLoggedIn) {\n        return (\n            <div>\n                <AppHeader logoutHandler={this.handleLogout} username={this.state.username}/>\n                <BrowserRouter>\n                    <Switch>\n                        <Route exact path=\"/cars\" component={CarList}/>\n                        <Route exact path=\"/roadAccidentParticipants\" component={RoadAccidentParticipantList}/>\n                        <Route exact path=\"/accidents\" component={AccidentList}/>\n                        <Route exact path=\"/persons\" component={PersonList}/>\n                        <Route exact path=\"/offences\" component={OffenceList}/>\n                        <Route path=\"/\" exact component={AccidentList}/>\n                    </Switch>\n                </BrowserRouter>\n            </div>\n        );\n\n    }\n}\n\nexport default LoggedPanelComponent;","import React, {Component} from 'react';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport LoginComponent from './security/login'\nimport '../components/main.css'\n\nimport {getAccessToken, logout, tryLogin} from \"../routine/utils/services/login-service\";\n\nimport LoggedPanelComponent from './logged-panel'\n\nclass MainComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoggedIn: false\n        };\n        this.handleLogout = this.handleLogout.bind(this);\n    }\n\n    componentDidMount() {\n        let accessToken = getAccessToken();\n        this.setState({isLoggedIn: !!accessToken});\n    }\n\n    handleLogin({login, password}, callback) {\n        let g = tryLogin({login, password}, (isSuccess) => callback(isSuccess));\n        if (g) {\n            //   window.location.href = \"/\";\n            //    this.pushHistory(\"/carBodyTypes\");\n        }\n    }\n\n    handleLogout() {\n        logout();\n    }\n\n    render() {\n        // if (this.state.isLoggedIn) {\n        return (\n            <div className='DarkDiv'>\n                <BrowserRouter>\n                    <Switch>\n                        <Route exact path=\"/login\"\n                               render={props => (\n                                   <LoginComponent {...props} loginRequest={this.handleLogin}/>\n                               )}/>\n                        <Route component={LoggedPanelComponent}/>\n                    </Switch>\n                </BrowserRouter>\n            </div>\n        );\n        //   }\n        // else {\n        //     return ( <LoginComponent loginRequest={this.handleLogin}/>); }\n\n    }\n}\n\nexport default MainComponent;","import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport MainComponent from './components/main';\n\nclass App extends Component {\n    render() {\n        return (\n            <MainComponent/>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit http://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-widgets/dist/css/react-widgets.css';\n//import Main from './app/main.component';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n//ReactDOM.render(<Main />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}