{"version":3,"sources":["logo.svg","routine/constants.js","routine/utils/services/login-service.js","components/security/login.js","components/app-header.js","components/tooltips.js","components/car/car.js","routine/utils/services/common-service.js","routine/utils/services/accident-service.js","routine/utils/services/person-service.js","components/car/edit-car-dialog.js","components/confirm-dialog.js","components/fast-styles.js","components/car/car-list.js","routine/utils/services/car-service.js","components/person/person.js","components/person/edit-person-dialog.js","components/person/person-list.js","components/offence/offence.js","routine/utils/services/offence-service.js","components/offence/edit-offence-dialog.js","components/offence/offence-list.js","components/accident/accident.js","components/accident/edit-accident-dialog.js","components/accident/accident-list.js","components/road-accident-participant/road-accident-participant.js","components/road-accident-participant/edit-road-accident-participant-dialog.js","components/road-accident-participant/road-accident-participant-list.js","routine/utils/services/road-accident-participant-service.js","components/logged-panel.js","components/main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","SERVER_URL","APP_NAME","PAGE_LOGIN_URL","PAGE_PERSON_LIST_URL","PAGE_MAIN_URL_PREFIX","PAGE_OFFENCE_LIST_URL","PAGE_ACCIDENT_LIST_URL","PAGE_CAR_LIST_URL","LOCAL_STORAGE_USERNAME_PROPERTY","LOCAL_STORAGE_ACCESS_TOKEN_PROPERTY","tryLogin","login","password","callback","url","axios","post","name","then","response","status","accessToken","data","localStorage","setItem","catch","error","undefined","logout","removeItem","window","location","href","getAccessToken","getItem","LoginComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","bind","assertThisInitialized","pushHistory","state","failed","val","history","push","event","_this2","preventDefault","stopPropagation","success","setState","_this3","react_default","a","createElement","className","Form","onSubmit","FormGroup","bsSize","ControlLabel","FormControl","placeholder","onChange","target","value","type","Static","Button","block","Component","AppHeader","username","Navbar","inverse","Header","Brand","Toggle","Collapse","Nav","NavItem","MenuItem","pullRight","data-toggle","title","onClick","logoutHandler","aria-hidden","EditTooltip","Tooltip","id","DeleteTooltip","Car","car","key","codeCar","vin","governmentNumber","car_brand","model","category","color","person","idPerson","accident","codeAccident","OverlayTrigger","placement","overlay","onEdit","onDelete","configureToken","headers","Authorization","catchError","sendGetRequest","parameters","request","get","assign","sendPostRequest","sendPutRequest","put","sendDeleteRequest","delete","getAccidents","getPersons","EditCarDialog","entity","availablePersons","availableAccidents","updateEntity","loadPersons","loadAccidents","nextProps","nextContext","entityPerson","entityAccident","persons","accidents","_this$props","onConfirm","propName","newVal","defineProperty","propName2","newVal2","_this4","_this$props2","show","onHide","Modal","aria-labelledby","centered","closeButton","Title","Body","e","defaultValue","Feedback","Combobox_default","itemComponent","_ref","item","textField","_ref2","Footer","style","paddingBottom","ConfirmDialog","message","AddBtnStyle","margin","PageHeaderStyle","marginLeft","CarList","currentEditCar","currentDeleteCar","cars","showCreateDialog","showEditDialog","showDeleteDialog","loadData","x","AddTooltip","PageHeader","Table","striped","bordered","condensed","hover","responsive","map","car_car","edit_car_dialog_EditCarDialog","confirm_dialog_ConfirmDialog","getDeleteMessage","Person","surname","middleName","dateBirth","addressPerson","role","EditPersonDialog","es","selected","displayStartDate","locale","date","getMilliseconds","PersonList","currentEditPerson","currentDeletePerson","person_person","edit_person_dialog_EditPersonDialog","Offence","offence","codeOffence","nameOffence","getOffences","EditOffenceDialog","OffenceList","currentEditOffence","currentDeleteOffence","offences","offence_offence","edit_offence_dialog_EditOffenceDialog","Accident","dateAccident","typeAccident","deathToll","numberOfVictims","weather","typeOfCoating","viewRoadConstruction","EditAccidentDialog","AccidentList","currentEditAccident","currentDeleteAccident","accident_accident","edit_accident_dialog_EditAccidentDialog","RoadAccidentParticipant","roadAccidentParticipant","code_road_accident_participant","driversLicenseNumber","typeParticipation","drivingExperience","isGuilty","availableOffences","loadOffences","entityOffence","propName3","newVal3","_this5","_ref3","RoadAccidentParticipantList","currentEditRoadAccidentParticipant","currentDeleteRoadAccidentParticipant","roadAccidentParticipants","road_accident_participant","edit_road_accident_participant_dialog_EditCarDialog","LoggedPanelComponent","handleLogout","currentUsername","app_header_AppHeader","BrowserRouter","Switch","Route","exact","path","component","MainComponent","isLoggedIn","isSuccess","render","security_login","loginRequest","handleLogin","App","components_main","Boolean","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ca593778.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export const SERVER_URL = \"http://localhost:8080\"\r\n\r\nexport const APP_NAME = \"\"\r\n\r\nexport const PAGE_LOGIN_URL = \"/auth/signin\";\r\n\r\nconst PAGE_MAIN_URL_PREFIX = \"/api\";\r\nexport const PAGE_PERSON_LIST_URL = PAGE_MAIN_URL_PREFIX + \"/persons\";\r\nexport const PAGE_OFFENCE_LIST_URL = PAGE_MAIN_URL_PREFIX + \"/offences\";\r\nexport const PAGE_ACCIDENT_LIST_URL = PAGE_MAIN_URL_PREFIX + \"/accidents\";\r\nexport const PAGE_CAR_LIST_URL = PAGE_MAIN_URL_PREFIX + \"/cars\";\r\nexport const PAGE_ROAD_ACCIDENT_PARTICIPANT_LIST_URL = PAGE_MAIN_URL_PREFIX + \"/roadAccidentParticipants\";\r\n\r\n\r\n//Login page consts\r\nexport const LOCAL_STORAGE_USERNAME_PROPERTY = \"username\";\r\nexport const LOCAL_STORAGE_ACCESS_TOKEN_PROPERTY = 'accessToken';","import axios from 'axios'\r\nimport {\r\n    SERVER_URL,\r\n    APP_NAME,\r\n    PAGE_LOGIN_URL,\r\n    LOCAL_STORAGE_ACCESS_TOKEN_PROPERTY,\r\n    LOCAL_STORAGE_USERNAME_PROPERTY } from '../../constants'\r\n\r\nexport function tryLogin(login, password, callback) {\r\n    const url = SERVER_URL + APP_NAME + PAGE_LOGIN_URL;\r\n    const request = axios.post(url, {\r\n        name : login,\r\n        password : password\r\n    }).then(response => {\r\n        if (response.status === 200) {\r\n            const accessToken = response.data;\r\n            localStorage.setItem(LOCAL_STORAGE_USERNAME_PROPERTY, login);\r\n            localStorage.setItem(LOCAL_STORAGE_ACCESS_TOKEN_PROPERTY, accessToken);\r\n            return callback(accessToken);\r\n        }\r\n    });\r\n    request.catch((error) => {\r\n        callback(undefined);\r\n    });\r\n}\r\n\r\nexport function logout() {\r\n    localStorage.removeItem(LOCAL_STORAGE_ACCESS_TOKEN_PROPERTY);\r\n    localStorage.removeItem(LOCAL_STORAGE_USERNAME_PROPERTY);\r\n    window.location.href = \"/signin\";\r\n}\r\n\r\nexport function getAccessToken() {\r\n    return localStorage.getItem(LOCAL_STORAGE_ACCESS_TOKEN_PROPERTY);\r\n}\r\n\r\nexport function getCurrentUsername() {\r\n    return localStorage.getItem(LOCAL_STORAGE_USERNAME_PROPERTY);\r\n}","import React, { Component } from 'react';\r\nimport {Form, ControlLabel, FormControl, FormGroup, Button} from 'react-bootstrap'\r\nimport {getAccessToken, tryLogin} from \"../../routine/utils/services/login-service\";\r\nimport './login-style.css'\r\n\r\nclass LoginComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.pushHistory = this.pushHistory.bind(this);\r\n        this.state = { login : \"admin\", password : \"admin\", failed : false};\r\n    }\r\n\r\n    componentDidMount() {\r\n        let accessToken = getAccessToken();\r\n        if (accessToken) {\r\n            this.pushHistory(\"/\");\r\n        }\r\n    }\r\n\r\n    pushHistory(val) {\r\n        this.props.history.push(val);\r\n    }\r\n\r\n    handleLogin(login, password, callback) {\r\n\r\n\r\n\r\n      //  let g= tryLogin({login, password}, (isSuccess) => callback(isSuccess));\r\n      //  if (g) {\r\n            //   window.location.href = \"/\";\r\n            //    this.pushHistory(\"/carBodyTypes\");\r\n     //   }\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        tryLogin(this.state.login, this.state.password,(success) => {\r\n            if (success) {\r\n                this.pushHistory(\"/\");\r\n                this.setState({failed : false});\r\n            }\r\n            else {\r\n                this.setState({failed : true});\r\n            }\r\n        });\r\n\r\n      /* this.props.loginRequest(\r\n            {\r\n                login : this.state.login,\r\n                password : this.state.password\r\n            },\r\n            (isSuccess) => {\r\n                if (isSuccess)\r\n                    this.pushHistory(\"/\");\r\n                else {\r\n                    this.setState({failed : true});\r\n                }\r\n            });  */\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Login\">\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <FormGroup bsSize='medium'>\r\n                        <ControlLabel>Логин</ControlLabel>\r\n                        <FormControl placeholder=\"Введите логин\"\r\n                                     onChange={(event) => {\r\n                                         this.setState({login : event.target.value});\r\n                                     }}/>\r\n                    </FormGroup>\r\n\r\n                    <FormGroup bsSize='medium'>\r\n                        <ControlLabel>Пароль</ControlLabel>\r\n                        <FormControl placeholder=\"Введите пароль\"\r\n                                     type=\"password\"\r\n                                     onChange={(event) => {\r\n                                         this.setState({password : event.target.value});\r\n                                     }}/>\r\n                    </FormGroup>\r\n                    { this.state.failed ? <FormControl.Static >Неверный логин или пароль.</FormControl.Static> : null }\r\n                    <Button block bsSize='medium' type=\"submit\">Войти</Button>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginComponent;","import React, { Component } from 'react';\r\nimport {Navbar, Nav, NavItem, NavDropdown } from \"react-bootstrap\";\r\nimport MenuItem from \"react-bootstrap/es/MenuItem\";\r\n\r\nexport default class AppHeader extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        let userName = this.props.username;\r\n        return (\r\n            <Navbar inverse>\r\n                <Navbar.Header>\r\n                    <Navbar.Brand>\r\n                        <a href=\"/accidents\">ДТП</a>\r\n                    </Navbar.Brand>\r\n                    <Navbar.Toggle />\r\n                </Navbar.Header>\r\n                <Navbar.Collapse>\r\n                    <Nav>\r\n                        <NavItem href=\"/accidents\">ДТП</NavItem>\r\n                        <NavItem href=\"/roadAccidentParticipants\">Участники ДТП</NavItem>\r\n                        <MenuItem href=\"/cars\">Автомобили</MenuItem>\r\n                        <NavItem href=\"/persons\">Люди</NavItem>\r\n                        <NavItem href=\"/offences\">Нарушения</NavItem>\r\n                    </Nav>\r\n\r\n                    <Nav pullRight>\r\n                        <NavItem data-toggle=\"tooltip\" title=\"На страницу аутентификации\" onClick={this.props.logoutHandler}>\r\n                            <label>Выйти</label>\r\n                            <span className=\"glyphicon glyphicon-log-out\" aria-hidden=\"true\"></span></NavItem>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport {Tooltip} from \"react-bootstrap\";\r\n\r\nexport const EditTooltip = (\r\n    <Tooltip id=\"editTooltip\">\r\n        Редактировать\r\n    </Tooltip>\r\n);\r\n\r\nexport const DeleteTooltip = (\r\n    <Tooltip id=\"deleteTooltip\">\r\n        Удалить\r\n    </Tooltip>\r\n);","import React, { Component } from 'react';\r\nimport {EditTooltip, DeleteTooltip} from \"../tooltips\";\r\nimport {OverlayTrigger} from \"react-bootstrap\";\r\n\r\n\r\nclass Car extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const car = this.props.car;\r\n        return (\r\n            <tr key={car.codeCar}>\r\n                <td>{car.vin}</td>\r\n                <td>{car.governmentNumber}</td>\r\n                <td>{car.car_brand}</td>\r\n                <td>{car.model}</td>  \r\n                <td>{car.category}</td>\r\n                <td>{car.color}</td>\r\n                <td>{car.person.idPerson}</td>\r\n                <td>{car.accident.codeAccident}</td>\r\n                <td>\r\n                    <div className=\"btn-group\">\r\n                        <OverlayTrigger placement=\"top\" overlay={EditTooltip}>\r\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={this.props.onEdit}>\r\n                                <span className=\"glyphicon glyphicon-pencil\" aria-hidden=\"true\"></span>\r\n                            </button>\r\n                        </OverlayTrigger>\r\n\r\n                        <OverlayTrigger placement=\"top\" overlay={DeleteTooltip}>\r\n                            <button type=\"button\" className=\"btn btn-danger\" onClick={this.props.onDelete}>\r\n                                <span className=\"glyphicon glyphicon-remove\" aria-hidden=\"true\"></span>\r\n                            </button>\r\n                        </OverlayTrigger>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Car;\r\n","import axios from 'axios'\r\n\r\nimport {getAccessToken} from \"./login-service\";\r\n\r\nfunction configureToken() {\r\n    const accessToken = getAccessToken();\r\n    return accessToken\r\n        ? {\r\n            headers: {'Authorization': \"Bearer \" + accessToken}\r\n        }\r\n        : { };\r\n}\r\n\r\nconst catchError = (error) => {\r\n    if (error.response && error.response.status === 401) {\r\n        window.location.href = \"/signin\";\r\n    }\r\n};\r\n\r\nexport function sendGetRequest(url, parameters) {\r\n    const request = typeof parameters === \"undefined\" ?\r\n        axios.get(url, configureToken()).then((response) => response.data) :\r\n        axios.get(url, Object.assign({}, {parameters}, configureToken())).then((response) => response.data);\r\n\r\n    request.catch(catchError);\r\n    return request;\r\n}\r\n\r\nexport function sendPostRequest(url, data) {\r\n    const request = axios.post(url, data, configureToken()).then((response) => response.data);\r\n    request.catch(catchError);\r\n    return request;\r\n}\r\n\r\nexport function sendPutRequest(url, data) {\r\n    const request = axios.put(url, data, configureToken()).then((response) => response.data);\r\n    request.catch(catchError);\r\n    return request;\r\n}\r\n\r\nexport function sendDeleteRequest(url) {\r\n    const request = axios.delete(url, configureToken());\r\n    request.catch(catchError);\r\n    return request;\r\n}","import {\r\n    sendGetRequest,\r\n    sendPostRequest,\r\n    sendPutRequest,\r\n    sendDeleteRequest } from './common-service'\r\n\r\nimport {\r\n    SERVER_URL,\r\n    APP_NAME,\r\n    PAGE_ACCIDENT_LIST_URL } from '../../constants'\r\n\r\n\r\nexport function getAccidents() {\r\n    const url = SERVER_URL + APP_NAME + PAGE_ACCIDENT_LIST_URL;\r\n    return sendGetRequest(url);\r\n}\r\n\r\nexport function addAccident(accident) {\r\n    const url = SERVER_URL + APP_NAME + PAGE_ACCIDENT_LIST_URL;\r\n    return sendPostRequest(url, accident);\r\n}\r\n\r\nexport function updateAccident(accident) {\r\n    const url = SERVER_URL + APP_NAME + PAGE_ACCIDENT_LIST_URL;\r\n    return sendPutRequest(url, accident);\r\n}\r\n\r\nexport function deleteAccident(codeAccident) {\r\n    const url = SERVER_URL + APP_NAME + PAGE_ACCIDENT_LIST_URL + \"/\" + codeAccident;\r\n    return sendDeleteRequest(url);\r\n}","import {\r\n    sendGetRequest,\r\n    sendPostRequest,\r\n    sendPutRequest,\r\n    sendDeleteRequest } from './common-service'\r\n\r\nimport {\r\n    SERVER_URL,\r\n    APP_NAME,\r\n    PAGE_PERSON_LIST_URL } from '../../constants'\r\n\r\n\r\nexport function getPersons() {\r\n    const url = SERVER_URL + APP_NAME + PAGE_PERSON_LIST_URL;\r\n    return sendGetRequest(url);\r\n}\r\n\r\nexport function addPerson(person) {\r\n    const url = SERVER_URL + APP_NAME + PAGE_PERSON_LIST_URL;\r\n    return sendPostRequest(url, person);\r\n}\r\n\r\nexport function updatePerson(person) {\r\n    const url = SERVER_URL + APP_NAME + PAGE_PERSON_LIST_URL;\r\n    return sendPutRequest(url, person);\r\n}\r\n\r\nexport function deletePerson(id) {\r\n    const url = SERVER_URL + APP_NAME + PAGE_PERSON_LIST_URL + \"/\" + id;\r\n    return sendDeleteRequest(url);\r\n}","import React, { Component } from 'react';\r\nimport { FormGroup, Form, ControlLabel, FormControl, Modal } from \"react-bootstrap\";\r\nimport { getAccidents } from '../../routine/utils/services/accident-service'\r\nimport { getPersons} from '../../routine/utils/services/person-service'\r\nimport Combobox from 'react-widgets/lib/Combobox'\r\n\r\nexport default class EditCarDialog extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            entity : {},\r\n            availablePersons : [],\r\n            availableAccidents : []\r\n\r\n        }\r\n        this.updateEntity = this.updateEntity.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadPersons();\r\n        this.loadAccidents();\r\n\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps, nextContext) {\r\n        const value = nextProps.value;\r\n        if (value === null || value === undefined) {\r\n            let entityPerson = this.state.availablePersons ? this.state.availablePersons[0] : null;\r\n            let entityAccident = this.state.availableAccidents ? this.state.availableAccidents[0] : null;\r\n            this.updateEntity('person', entityPerson, 'accident', entityAccident);\r\n        }\r\n    }\r\n\r\n    loadPersons() {\r\n        getPersons().then(persons => {\r\n            this.setState({availablePersons : persons});\r\n        })\r\n    }\r\n\r\n    loadAccidents() {\r\n        getAccidents().then(accidents => {\r\n            this.setState({availableAccidents : accidents});\r\n        })\r\n    }\r\n\r\n\r\n    handleSubmit(event) {\r\n        const {onConfirm, value}  = this.props;\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        const entity = Object.assign({}, value || {}, this.state.entity);\r\n        onConfirm(entity);\r\n    }\r\n\r\n    updateEntity(propName, newVal) {\r\n        this.setState({entity: Object.assign({}, this.state.entity, {[propName]: newVal})});\r\n    }\r\n\r\n    updateEntity(propName, newVal, propName2, newVal2) {\r\n        this.setState({entity: Object.assign({}, this.state.entity, {[propName]: newVal}, {[propName2]: newVal2})});\r\n    }\r\n\r\n    render() {\r\n        const {show, onHide, title, value} = this.props;\r\n\r\n        let PersonItem = ({item}) => (\r\n            <span>\r\n                <strong>{item.idPerson}</strong>\r\n            </span>\r\n        );\r\n\r\n        let AccidentItem = ({item}) => (\r\n            <span>\r\n                <strong>{item.codeAccident}</strong>\r\n            </span>\r\n        );\r\n        let availablePersons = this.state.availablePersons;\r\n        let availableAccidents = this.state.availableAccidents;\r\n        let entity = this.state.entity;\r\n        return (\r\n          <Modal show={show}\r\n                 onHide={onHide}\r\n                 aria-labelledby=\"contained-modal-title-vcenter\"\r\n                 centered>\r\n              <Modal.Header closeButton>\r\n                  <Modal.Title>{title}</Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                  <Form onSubmit={e => this.handleSubmit(e)}>\r\n                      <FormGroup>\r\n                          <ControlLabel>{'VIN'}</ControlLabel>\r\n                          <FormControl type=\"text\"\r\n                                       defaultValue={value ? value.vin : null}\r\n                                       onChange={(newVal) => {\r\n                                           this.updateEntity('vin', newVal.target.value);\r\n                                       }}/>\r\n                          <FormControl.Feedback/>\r\n                      </FormGroup>\r\n\r\n                      <FormGroup>\r\n                          <ControlLabel>{'Гос.номер'}</ControlLabel>\r\n                          <FormControl type=\"text\"\r\n                                       defaultValue={value ? value.governmentNumber : null}\r\n                                       onChange={(newVal) => {\r\n                                           this.updateEntity('governmentNumber', newVal.target.value);\r\n                                       }}/>\r\n                          <FormControl.Feedback/>\r\n                      </FormGroup>\r\n\r\n                      <FormGroup>\r\n                          <ControlLabel>{'Марка'}</ControlLabel>\r\n                          <FormControl type=\"text\"\r\n                                       defaultValue={value ? value.car_brand : null}\r\n                                       onChange={(newVal) => {\r\n                                           this.updateEntity('car_brand', newVal.target.value);\r\n                                       }}/>\r\n                          <FormControl.Feedback/>\r\n                      </FormGroup>\r\n\r\n                      <FormGroup>\r\n                          <ControlLabel>{'Модель'}</ControlLabel>\r\n                          <FormControl type=\"text\"\r\n                                       defaultValue={value ? value.model : null}\r\n                                       onChange={(newVal) => {\r\n                                           this.updateEntity('model', newVal.target.value);\r\n                                       }}/>\r\n                          <FormControl.Feedback/>\r\n                      </FormGroup>\r\n\r\n                      <FormGroup>\r\n                          <ControlLabel>{'Категория'}</ControlLabel>\r\n                          <FormControl type=\"text\"\r\n                                       defaultValue={value ? value.category : null}\r\n                                       onChange={(newVal) => {\r\n                                           this.updateEntity('category', newVal.target.value);\r\n                                       }}/>\r\n                          <FormControl.Feedback/>\r\n                      </FormGroup>\r\n\r\n                      <FormGroup>\r\n                          <ControlLabel>{'Цвет'}</ControlLabel>\r\n                          <FormControl type=\"text\"\r\n                                       defaultValue={value ? value.color : null}\r\n                                       onChange={(newVal) => {\r\n                                           this.updateEntity('color', newVal.target.value);\r\n                                       }}/>\r\n                          <FormControl.Feedback/>\r\n                      </FormGroup>\r\n\r\n                      <FormGroup>\r\n                          <ControlLabel>{'Код человека'}</ControlLabel>\r\n                          <Combobox data={availablePersons}\r\n                                    defaultValue={value ? value.person : (availablePersons ? availablePersons[0] : null)}\r\n                                    itemComponent={PersonItem}\r\n                                    textField='idPerson'\r\n                                    value={entity.person}\r\n                                    onChange={item => {\r\n                                        this.updateEntity('person', item);\r\n                                    }}/>\r\n                      </FormGroup>\r\n\r\n                      <FormGroup>\r\n                          <ControlLabel>{'Код ДТП'}</ControlLabel>\r\n                          <Combobox data={availableAccidents}\r\n                                    defaultValue={value ? value.person : (availableAccidents ? availableAccidents[0] : null)}\r\n                                    itemComponent={AccidentItem}\r\n                                    textField='codeAccident'\r\n                                    value={entity.accident}\r\n                                    onChange={item => {\r\n                                        this.updateEntity('accident', item);\r\n                                    }}/>\r\n                      </FormGroup>\r\n\r\n                      <Modal.Footer style={{paddingBottom: 0}}>\r\n                          <button type='submit' className=\"btn btn-success\">Подтвердить</button>\r\n                          <button type='button' onClick={onHide} className=\"btn btn-default\">Отмена</button>\r\n                      </Modal.Footer>\r\n                  </Form>\r\n              </Modal.Body>\r\n          </Modal>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { FormGroup, Form, ControlLabel, FormControl, Button, ButtonGroup, Modal } from \"react-bootstrap\";\r\nexport default class ConfirmDialog extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        const {onConfirm}  = this.props;\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        onConfirm();\r\n    }\r\n\r\n    render() {\r\n        const {show, onHide, title, message} = this.props;\r\n        return (\r\n            <Modal show={show}\r\n                   onHide={onHide}\r\n                   aria-labelledby=\"contained-modal-title-vcenter\"\r\n                   centered>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{title}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form onSubmit={e => this.handleSubmit(e)}>\r\n                        <FormGroup>\r\n                            <ControlLabel>{message}</ControlLabel>\r\n                        </FormGroup>\r\n                        <Modal.Footer style={{paddingBottom: 0}}>\r\n                            <button type='submit' className=\"btn btn-success\">Подтвердить</button>\r\n                            <button type='button' onClick={onHide} className=\"btn btn-default\">Отмена</button>\r\n                        </Modal.Footer>\r\n                    </Form>\r\n                </Modal.Body>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n","export const AddBtnStyle = {\r\n    margin : '12px'\r\n};\r\n\r\nexport const PageHeaderStyle = {\r\n    marginLeft : '16px'\r\n}","import React, { Component } from 'react';\r\nimport {OverlayTrigger, PageHeader, Table, Tooltip} from \"react-bootstrap\";\r\nimport Car from './car';\r\nimport {\r\n    getCars,\r\n    addCar,\r\n    updateCar,\r\n    deleteCar } from '../../routine/utils/services/car-service'\r\n\r\nimport EditCarDialog from './edit-car-dialog'\r\nimport ConfirmDialog from '../confirm-dialog'\r\nimport {AddBtnStyle, PageHeaderStyle} from '../fast-styles'\r\n\r\nclass CarList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentEditCar : null,\r\n            currentDeleteCar : null,\r\n            cars: [],\r\n            showCreateDialog : false,\r\n            showEditDialog : false,\r\n            showDeleteDialog : false};\r\n        this.loadData = this.loadData.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n\r\n    loadData() {\r\n        getCars()\r\n            .then(data => {\r\n                let x = Object.assign({}, this.state.cars, {data})\r\n                this.setState(\r\n                    {cars : x.data });\r\n            });\r\n    }\r\n\r\n    getDeleteMessage() {\r\n        let car = this.state.currentDeleteCar;\r\n        if (car === null || car === undefined)\r\n            return \"Вы действительно хотите удалить выбранный элемент?\";\r\n        return \"Вы действительно хотите удалить автомобиль '\" + car.codeCar + \"' владельцем которого является '\"\r\n        + car.person.idPerson + \"' побывавший в ДТП '\"\r\n        + car.accident.codeAccident + \"'?\";\r\n    }\r\n\r\n    render() {\r\n        const AddTooltip = (\r\n            <Tooltip id=\"showCarsTooltip\">\r\n                Добавить автомобиль\r\n            </Tooltip>\r\n        );\r\n\r\n        return (\r\n            <div>\r\n                <PageHeader style={PageHeaderStyle}>\r\n                    Автомобили\r\n                    <OverlayTrigger placement=\"right\" overlay={AddTooltip}>\r\n                        <button type=\"button\" style={AddBtnStyle} className=\"btn btn-default\" onClick={() => {this.setState({showCreateDialog: true});}}>\r\n                            <span className=\"glyphicon glyphicon-plus\" aria-hidden=\"true\"></span>\r\n                        </button>\r\n                    </OverlayTrigger>\r\n                </PageHeader>\r\n\r\n            <Table striped bordered condensed hover responsive>\r\n                <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>VIN</th>\r\n                        <th>Гос.номер</th>\r\n                        <th>Марка</th>\r\n                        <th>Модель</th>\r\n                        <th>Категория</th>\r\n                        <th>Цвет</th>\r\n                        <th>Код человека</th>\r\n                        <th>Код ДТП</th>\r\n                        <th>Действия</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {\r\n                    this.state.cars.map(car => {\r\n                        return <Car key={car.id} car={car}\r\n                                            onEdit={e => {\r\n                                                this.setState({currentEditCar : car, showEditDialog : true});\r\n                                            } }\r\n                                            onDelete={e => {\r\n                                                this.setState({currentDeleteCar : car, showDeleteDialog : true});\r\n                                            } }/>\r\n                    })\r\n                }\r\n                </tbody>\r\n            </Table>\r\n                <EditCarDialog title={'Добавить автомобиль'}\r\n                                       show={this.state.showCreateDialog}\r\n                                       onConfirm={(entity) => {\r\n                                           addCar(entity).then(() => {\r\n                                               this.loadData();\r\n                                               this.setState({showCreateDialog: false});\r\n                                           });\r\n                                       }}\r\n                                       onHide={() => {\r\n                                           this.setState({showCreateDialog: false});\r\n                                       }}/>\r\n\r\n                <EditCarDialog title={'Редактировать автомобиль'}\r\n                                       show={this.state.showEditDialog}\r\n                                       value={this.state.currentEditCar}\r\n                                       onConfirm={(entity) => {\r\n                                           updateCar(entity).then(() => {\r\n                                               this.loadData();\r\n                                               this.setState({showEditDialog: false});\r\n                                           });\r\n                                       }}\r\n                                       onHide={() => {\r\n                                           this.setState({showEditDialog: false});\r\n                                       }}/>\r\n\r\n                <ConfirmDialog title={'Удалить автомобиль'}\r\n                               message={this.getDeleteMessage()}\r\n                                show={this.state.showDeleteDialog}\r\n                               onConfirm={() => {\r\n                                   deleteCar(this.state.currentDeleteCar.id).then(() => {\r\n                                       this.loadData();\r\n                                       this.setState({showDeleteDialog : false});\r\n                                   });\r\n                               }}\r\n                               onHide={() => {\r\n                                   this.setState({showDeleteDialog: false});\r\n                               }}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CarList;\r\n","import {\r\n    sendGetRequest,\r\n    sendPostRequest,\r\n    sendPutRequest,\r\n    sendDeleteRequest } from './common-service'\r\n\r\nimport {\r\n    SERVER_URL,\r\n    APP_NAME,\r\n    PAGE_CAR_LIST_URL } from '../../constants'\r\n\r\nexport function getCars() {\r\n    const url = SERVER_URL + APP_NAME + PAGE_CAR_LIST_URL;\r\n    return sendGetRequest(url);\r\n}\r\n\r\nexport function addCar(car) {\r\n    const url = SERVER_URL + APP_NAME + PAGE_CAR_LIST_URL;\r\n    return sendPostRequest(url, car);\r\n}\r\n\r\nexport function updateCar(car) {\r\n    const url = SERVER_URL + APP_NAME + PAGE_CAR_LIST_URL;\r\n    return sendPutRequest(url, car);\r\n}\r\n\r\nexport function deleteCar(codeCar) {\r\n    const url = SERVER_URL + APP_NAME + PAGE_CAR_LIST_URL + \"/\" + codeCar;\r\n    return sendDeleteRequest(url);\r\n}","import React, { Component } from 'react';\r\nimport {EditTooltip, DeleteTooltip} from \"../tooltips\";\r\nimport {OverlayTrigger} from \"react-bootstrap\";\r\n\r\nclass Person extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const person = this.props.person;\r\n        return (\r\n            <tr key={person.idPerson}>\r\n                <td>{person.name}</td>\r\n                <td>{person.surname}</td>\r\n                <td>{person.middleName}</td>\r\n                <td>{person.dateBirth}</td>\r\n                <td>{person.addressPerson}</td>\r\n                <td>{person.role}</td>\r\n                <td>{person.password}</td>\r\n                <td>\r\n                    <div className=\"btn-group\">\r\n                        <OverlayTrigger placement=\"top\" overlay={EditTooltip}>\r\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={this.props.onEdit}>\r\n                                <span className=\"glyphicon glyphicon-pencil\" aria-hidden=\"true\"></span>\r\n                            </button>\r\n                        </OverlayTrigger>\r\n                        <OverlayTrigger placement=\"top\" overlay={DeleteTooltip}>\r\n                            <button type=\"button\" className=\"btn btn-danger\" onClick={this.props.onDelete}>\r\n                                <span className=\"glyphicon glyphicon-remove\" aria-hidden=\"true\"></span>\r\n                            </button>\r\n                        </OverlayTrigger>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Person;\r\n","import React, { Component } from 'react';\r\nimport { FormGroup, Form, ControlLabel, FormControl, Button, ButtonGroup, Modal } from \"react-bootstrap\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nexport default class EditPersonDialog extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            entity : {}\r\n        }\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        const {onConfirm, value}  = this.props;\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        const entity = Object.assign({}, value || {}, this.state.entity);\r\n        onConfirm(entity);\r\n    }\r\n\r\n    updateEntity(propName, newVal) {\r\n        this.setState({entity: Object.assign({}, this.state.entity, {[propName]: newVal})});\r\n    }\r\n\r\n    render() {\r\n        const {show, onHide, title, value} = this.props;\r\n        return (\r\n          <Modal show={show}\r\n                 onHide={onHide}\r\n                 aria-labelledby=\"contained-modal-title-vcenter\"\r\n                 centered>\r\n              <Modal.Header closeButton>\r\n                  <Modal.Title>{title}</Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                  <Form onSubmit={e => this.handleSubmit(e)}>\r\n                      <FormGroup>\r\n                          <ControlLabel>{'Фамилия'}</ControlLabel>\r\n                          <FormControl type=\"text\"\r\n                                       defaultValue={value ? value.surname : null}\r\n                                       onChange={(newVal) => {\r\n                                           this.updateEntity('surname', newVal.target.value);\r\n                                       }}/>\r\n                          <FormControl.Feedback/>\r\n                      </FormGroup>\r\n\r\n                      <FormGroup>\r\n                          <ControlLabel>{'Имя'}</ControlLabel>\r\n                          <FormControl type=\"text\"\r\n                                       defaultValue={value ? value.name : null}\r\n                                       onChange={(newVal) => {\r\n                                           this.updateEntity('name', newVal.target.value);\r\n                                       }}/>\r\n                          <FormControl.Feedback/>\r\n                      </FormGroup>\r\n\r\n                      <FormGroup>\r\n                          <ControlLabel>{'Отчество'}</ControlLabel>\r\n                          <FormControl type=\"text\"\r\n                                       defaultValue={value ? value.middleName : null}\r\n                                       onChange={(newVal) => {\r\n                                           this.updateEntity('middleName', newVal.target.value);\r\n                                       }}/>\r\n                          <FormControl.Feedback/>\r\n                      </FormGroup>\r\n\r\n                      <FormGroup>\r\n                          <ControlLabel>{'Дата рождения'}</ControlLabel>\r\n                          <DatePicker selected={this.state.displayStartDate}\r\n                                      locale={'ru-RU'}\r\n                                      onChange={date => {\r\n                                          this.updateEntity('dateBirth', date.getMilliseconds());\r\n                                          this.setState({displayStartDate : date});\r\n                                      }}/>\r\n                      </FormGroup>\r\n\r\n                      <FormGroup>\r\n                          <ControlLabel>{'Адрес'}</ControlLabel>\r\n                          <FormControl type=\"text\"\r\n                                       defaultValue={value ? value.addressPerson : null}\r\n                                       onChange={(newVal) => {\r\n                                           this.updateEntity('addressPerson', newVal.target.value);\r\n                                       }}/>\r\n                          <FormControl.Feedback/>\r\n                      </FormGroup>\r\n\r\n                      <FormGroup>\r\n                          <ControlLabel>{'Роль'}</ControlLabel>\r\n                          <FormControl type=\"text\"\r\n                                       defaultValue={value ? value.role : null}\r\n                                       onChange={(newVal) => {\r\n                                           this.updateEntity('role', newVal.target.value);\r\n                                       }}/>\r\n                          <FormControl.Feedback/>\r\n                      </FormGroup>\r\n\r\n                      <FormGroup>\r\n                          <ControlLabel>{'Пароль'}</ControlLabel>\r\n                          <FormControl type=\"text\"\r\n                                       defaultValue={value ? value.password : null}\r\n                                       onChange={(newVal) => {\r\n                                           this.updateEntity('password', newVal.target.value);\r\n                                       }}/>\r\n                          <FormControl.Feedback/>\r\n                      </FormGroup>\r\n\r\n                      <Modal.Footer style={{paddingBottom: 0}}>\r\n                          <button type='submit' className=\"btn btn-success\">Подтвердить</button>\r\n                          <button type='button' onClick={onHide} className=\"btn btn-default\">Отмена</button>\r\n                      </Modal.Footer>\r\n                  </Form>\r\n              </Modal.Body>\r\n          </Modal>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {OverlayTrigger, PageHeader, Table, Tooltip} from \"react-bootstrap\";\r\nimport Person from './person';\r\nimport {\r\n    getPersons,\r\n    addPerson,\r\n    updatePerson,\r\n    deletePerson  } from '../../routine/utils/services/person-service'\r\n\r\nimport EditPersonDialog from './edit-person-dialog'\r\nimport ConfirmDialog from '../confirm-dialog'\r\nimport {AddBtnStyle, PageHeaderStyle} from \"../fast-styles\";\r\n\r\nclass PersonList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentEditPerson : null,\r\n            currentDeletePerson : null,\r\n            persons: [],\r\n            showCreateDialog : false,\r\n            showEditDialog : false,\r\n            showDeleteDialog : false};\r\n        this.loadData = this.loadData.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n\r\n    loadData() {\r\n        getPersons()\r\n            .then(data => {\r\n                let x = Object.assign({}, this.state.persons, {data})\r\n                this.setState(\r\n                    {persons : x.data });\r\n            });\r\n    }\r\n\r\n    getDeleteMessage() {\r\n        let person = this.state.currentDeletePerson;\r\n        if (person === null || person === undefined)\r\n            return \"Вы действительно хотите удалить выбранный элемент?\";\r\n        return 'Вы действительно хотите удалить человека \"' + person.name + \r\n        '\" \"' + person.surname + '\" \"' + person.middleName +\r\n         + '\"? ';\r\n    }\r\n\r\n    render() {\r\n        const AddTooltip = (\r\n            <Tooltip id=\"showCarsTooltip\">\r\n                Добавить человека\r\n            </Tooltip>\r\n        );\r\n\r\n        return (\r\n            <div>\r\n                <PageHeader style={PageHeaderStyle}>\r\n                    Люди\r\n                    <OverlayTrigger placement=\"right\" overlay={AddTooltip}>\r\n                        <button style={AddBtnStyle} type=\"button\" className=\"btn btn-default\" onClick={() => {this.setState({showCreateDialog: true});}}>\r\n                            <span className=\"glyphicon glyphicon-plus\" aria-hidden=\"true\"></span>\r\n                        </button>\r\n                    </OverlayTrigger>\r\n                </PageHeader>\r\n\r\n                <Table striped bordered condensed hover responsive>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th className=\"col-md-1\">Имя</th>\r\n                            <th className=\"col-md-1\">Фамилия</th>\r\n                            <th className=\"col-md-1\">Отчество</th>\r\n                            <th className=\"col-md-1\">Дата рождения</th>\r\n                            <th className=\"col-md-4\">Адрес</th>\r\n                            <th className=\"col-md-1\">Роль</th>\r\n                            <th className=\"col-md-1\">Пароль</th>\r\n                            <th>Действия</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                        this.state.persons.map(person => {\r\n                            return <Person key={person.idPerson} person={person}\r\n                                                onEdit={e => {\r\n                                                    this.setState({currentEditPerson : person, showEditDialog : true});\r\n                                                } }\r\n                                                onDelete={e => {\r\n                                                    this.setState({currentDeletePerson : person, showDeleteDialog : true});\r\n                                                } }/>\r\n                        })\r\n                    }\r\n                    </tbody>\r\n                </Table>\r\n\r\n                <EditPersonDialog title={'Добавить человека'}\r\n                                       show={this.state.showCreateDialog}\r\n                                       onConfirm={(entity) => {\r\n                                           addPerson(entity).then(() => {\r\n                                               this.loadData();\r\n                                               this.setState({showCreateDialog: false});\r\n                                           });\r\n                                       }}\r\n                                       onHide={() => {\r\n                                           this.setState({showCreateDialog: false});\r\n                                       }}/>\r\n\r\n                <EditPersonDialog title={'Редактирование информации о человеке'}\r\n                                       show={this.state.showEditDialog}\r\n                                       value={this.state.currentEditPerson}\r\n                                       onConfirm={(entity) => {\r\n                                           updatePerson(entity).then(() => {\r\n                                               this.loadData();\r\n                                               this.setState({showEditDialog: false});\r\n                                           });\r\n                                       }}\r\n                                       onHide={() => {\r\n                                           this.setState({showEditDialog: false});\r\n                                       }}/>\r\n\r\n                <ConfirmDialog title={'Удалить человека'}\r\n                               message={this.getDeleteMessage()}\r\n                                show={this.state.showDeleteDialog}\r\n                               onConfirm={() => {\r\n                                   deletePerson(this.state.currentDeletePerson.id).then(() => {\r\n                                       this.loadData();\r\n                                       this.setState({showDeleteDialog : false});\r\n                                   });\r\n                               }}\r\n                               onHide={() => {\r\n                                   this.setState({showDeleteDialog: false});\r\n                               }}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PersonList;\r\n","import React, { Component } from 'react';\r\nimport {EditTooltip, DeleteTooltip} from \"../tooltips\";\r\nimport {OverlayTrigger} from \"react-bootstrap\";\r\n\r\nclass Offence extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const offence = this.props.offence;\r\n        return (\r\n            <tr key={offence.codeOffence}>\r\n                <td>{offence.nameOffence}</td>\r\n\r\n                <td>\r\n                    <div className=\"btn-group\">\r\n                        <OverlayTrigger placement=\"top\" overlay={EditTooltip}>\r\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={this.props.onEdit}>\r\n                                <span className=\"glyphicon glyphicon-pencil\" aria-hidden=\"true\"></span>\r\n                            </button>\r\n                        </OverlayTrigger>\r\n                        <OverlayTrigger placement=\"top\" overlay={DeleteTooltip}>\r\n                            <button type=\"button\" className=\"btn btn-danger\" onClick={this.props.onDelete}>\r\n                                <span className=\"glyphicon glyphicon-remove\" aria-hidden=\"true\"></span>\r\n                            </button>\r\n                        </OverlayTrigger>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Offence;","import {\r\n    sendGetRequest,\r\n    sendPostRequest,\r\n    sendPutRequest,\r\n    sendDeleteRequest } from './common-service'\r\n\r\nimport {\r\n    SERVER_URL,\r\n    APP_NAME,\r\n    PAGE_OFFENCE_LIST_URL } from '../../constants'\r\n\r\n\r\nexport function getOffences() {\r\n    const url = SERVER_URL + APP_NAME + PAGE_OFFENCE_LIST_URL;\r\n    return sendGetRequest(url);\r\n}\r\n\r\nexport function addOffence(offence) {\r\n    const url = SERVER_URL + APP_NAME + PAGE_OFFENCE_LIST_URL;\r\n    return sendPostRequest(url, offence);\r\n}\r\n\r\nexport function updateOffence(offence) {\r\n    const url = SERVER_URL + APP_NAME + PAGE_OFFENCE_LIST_URL;\r\n    return sendPutRequest(url, offence);\r\n}\r\n\r\nexport function deleteOffence(codeOffence) {\r\n    const url = SERVER_URL + APP_NAME + PAGE_OFFENCE_LIST_URL + \"/\" + codeOffence;\r\n    return sendDeleteRequest(url);\r\n}","import React, { Component } from 'react';\r\nimport { FormGroup, Form, ControlLabel, FormControl, Button, ButtonGroup, Modal } from \"react-bootstrap\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nexport default class EditOffenceDialog extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            entity : {}\r\n        }\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        const {onConfirm, value}  = this.props;\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        const entity = Object.assign({}, value || {}, this.state.entity);\r\n        onConfirm(entity);\r\n    }\r\n\r\n    updateEntity(propName, newVal) {\r\n        this.setState({entity: Object.assign({}, this.state.entity, {[propName]: newVal})});\r\n    }\r\n\r\n    render() {\r\n        const {show, onHide, title, value} = this.props;\r\n        return (\r\n          <Modal show={show}\r\n                 onHide={onHide}\r\n                 aria-labelledby=\"contained-modal-title-vcenter\"\r\n                 centered>\r\n              <Modal.Header closeButton>\r\n                  <Modal.Title>{title}</Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                  <Form onSubmit={e => this.handleSubmit(e)}>\r\n                      <FormGroup>\r\n                          <ControlLabel>{'Название нарушения'}</ControlLabel>\r\n                          <FormControl type=\"text\"\r\n                                       defaultValue={value ? value.nameOffence : null}\r\n                                       onChange={(newVal) => {\r\n                                           this.updateEntity('nameOffence', newVal.target.value);\r\n                                       }}/>\r\n                          <FormControl.Feedback/>\r\n                      </FormGroup>\r\n\r\n                      <Modal.Footer style={{paddingBottom: 0}}>\r\n                          <button type='submit' className=\"btn btn-success\">Подтвердить</button>\r\n                          <button type='button' onClick={onHide} className=\"btn btn-default\">Отмена</button>\r\n                      </Modal.Footer>\r\n                  </Form>\r\n              </Modal.Body>\r\n          </Modal>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {OverlayTrigger, PageHeader, Table, Tooltip} from \"react-bootstrap\";\r\nimport Offence from './offence';\r\nimport {\r\n    getOffences,\r\n    addOffence,\r\n    updateOffence,\r\n    deleteOffence  } from '../../routine/utils/services/offence-service'\r\n\r\nimport EditOffenceDialog from './edit-offence-dialog'\r\nimport ConfirmDialog from '../confirm-dialog'\r\nimport {AddBtnStyle, PageHeaderStyle} from \"../fast-styles\";\r\n\r\nclass OffenceList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentEditOffence : null,\r\n            currentDeleteOffence : null,\r\n            offences: [],\r\n            showCreateDialog : false,\r\n            showEditDialog : false,\r\n            showDeleteDialog : false};\r\n        this.loadData = this.loadData.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n\r\n    loadData() {\r\n        getOffences()\r\n            .then(data => {\r\n                let x = Object.assign({}, this.state.offences, {data})\r\n                this.setState(\r\n                    {offences : x.data });\r\n            });\r\n    }\r\n\r\n    getDeleteMessage() {\r\n        let offence = this.state.currentDeleteOffence;\r\n        if (offence === null || offence === undefined)\r\n            return \"Вы действительно хотите удалить выбранный элемент?\";\r\n        return 'Вы действительно хотите удалить нарушение \"' + offence.nameOffence + \r\n         + '\"? ';\r\n    }\r\n\r\n    render() {\r\n        const AddTooltip = (\r\n            <Tooltip id=\"showCarsTooltip\">\r\n                Добавить нарушение\r\n            </Tooltip>\r\n        );\r\n\r\n        return (\r\n            <div>\r\n                <PageHeader style={PageHeaderStyle}>\r\n                    Нарушения\r\n                    <OverlayTrigger placement=\"right\" overlay={AddTooltip}>\r\n                        <button style={AddBtnStyle} type=\"button\" className=\"btn btn-default\" onClick={() => {this.setState({showCreateDialog: true});}}>\r\n                            <span className=\"glyphicon glyphicon-plus\" aria-hidden=\"true\"></span>\r\n                        </button>\r\n                    </OverlayTrigger>\r\n                </PageHeader>\r\n\r\n                <Table striped bordered condensed hover responsive>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>Название нарушения</th>\r\n                            <th>Действия</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                        this.state.offences.map(offence => {\r\n                            return <Offence key={offence.codeOffence} offence={offence}\r\n                                                onEdit={e => {\r\n                                                    this.setState({currentEditOffence : offence, showEditDialog : true});\r\n                                                } }\r\n                                                onDelete={e => {\r\n                                                    this.setState({currentDeleteOffence : offence, showDeleteDialog : true});\r\n                                                } }/>\r\n                        })\r\n                    }\r\n                    </tbody>\r\n                </Table>\r\n\r\n                <EditOffenceDialog title={'Добавить информацию о нарушении'}\r\n                                       show={this.state.showCreateDialog}\r\n                                       onConfirm={(entity) => {\r\n                                           addOffence(entity).then(() => {\r\n                                               this.loadData();\r\n                                               this.setState({showCreateDialog: false});\r\n                                           });\r\n                                       }}\r\n                                       onHide={() => {\r\n                                           this.setState({showCreateDialog: false});\r\n                                       }}/>\r\n\r\n                <EditOffenceDialog title={'Редактирование информации о нарушении'}\r\n                                       show={this.state.showEditDialog}\r\n                                       value={this.state.currentEditOffence}\r\n                                       onConfirm={(entity) => {\r\n                                           updateOffence(entity).then(() => {\r\n                                               this.loadData();\r\n                                               this.setState({showEditDialog: false});\r\n                                           });\r\n                                       }}\r\n                                       onHide={() => {\r\n                                           this.setState({showEditDialog: false});\r\n                                       }}/>\r\n\r\n                <ConfirmDialog title={'Удалить нарушение'}\r\n                               message={this.getDeleteMessage()}\r\n                                show={this.state.showDeleteDialog}\r\n                               onConfirm={() => {\r\n                                   deleteOffence(this.state.currentDeleteOffence.codeOffence).then(() => {\r\n                                       this.loadData();\r\n                                       this.setState({showDeleteDialog : false});\r\n                                   });\r\n                               }}\r\n                               onHide={() => {\r\n                                   this.setState({showDeleteDialog: false});\r\n                               }}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default OffenceList;\r\n","import React, { Component } from 'react';\r\nimport {EditTooltip, DeleteTooltip} from \"../tooltips\";\r\nimport {OverlayTrigger} from \"react-bootstrap\";\r\n\r\nclass Accident extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const accident = this.props.accident;\r\n        return (\r\n            <tr key={accident.codeAccident}>\r\n                <td>{accident.dateAccident}</td>\r\n                <td>{accident.typeAccident}</td>\r\n                <td>{accident.deathToll}</td>\r\n                <td>{accident.numberOfVictims}</td>\r\n                <td>{accident.weather}</td>\r\n                <td>{accident.typeOfCoating}</td>\r\n                <td>{accident.viewRoadConstruction}</td>\r\n                <td>\r\n                    <div className=\"btn-group\">\r\n                        <OverlayTrigger placement=\"top\" overlay={EditTooltip}>\r\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={this.props.onEdit}>\r\n                                <span className=\"glyphicon glyphicon-pencil\" aria-hidden=\"true\"></span>\r\n                            </button>\r\n                        </OverlayTrigger>\r\n                        <OverlayTrigger placement=\"top\" overlay={DeleteTooltip}>\r\n                            <button type=\"button\" className=\"btn btn-danger\" onClick={this.props.onDelete}>\r\n                                <span className=\"glyphicon glyphicon-remove\" aria-hidden=\"true\"></span>\r\n                            </button>\r\n                        </OverlayTrigger>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Accident;\r\n","import React, { Component } from 'react';\r\nimport { FormGroup, Form, ControlLabel, FormControl, Button, ButtonGroup, Modal } from \"react-bootstrap\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nexport default class EditAccidentDialog extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            entity : {}\r\n        }\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        const {onConfirm, value}  = this.props;\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        const entity = Object.assign({}, value || {}, this.state.entity);\r\n        onConfirm(entity);\r\n    }\r\n\r\n    updateEntity(propName, newVal) {\r\n        this.setState({entity: Object.assign({}, this.state.entity, {[propName]: newVal})});\r\n    }\r\n\r\n    render() {\r\n        const {show, onHide, title, value} = this.props;\r\n        return (\r\n          <Modal show={show}\r\n                 onHide={onHide}\r\n                 aria-labelledby=\"contained-modal-title-vcenter\"\r\n                 centered>\r\n              <Modal.Header closeButton>\r\n                  <Modal.Title>{title}</Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                  <Form onSubmit={e => this.handleSubmit(e)}>\r\n\r\n                    <FormGroup>\r\n                          <ControlLabel>{'Дата ДТП'}</ControlLabel>\r\n                          <DatePicker selected={this.state.displayStartDate}\r\n                                      locale={'ru-RU'}\r\n                                      onChange={date => {\r\n                                          this.updateEntity('dateAccident', date.getMilliseconds());\r\n                                          this.setState({displayStartDate : date});\r\n                                      }}/>\r\n                      </FormGroup>\r\n\r\n                      <FormGroup>\r\n                          <ControlLabel>{'Тип ДТП'}</ControlLabel>\r\n                          <FormControl type=\"text\"\r\n                                       defaultValue={value ? value.typeAccident : null}\r\n                                       onChange={(newVal) => {\r\n                                           this.updateEntity('typeAccident', newVal.target.value);\r\n                                       }}/>\r\n                          <FormControl.Feedback/>\r\n                      </FormGroup>\r\n\r\n                      <FormGroup>\r\n                          <ControlLabel>{'Количество погибших'}</ControlLabel>\r\n                          <FormControl type=\"text\"\r\n                                       defaultValue={value ? value.deathToll : null}\r\n                                       onChange={(newVal) => {\r\n                                           this.updateEntity('deathToll', newVal.target.value);\r\n                                       }}/>\r\n                          <FormControl.Feedback/>\r\n                      </FormGroup>\r\n\r\n                      <FormGroup>\r\n                          <ControlLabel>{'Количество пострадавших'}</ControlLabel>\r\n                          <FormControl type=\"text\"\r\n                                       defaultValue={value ? value.numberOfVictims : null}\r\n                                       onChange={(newVal) => {\r\n                                           this.updateEntity('numberOfVictims', newVal.target.value);\r\n                                       }}/>\r\n                          <FormControl.Feedback/>\r\n                      </FormGroup>\r\n\r\n                      <FormGroup>\r\n                          <ControlLabel>{'Погодные условия'}</ControlLabel>\r\n                          <FormControl type=\"text\"\r\n                                       defaultValue={value ? value.weather : null}\r\n                                       onChange={(newVal) => {\r\n                                           this.updateEntity('weather', newVal.target.value);\r\n                                       }}/>\r\n                          <FormControl.Feedback/>\r\n                      </FormGroup>\r\n\r\n                      <FormGroup>\r\n                          <ControlLabel>{'Вид покрытия'}</ControlLabel>\r\n                          <FormControl type=\"text\"\r\n                                       defaultValue={value ? value.typeOfCoating : null}\r\n                                       onChange={(newVal) => {\r\n                                           this.updateEntity('typeOfCoating', newVal.target.value);\r\n                                       }}/>\r\n                          <FormControl.Feedback/>\r\n                      </FormGroup>\r\n\r\n                      <FormGroup>\r\n                          <ControlLabel>{'Вид сооружения дороги'}</ControlLabel>\r\n                          <FormControl type=\"text\"\r\n                                       defaultValue={value ? value.viewRoadConstruction : null}\r\n                                       onChange={(newVal) => {\r\n                                           this.updateEntity('viewRoadConstruction', newVal.target.value);\r\n                                       }}/>\r\n                          <FormControl.Feedback/>\r\n                      </FormGroup>\r\n\r\n                      <Modal.Footer style={{paddingBottom: 0}}>\r\n                          <button type='submit' className=\"btn btn-success\">Подтвердить</button>\r\n                          <button type='button' onClick={onHide} className=\"btn btn-default\">Отмена</button>\r\n                      </Modal.Footer>\r\n                  </Form>\r\n              </Modal.Body>\r\n          </Modal>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {OverlayTrigger, PageHeader, Table, Tooltip} from \"react-bootstrap\";\r\nimport Accident from './accident';\r\nimport {\r\n    getAccidents,\r\n    addAccident,\r\n    updateAccident,\r\n    deleteAccident } from '../../routine/utils/services/accident-service'\r\n\r\nimport EditAccidentDialog from './edit-accident-dialog'\r\nimport ConfirmDialog from '../confirm-dialog'\r\nimport {AddBtnStyle, PageHeaderStyle} from \"../fast-styles\";\r\n\r\nclass AccidentList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentEditAccident : null,\r\n            currentDeleteAccident : null,\r\n            accidents: [],\r\n            showCreateDialog : false,\r\n            showEditDialog : false,\r\n            showDeleteDialog : false};\r\n        this.loadData = this.loadData.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n\r\n    loadData() {\r\n        getAccidents()\r\n            .then(data => {\r\n                let x = Object.assign({}, this.state.accidents, {data})\r\n                this.setState(\r\n                    {accidents : x.data });\r\n            });\r\n    }\r\n\r\n    getDeleteMessage() {\r\n        let accident = this.state.currentDeleteAccident;\r\n        if (accident === null || accident === undefined)\r\n            return \"Вы действительно хотите удалить выбранный элемент?\";\r\n        return 'Вы действительно хотите удалить ДТП \"' + accident.codeAccident\r\n         + '\"? ';\r\n    }\r\n\r\n    render() {\r\n        const AddTooltip = (\r\n            <Tooltip id=\"showCarsTooltip\">\r\n                Добавить ДТП\r\n            </Tooltip>\r\n        );\r\n\r\n        return (\r\n            <div>\r\n                <PageHeader style={PageHeaderStyle}>\r\n                    ДТП\r\n                    <OverlayTrigger placement=\"right\" overlay={AddTooltip}>\r\n                        <button style={AddBtnStyle} type=\"button\" className=\"btn btn-default\" onClick={() => {this.setState({showCreateDialog: true});}}>\r\n                            <span className=\"glyphicon glyphicon-plus\" aria-hidden=\"true\"></span>\r\n                        </button>\r\n                    </OverlayTrigger>\r\n                </PageHeader>\r\n\r\n                <Table striped bordered condensed hover responsive>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>Дата ДТП</th>\r\n                            <th>Тип ДТП</th>\r\n                            <th>Погибло</th>\r\n                            <th>Пострадало</th>\r\n                            <th>Погодные условия</th>\r\n                            <th>Вид покрытия</th>\r\n                            <th>Вид сооружения дороги</th>\r\n                            <th>Действия</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                        this.state.accidents.map(accident => {\r\n                            return <Accident key={accident.codeAccident} accident={accident}\r\n                                                onEdit={e => {\r\n                                                    this.setState({currentEditAccident : accident, showEditDialog : true});\r\n                                                } }\r\n                                                onDelete={e => {\r\n                                                    this.setState({currentDeleteAccident : accident, showDeleteDialog : true});\r\n                                                } }/>\r\n                        })\r\n                    }\r\n                    </tbody>\r\n                </Table>\r\n\r\n                <EditAccidentDialog title={'Добавить ДТП'}\r\n                                       show={this.state.showCreateDialog}\r\n                                       onConfirm={(entity) => {\r\n                                           addAccident(entity).then(() => {\r\n                                               this.loadData();\r\n                                               this.setState({showCreateDialog: false});\r\n                                           });\r\n                                       }}\r\n                                       onHide={() => {\r\n                                           this.setState({showCreateDialog: false});\r\n                                       }}/>\r\n\r\n                <EditAccidentDialog title={'Редактирование информации о ДТП'}\r\n                                       show={this.state.showEditDialog}\r\n                                       value={this.state.currentEditAccident}\r\n                                       onConfirm={(entity) => {\r\n                                           updateAccident(entity).then(() => {\r\n                                               this.loadData();\r\n                                               this.setState({showEditDialog: false});\r\n                                           });\r\n                                       }}\r\n                                       onHide={() => {\r\n                                           this.setState({showEditDialog: false});\r\n                                       }}/>\r\n\r\n                <ConfirmDialog title={'Удалить ДТП'}\r\n                               message={this.getDeleteMessage()}\r\n                                show={this.state.showDeleteDialog}\r\n                               onConfirm={() => {\r\n                                   deleteAccident(this.state.currentDeleteAccident.codeAccident).then(() => {\r\n                                       this.loadData();\r\n                                       this.setState({showDeleteDialog : false});\r\n                                   });\r\n                               }}\r\n                               onHide={() => {\r\n                                   this.setState({showDeleteDialog: false});\r\n                               }}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AccidentList;\r\n","import React, { Component } from 'react';\r\nimport {EditTooltip, DeleteTooltip} from \"../tooltips\";\r\nimport {OverlayTrigger} from \"react-bootstrap\";\r\n\r\nclass RoadAccidentParticipant extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const roadAccidentParticipant = this.props.roadAccidentParticipant;\r\n        return (\r\n            <tr key={roadAccidentParticipant.code_road_accident_participant}>\r\n                <td>{roadAccidentParticipant.driversLicenseNumber}</td>\r\n                <td>{roadAccidentParticipant.typeParticipation}</td>\r\n                <td>{roadAccidentParticipant.drivingExperience}</td>\r\n                <td>{roadAccidentParticipant.isGuilty}</td>  \r\n                <td>{roadAccidentParticipant.person.idPerson}</td>\r\n                <td>{roadAccidentParticipant.accident.codeAccident}</td>\r\n                <td>{roadAccidentParticipant.offence.codeOffence}</td>\r\n                <td>\r\n                    <div className=\"btn-group\">\r\n                        <OverlayTrigger placement=\"top\" overlay={EditTooltip}>\r\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={this.props.onEdit}>\r\n                                <span className=\"glyphicon glyphicon-pencil\" aria-hidden=\"true\"></span>\r\n                            </button>\r\n                        </OverlayTrigger>\r\n\r\n                        <OverlayTrigger placement=\"top\" overlay={DeleteTooltip}>\r\n                            <button type=\"button\" className=\"btn btn-danger\" onClick={this.props.onDelete}>\r\n                                <span className=\"glyphicon glyphicon-remove\" aria-hidden=\"true\"></span>\r\n                            </button>\r\n                        </OverlayTrigger>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RoadAccidentParticipant;\r\n","import React, { Component } from 'react';\r\nimport { FormGroup, Form, ControlLabel, FormControl, Modal } from \"react-bootstrap\";\r\nimport { getAccidents } from '../../routine/utils/services/accident-service'\r\nimport { getPersons} from '../../routine/utils/services/person-service'\r\nimport { getOffences} from '../../routine/utils/services/offence-service'\r\nimport Combobox from 'react-widgets/lib/Combobox'\r\n\r\nexport default class EditCarDialog extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            entity : {},\r\n            availablePersons : [],\r\n            availableAccidents : [],\r\n            availableOffences : []\r\n\r\n        }\r\n        this.updateEntity = this.updateEntity.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadPersons();\r\n        this.loadAccidents();\r\n        this.loadOffences();\r\n\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps, nextContext) {\r\n        const value = nextProps.value;\r\n        if (value === null || value === undefined) {\r\n            let entityPerson = this.state.availablePersons ? this.state.availablePersons[0] : null;\r\n            let entityAccident = this.state.availableAccidents ? this.state.availableAccidents[0] : null;\r\n            let entityOffence = this.state.availableOffences ? this.state.availableOffences[0] : null;\r\n            this.updateEntity('person', entityPerson, 'accident', entityAccident, 'offence', entityOffence);\r\n        }\r\n    }\r\n\r\n    loadPersons() {\r\n        getPersons().then(persons => {\r\n            this.setState({availablePersons : persons});\r\n        })\r\n    }\r\n\r\n    loadAccidents() {\r\n        getAccidents().then(accidents => {\r\n            this.setState({availableAccidents : accidents});\r\n        })\r\n    }\r\n\r\n    loadOffences() {\r\n        getOffences().then(offences => {\r\n            this.setState({availableOffences : offences});\r\n        })\r\n    }\r\n\r\n\r\n    handleSubmit(event) {\r\n        const {onConfirm, value}  = this.props;\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        const entity = Object.assign({}, value || {}, this.state.entity);\r\n        onConfirm(entity);\r\n    }\r\n\r\n    updateEntity(propName, newVal) {\r\n        this.setState({entity: Object.assign({}, this.state.entity, {[propName]: newVal})});\r\n    }\r\n\r\n    updateEntity(propName, newVal, propName2, newVal2) {\r\n        this.setState({entity: Object.assign({}, this.state.entity, {[propName]: newVal}, {[propName2]: newVal2})});\r\n    }\r\n\r\n    updateEntity(propName, newVal, propName2, newVal2, propName3, newVal3) {\r\n        this.setState({entity: Object.assign({}, this.state.entity, {[propName]: newVal}, {[propName2]: newVal2} , {[propName3]: newVal3})});\r\n    }\r\n\r\n    render() {\r\n        const {show, onHide, title, value} = this.props;\r\n\r\n        let PersonItem = ({item}) => (\r\n            <span>\r\n                <strong>{item.idPerson}</strong>\r\n            </span>\r\n        );\r\n\r\n        let AccidentItem = ({item}) => (\r\n            <span>\r\n                <strong>{item.codeAccident}</strong>\r\n            </span>\r\n        );\r\n\r\n        let OffenceItem = ({item}) => (\r\n            <span>\r\n                <strong>{item.codeOffence}</strong>\r\n            </span>\r\n        );\r\n        let availablePersons = this.state.availablePersons;\r\n        let availableAccidents = this.state.availableAccidents;\r\n        let availableOffences = this.state.availableOffences;\r\n        let entity = this.state.entity;\r\n        return (\r\n          <Modal show={show}\r\n                 onHide={onHide}\r\n                 aria-labelledby=\"contained-modal-title-vcenter\"\r\n                 centered>\r\n              <Modal.Header closeButton>\r\n                  <Modal.Title>{title}</Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                  <Form onSubmit={e => this.handleSubmit(e)}>\r\n                      <FormGroup>\r\n                          <ControlLabel>{'Номер водительского удостоверения'}</ControlLabel>\r\n                          <FormControl type=\"text\"\r\n                                       defaultValue={value ? value.driversLicenseNumber : null}\r\n                                       onChange={(newVal) => {\r\n                                           this.updateEntity('driversLicenseNumber', newVal.target.value);\r\n                                       }}/>\r\n                          <FormControl.Feedback/>\r\n                      </FormGroup>\r\n\r\n                      <FormGroup>\r\n                          <ControlLabel>{'Вид участия'}</ControlLabel>\r\n                          <FormControl type=\"text\"\r\n                                       defaultValue={value ? value.typeParticipation : null}\r\n                                       onChange={(newVal) => {\r\n                                           this.updateEntity('typeParticipation', newVal.target.value);\r\n                                       }}/>\r\n                          <FormControl.Feedback/>\r\n                      </FormGroup>\r\n\r\n                      <FormGroup>\r\n                          <ControlLabel>{'Водительский стаж'}</ControlLabel>\r\n                          <FormControl type=\"text\"\r\n                                       defaultValue={value ? value.drivingExperience : null}\r\n                                       onChange={(newVal) => {\r\n                                           this.updateEntity('drivingExperience', newVal.target.value);\r\n                                       }}/>\r\n                          <FormControl.Feedback/>\r\n                      </FormGroup>\r\n\r\n                      <FormGroup>\r\n                          <ControlLabel>{'Виновен ли?'}</ControlLabel>\r\n                          <FormControl type=\"text\"\r\n                                       defaultValue={value ? value.isGuilty : null}\r\n                                       onChange={(newVal) => {\r\n                                           this.updateEntity('isGuilty', newVal.target.value);\r\n                                       }}/>\r\n                          <FormControl.Feedback/>\r\n                      </FormGroup>\r\n\r\n                      <FormGroup>\r\n                          <ControlLabel>{'Код человека'}</ControlLabel>\r\n                          <Combobox data={availablePersons}\r\n                                    defaultValue={value ? value.person : (availablePersons ? availablePersons[0] : null)}\r\n                                    itemComponent={PersonItem}\r\n                                    textField='idPerson'\r\n                                    value={entity.person}\r\n                                    onChange={item => {\r\n                                        this.updateEntity('person', item);\r\n                                    }}/>\r\n                      </FormGroup>\r\n\r\n                      <FormGroup>\r\n                          <ControlLabel>{'Код ДТП'}</ControlLabel>\r\n                          <Combobox data={availableAccidents}\r\n                                    defaultValue={value ? value.person : (availableAccidents ? availableAccidents[0] : null)}\r\n                                    itemComponent={AccidentItem}\r\n                                    textField='codeAccident'\r\n                                    value={entity.accident}\r\n                                    onChange={item => {\r\n                                        this.updateEntity('accident', item);\r\n                                    }}/>\r\n                      </FormGroup>\r\n\r\n                      <FormGroup>\r\n                          <ControlLabel>{'Код нарушения'}</ControlLabel>\r\n                          <Combobox data={availableOffences}\r\n                                    defaultValue={value ? value.person : (availableOffences ? availableOffences[0] : null)}\r\n                                    itemComponent={OffenceItem}\r\n                                    textField='codeOffence'\r\n                                    value={entity.offence}\r\n                                    onChange={item => {\r\n                                        this.updateEntity('offence', item);\r\n                                    }}/>\r\n                      </FormGroup>\r\n\r\n                      <Modal.Footer style={{paddingBottom: 0}}>\r\n                          <button type='submit' className=\"btn btn-success\">Подтвердить</button>\r\n                          <button type='button' onClick={onHide} className=\"btn btn-default\">Отмена</button>\r\n                      </Modal.Footer>\r\n                  </Form>\r\n              </Modal.Body>\r\n          </Modal>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {OverlayTrigger, PageHeader, Table, Tooltip} from \"react-bootstrap\";\r\nimport RoadAccidentParticipant  from './road-accident-participant'\r\nimport {\r\n    getRoadAccidentParticipants ,\r\n    addRoadAccidentParticipant ,\r\n    updateRoadAccidentParticipant ,\r\n    deleteRoadAccidentParticipant  } from '../../routine/utils/services/road-accident-participant-service'\r\n\r\nimport EditRoadAccidentParticipantDialog from './edit-road-accident-participant-dialog'\r\nimport ConfirmDialog from '../confirm-dialog'\r\nimport {AddBtnStyle, PageHeaderStyle} from '../fast-styles'\r\n\r\nclass RoadAccidentParticipantList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentEditRoadAccidentParticipant : null,\r\n            currentDeleteRoadAccidentParticipant : null,\r\n            roadAccidentParticipants: [],\r\n            showCreateDialog : false,\r\n            showEditDialog : false,\r\n            showDeleteDialog : false};\r\n        this.loadData = this.loadData.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n\r\n    loadData() {\r\n        getRoadAccidentParticipants()\r\n            .then(data => {\r\n                let x = Object.assign({}, this.state.roadAccidentParticipants, {data})\r\n                this.setState(\r\n                    {roadAccidentParticipants : x.data });\r\n            });\r\n    }\r\n\r\n    getDeleteMessage() {\r\n        let roadAccidentParticipant = this.state.currentDeleteRoadAccidentParticipant;\r\n        if (roadAccidentParticipant === null || roadAccidentParticipant === undefined)\r\n            return \"Вы действительно хотите удалить выбранный элемент?\";\r\n        return \"Вы действительно хотите удалить участника ДТП '\"\r\n         + roadAccidentParticipant.code_road_accident_participant +  \"'?\";\r\n    }\r\n\r\n    render() {\r\n        const AddTooltip = (\r\n            <Tooltip id=\"showCarsTooltip\">\r\n                Добавить участника ДТП\r\n            </Tooltip>\r\n        );\r\n\r\n        return (\r\n            <div>\r\n                <PageHeader style={PageHeaderStyle}>\r\n                    Участники ДТП\r\n                    <OverlayTrigger placement=\"right\" overlay={AddTooltip}>\r\n                        <button type=\"button\" style={AddBtnStyle} className=\"btn btn-default\" onClick={() => {this.setState({showCreateDialog: true});}}>\r\n                            <span className=\"glyphicon glyphicon-plus\" aria-hidden=\"true\"></span>\r\n                        </button>\r\n                    </OverlayTrigger>\r\n                </PageHeader>\r\n\r\n            <Table striped bordered condensed hover responsive>\r\n                <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>Номер водительского удостоверения</th>\r\n                        <th>Вид участия</th>\r\n                        <th>Водительский стаж</th>\r\n                        <th>Вина</th>\r\n                        <th>Код человека</th>\r\n                        <th>Код ДТП</th>\r\n                        <th>Код нарушения</th>\r\n                        <th>Действия</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {\r\n                    this.state.roadAccidentParticipants.map(roadAccidentParticipant => {\r\n                        return <RoadAccidentParticipant key={roadAccidentParticipant.code_road_accident_participant} roadAccidentParticipant={roadAccidentParticipant}\r\n                                            onEdit={e => {\r\n                                                this.setState({currentEditRoadAccidentParticipant : roadAccidentParticipant, showEditDialog : true});\r\n                                            } }\r\n                                            onDelete={e => {\r\n                                                this.setState({currentDeleteRoadAccidentParticipant : roadAccidentParticipant, showDeleteDialog : true});\r\n                                            } }/>\r\n                    })\r\n                }\r\n                </tbody>\r\n            </Table>\r\n                <EditRoadAccidentParticipantDialog title={'Добавить участника ДТП'}\r\n                                       show={this.state.showCreateDialog}\r\n                                       onConfirm={(entity) => {\r\n                                            addRoadAccidentParticipant(entity).then(() => {\r\n                                            this.loadData();\r\n                                            this.setState({showCreateDialog: false});\r\n                                           });\r\n                                       }}\r\n                                       onHide={() => {\r\n                                           this.setState({showCreateDialog: false});\r\n                                       }}/>\r\n\r\n                <EditRoadAccidentParticipantDialog title={'Редактировать участника ДТП'}\r\n                                       show={this.state.showEditDialog}\r\n                                       value={this.state.currentEditRoadAccidentParticipant}\r\n                                       onConfirm={(entity) => {\r\n                                            updateRoadAccidentParticipant(entity).then(() => {\r\n                                            this.loadData();\r\n                                            this.setState({showEditDialog: false});\r\n                                           });\r\n                                       }}\r\n                                       onHide={() => {\r\n                                           this.setState({showEditDialog: false});\r\n                                       }}/>\r\n\r\n                <ConfirmDialog title={'Удалить участника ДТП'}\r\n                               message={this.getDeleteMessage()}\r\n                                show={this.state.showDeleteDialog}\r\n                               onConfirm={() => {\r\n                                    deleteRoadAccidentParticipant(this.state.currentDeleteRoadAccidentParticipant.id).then(() => {\r\n                                    this.loadData();\r\n                                    this.setState({showDeleteDialog : false});\r\n                                   });\r\n                               }}\r\n                               onHide={() => {\r\n                                   this.setState({showDeleteDialog: false});\r\n                               }}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RoadAccidentParticipantList;\r\n","import {\r\n    sendGetRequest,\r\n    sendPostRequest,\r\n    sendPutRequest,\r\n    sendDeleteRequest } from './common-service'\r\n\r\nimport {\r\n    SERVER_URL,\r\n    APP_NAME,\r\n    PAGE_CAR_LIST_URL } from '../../constants'\r\n\r\nexport function getRoadAccidentParticipants() {\r\n    const url = SERVER_URL + APP_NAME + PAGE_CAR_LIST_URL;\r\n    return sendGetRequest(url);\r\n}\r\n\r\nexport function addRoadAccidentParticipant(car) {\r\n    const url = SERVER_URL + APP_NAME + PAGE_CAR_LIST_URL;\r\n    return sendPostRequest(url, car);\r\n}\r\n\r\nexport function updateRoadAccidentParticipant(car) {\r\n    const url = SERVER_URL + APP_NAME + PAGE_CAR_LIST_URL;\r\n    return sendPutRequest(url, car);\r\n}\r\n\r\nexport function deleteRoadAccidentParticipant(code_road_accident_participant) {\r\n    const url = SERVER_URL + APP_NAME + PAGE_CAR_LIST_URL + \"/\" + code_road_accident_participant;\r\n    return sendDeleteRequest(url);\r\n}","import React, { Component } from 'react';\r\nimport {Navbar, Nav, NavItem} from \"react-bootstrap\";\r\nimport {Router, Route, BrowserRouter, Switch} from 'react-router-dom';\r\nimport LoginComponent from './security/login'\r\n\r\nimport CarList from './car/car-list';\r\nimport PersonList from './person/person-list'\r\nimport OffenceList from './offence/offence-list'\r\nimport AccidentList from './accident/accident-list'\r\nimport RoadAccidentParticipantList from './road-accident-participant/road-accident-participant-list'\r\nimport {tryLogin, logout} from \"../routine/utils/services/login-service\";\r\n\r\nimport AppHeader from './app-header'\r\nimport {getAccessToken, getCurrentUsername} from \"../routine/utils/services/login-service\";\r\n\r\nimport './logged-panel'\r\n\r\nclass LoggedPanelComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username : ''\r\n        }\r\n        this.handleLogout = this.handleLogout.bind(this);\r\n    }\r\n\r\n    componentDidMount() {;\r\n        let currentUsername = getCurrentUsername();\r\n        this.setState({username : currentUsername});\r\n    }\r\n\r\n    handleLogout() {\r\n        logout();\r\n    }\r\n\r\n    render() {\r\n        // if (this.state.isLoggedIn) {\r\n        return (\r\n            <div>\r\n                <AppHeader logoutHandler={this.handleLogout} username={this.state.username}/>\r\n                <BrowserRouter>\r\n                    <Switch>\r\n                        <Route exact path=\"/cars\" component={CarList}/>\r\n                        <Route exact path=\"/roadAccidentParticipants\" component={RoadAccidentParticipantList}/>\r\n                        <Route exact path=\"/accidents\" component={AccidentList}/>\r\n                        <Route exact path=\"/persons\" component={PersonList}/>\r\n                        <Route exact path=\"/offences\" component={OffenceList}/>\r\n                        <Route path=\"/\" exact component={AccidentList}/>\r\n                    </Switch>\r\n                </BrowserRouter>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default LoggedPanelComponent;","import React, { Component } from 'react';\r\nimport {Navbar, Nav, NavItem} from \"react-bootstrap\";\r\nimport {Router, Route, BrowserRouter, Switch} from 'react-router-dom';\r\nimport LoginComponent from './security/login'\r\nimport '../components/main.css'\r\n\r\nimport {tryLogin, logout} from \"../routine/utils/services/login-service\";\r\n\r\nimport AppHeader from './app-header'\r\nimport {getAccessToken} from \"../routine/utils/services/login-service\";\r\n\r\nimport LoggedPanelComponent from './logged-panel'\r\n\r\nclass MainComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoggedIn : false\r\n        }\r\n        this.handleLogout = this.handleLogout.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        let accessToken = getAccessToken();\r\n        this.setState({isLoggedIn: accessToken ? true : false});\r\n    }\r\n\r\n    handleLogin({login, password}, callback){\r\n        let g= tryLogin({login, password}, (isSuccess) => callback(isSuccess));\r\n        if (g) {\r\n         //   window.location.href = \"/\";\r\n        //    this.pushHistory(\"/carBodyTypes\");\r\n        }\r\n    }\r\n\r\n    handleLogout() {\r\n        logout();\r\n    }\r\n\r\n    render() {\r\n       // if (this.state.isLoggedIn) {\r\n            return (\r\n                <div className='DarkDiv'>\r\n                    <BrowserRouter>\r\n                        <Switch>\r\n                            <Route exact path = \"/signin\"\r\n                                   render = {props => (\r\n                                       <LoginComponent {...props} loginRequest={this.handleLogin}/>\r\n                                   )}/>\r\n                            <Route component={LoggedPanelComponent}/>\r\n                        </Switch>\r\n                    </BrowserRouter>\r\n                </div>\r\n            );\r\n     //   }\r\n       // else {\r\n       //     return ( <LoginComponent loginRequest={this.handleLogin}/>); }\r\n\r\n    }\r\n}\r\n\r\nexport default MainComponent;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport MainComponent from './components/main';\n\nclass App extends Component {\n  render() {\n    return (\n          <MainComponent/>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-widgets/dist/css/react-widgets.css';\n//import Main from './app/main.component';\n\nReactDOM.render(<App />, document.getElementById('root'));\n//ReactDOM.render(<Main />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}